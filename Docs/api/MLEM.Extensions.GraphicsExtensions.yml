### YamlMime:ManagedReference
items:
- uid: MLEM.Extensions.GraphicsExtensions
  commentId: T:MLEM.Extensions.GraphicsExtensions
  id: GraphicsExtensions
  parent: MLEM.Extensions
  children:
  - MLEM.Extensions.GraphicsExtensions.ApplyChangesSafely(Microsoft.Xna.Framework.GraphicsDeviceManager)
  - MLEM.Extensions.GraphicsExtensions.ResetWidthAndHeight(Microsoft.Xna.Framework.GraphicsDeviceManager,Microsoft.Xna.Framework.GameWindow)
  - MLEM.Extensions.GraphicsExtensions.SetFullscreen(Microsoft.Xna.Framework.GraphicsDeviceManager,System.Boolean)
  - MLEM.Extensions.GraphicsExtensions.WithRenderTarget(Microsoft.Xna.Framework.Graphics.GraphicsDevice,Microsoft.Xna.Framework.Graphics.RenderTarget2D)
  langs:
  - csharp
  - vb
  name: GraphicsExtensions
  nameWithType: GraphicsExtensions
  fullName: MLEM.Extensions.GraphicsExtensions
  type: Class
  source:
    remote:
      path: MLEM/Extensions/GraphicsExtensions.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: GraphicsExtensions
    path: ../MLEM/Extensions/GraphicsExtensions.cs
    startLine: 9
  assemblies:
  - MLEM
  namespace: MLEM.Extensions
  summary: "\nA set of extensions for dealing with <xref href=\"Microsoft.Xna.Framework.Graphics.GraphicsDevice\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Microsoft.Xna.Framework.GraphicsDeviceManager\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public static class GraphicsExtensions
    content.vb: Public Module GraphicsExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: MLEM.Extensions.GraphicsExtensions.SetFullscreen(Microsoft.Xna.Framework.GraphicsDeviceManager,System.Boolean)
  commentId: M:MLEM.Extensions.GraphicsExtensions.SetFullscreen(Microsoft.Xna.Framework.GraphicsDeviceManager,System.Boolean)
  id: SetFullscreen(Microsoft.Xna.Framework.GraphicsDeviceManager,System.Boolean)
  isExtensionMethod: true
  parent: MLEM.Extensions.GraphicsExtensions
  langs:
  - csharp
  - vb
  name: SetFullscreen(GraphicsDeviceManager, Boolean)
  nameWithType: GraphicsExtensions.SetFullscreen(GraphicsDeviceManager, Boolean)
  fullName: MLEM.Extensions.GraphicsExtensions.SetFullscreen(Microsoft.Xna.Framework.GraphicsDeviceManager, System.Boolean)
  type: Method
  source:
    remote:
      path: MLEM/Extensions/GraphicsExtensions.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: SetFullscreen
    path: ../MLEM/Extensions/GraphicsExtensions.cs
    startLine: 20
  assemblies:
  - MLEM
  namespace: MLEM.Extensions
  summary: "\nSets the graphics device manager to fullscreen, properly taking into account the preferred backbuffer width and height to avoid lower resolutions for higher resolution screens.\n"
  example: []
  syntax:
    content: public static void SetFullscreen(this GraphicsDeviceManager manager, bool fullscreen)
    parameters:
    - id: manager
      type: Microsoft.Xna.Framework.GraphicsDeviceManager
      description: The graphics device manager
    - id: fullscreen
      type: System.Boolean
      description: True if fullscreen should be enabled, false if disabled
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub SetFullscreen(manager As GraphicsDeviceManager, fullscreen As Boolean)
  overload: MLEM.Extensions.GraphicsExtensions.SetFullscreen*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Thrown when changing out of fullscreen mode before changing into fullscreen mode using this method
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MLEM.Extensions.GraphicsExtensions.ApplyChangesSafely(Microsoft.Xna.Framework.GraphicsDeviceManager)
  commentId: M:MLEM.Extensions.GraphicsExtensions.ApplyChangesSafely(Microsoft.Xna.Framework.GraphicsDeviceManager)
  id: ApplyChangesSafely(Microsoft.Xna.Framework.GraphicsDeviceManager)
  isExtensionMethod: true
  parent: MLEM.Extensions.GraphicsExtensions
  langs:
  - csharp
  - vb
  name: ApplyChangesSafely(GraphicsDeviceManager)
  nameWithType: GraphicsExtensions.ApplyChangesSafely(GraphicsDeviceManager)
  fullName: MLEM.Extensions.GraphicsExtensions.ApplyChangesSafely(Microsoft.Xna.Framework.GraphicsDeviceManager)
  type: Method
  source:
    remote:
      path: MLEM/Extensions/GraphicsExtensions.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: ApplyChangesSafely
    path: ../MLEM/Extensions/GraphicsExtensions.cs
    startLine: 44
  assemblies:
  - MLEM
  namespace: MLEM.Extensions
  summary: "\nSave version of <xref href=\"Microsoft.Xna.Framework.GraphicsDeviceManager.ApplyChanges\" data-throw-if-not-resolved=\"false\"></xref> that doesn&apos;t reset window size to defaults\n"
  example: []
  syntax:
    content: public static void ApplyChangesSafely(this GraphicsDeviceManager manager)
    parameters:
    - id: manager
      type: Microsoft.Xna.Framework.GraphicsDeviceManager
      description: The graphics device manager
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub ApplyChangesSafely(manager As GraphicsDeviceManager)
  overload: MLEM.Extensions.GraphicsExtensions.ApplyChangesSafely*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MLEM.Extensions.GraphicsExtensions.ResetWidthAndHeight(Microsoft.Xna.Framework.GraphicsDeviceManager,Microsoft.Xna.Framework.GameWindow)
  commentId: M:MLEM.Extensions.GraphicsExtensions.ResetWidthAndHeight(Microsoft.Xna.Framework.GraphicsDeviceManager,Microsoft.Xna.Framework.GameWindow)
  id: ResetWidthAndHeight(Microsoft.Xna.Framework.GraphicsDeviceManager,Microsoft.Xna.Framework.GameWindow)
  isExtensionMethod: true
  parent: MLEM.Extensions.GraphicsExtensions
  langs:
  - csharp
  - vb
  name: ResetWidthAndHeight(GraphicsDeviceManager, GameWindow)
  nameWithType: GraphicsExtensions.ResetWidthAndHeight(GraphicsDeviceManager, GameWindow)
  fullName: MLEM.Extensions.GraphicsExtensions.ResetWidthAndHeight(Microsoft.Xna.Framework.GraphicsDeviceManager, Microsoft.Xna.Framework.GameWindow)
  type: Method
  source:
    remote:
      path: MLEM/Extensions/GraphicsExtensions.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: ResetWidthAndHeight
    path: ../MLEM/Extensions/GraphicsExtensions.cs
    startLine: 59
  assemblies:
  - MLEM
  namespace: MLEM.Extensions
  summary: "\nResets preferred width and height back to the window&apos;s default bound values.\n"
  example: []
  syntax:
    content: public static void ResetWidthAndHeight(this GraphicsDeviceManager manager, GameWindow window)
    parameters:
    - id: manager
      type: Microsoft.Xna.Framework.GraphicsDeviceManager
      description: The graphics device manager
    - id: window
      type: Microsoft.Xna.Framework.GameWindow
      description: The window whose bounds to use
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub ResetWidthAndHeight(manager As GraphicsDeviceManager, window As GameWindow)
  overload: MLEM.Extensions.GraphicsExtensions.ResetWidthAndHeight*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MLEM.Extensions.GraphicsExtensions.WithRenderTarget(Microsoft.Xna.Framework.Graphics.GraphicsDevice,Microsoft.Xna.Framework.Graphics.RenderTarget2D)
  commentId: M:MLEM.Extensions.GraphicsExtensions.WithRenderTarget(Microsoft.Xna.Framework.Graphics.GraphicsDevice,Microsoft.Xna.Framework.Graphics.RenderTarget2D)
  id: WithRenderTarget(Microsoft.Xna.Framework.Graphics.GraphicsDevice,Microsoft.Xna.Framework.Graphics.RenderTarget2D)
  isExtensionMethod: true
  parent: MLEM.Extensions.GraphicsExtensions
  langs:
  - csharp
  - vb
  name: WithRenderTarget(GraphicsDevice, RenderTarget2D)
  nameWithType: GraphicsExtensions.WithRenderTarget(GraphicsDevice, RenderTarget2D)
  fullName: MLEM.Extensions.GraphicsExtensions.WithRenderTarget(Microsoft.Xna.Framework.Graphics.GraphicsDevice, Microsoft.Xna.Framework.Graphics.RenderTarget2D)
  type: Method
  source:
    remote:
      path: MLEM/Extensions/GraphicsExtensions.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: WithRenderTarget
    path: ../MLEM/Extensions/GraphicsExtensions.cs
    startLine: 73
  assemblies:
  - MLEM
  namespace: MLEM.Extensions
  summary: "\nStarts a new <xref href=\"MLEM.Extensions.GraphicsExtensions.TargetContext\" data-throw-if-not-resolved=\"false\"></xref> using the specified render target.\nThe returned context automatically disposes when used in a <code>using</code> statement, which causes any previously applied render targets to be reapplied automatically.\n"
  example: []
  syntax:
    content: public static GraphicsExtensions.TargetContext WithRenderTarget(this GraphicsDevice device, RenderTarget2D target)
    parameters:
    - id: device
      type: Microsoft.Xna.Framework.Graphics.GraphicsDevice
      description: The graphics device
    - id: target
      type: Microsoft.Xna.Framework.Graphics.RenderTarget2D
      description: The render target to apply
    return:
      type: MLEM.Extensions.GraphicsExtensions.TargetContext
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function WithRenderTarget(device As GraphicsDevice, target As RenderTarget2D) As GraphicsExtensions.TargetContext
  overload: MLEM.Extensions.GraphicsExtensions.WithRenderTarget*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Xna.Framework.Graphics.GraphicsDevice
  commentId: T:Microsoft.Xna.Framework.Graphics.GraphicsDevice
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: GraphicsDevice
  nameWithType: GraphicsDevice
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsDevice
- uid: Microsoft.Xna.Framework.GraphicsDeviceManager
  commentId: T:Microsoft.Xna.Framework.GraphicsDeviceManager
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: GraphicsDeviceManager
  nameWithType: GraphicsDeviceManager
  fullName: Microsoft.Xna.Framework.GraphicsDeviceManager
- uid: MLEM.Extensions
  commentId: N:MLEM.Extensions
  name: MLEM.Extensions
  nameWithType: MLEM.Extensions
  fullName: MLEM.Extensions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
- uid: MLEM.Extensions.GraphicsExtensions.SetFullscreen*
  commentId: Overload:MLEM.Extensions.GraphicsExtensions.SetFullscreen
  name: SetFullscreen
  nameWithType: GraphicsExtensions.SetFullscreen
  fullName: MLEM.Extensions.GraphicsExtensions.SetFullscreen
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Xna.Framework.GraphicsDeviceManager.ApplyChanges
  commentId: M:Microsoft.Xna.Framework.GraphicsDeviceManager.ApplyChanges
  isExternal: true
- uid: MLEM.Extensions.GraphicsExtensions.ApplyChangesSafely*
  commentId: Overload:MLEM.Extensions.GraphicsExtensions.ApplyChangesSafely
  name: ApplyChangesSafely
  nameWithType: GraphicsExtensions.ApplyChangesSafely
  fullName: MLEM.Extensions.GraphicsExtensions.ApplyChangesSafely
- uid: MLEM.Extensions.GraphicsExtensions.ResetWidthAndHeight*
  commentId: Overload:MLEM.Extensions.GraphicsExtensions.ResetWidthAndHeight
  name: ResetWidthAndHeight
  nameWithType: GraphicsExtensions.ResetWidthAndHeight
  fullName: MLEM.Extensions.GraphicsExtensions.ResetWidthAndHeight
- uid: Microsoft.Xna.Framework.GameWindow
  commentId: T:Microsoft.Xna.Framework.GameWindow
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: GameWindow
  nameWithType: GameWindow
  fullName: Microsoft.Xna.Framework.GameWindow
- uid: MLEM.Extensions.GraphicsExtensions.TargetContext
  commentId: T:MLEM.Extensions.GraphicsExtensions.TargetContext
  parent: MLEM.Extensions
  name: GraphicsExtensions.TargetContext
  nameWithType: GraphicsExtensions.TargetContext
  fullName: MLEM.Extensions.GraphicsExtensions.TargetContext
- uid: MLEM.Extensions.GraphicsExtensions.WithRenderTarget*
  commentId: Overload:MLEM.Extensions.GraphicsExtensions.WithRenderTarget
  name: WithRenderTarget
  nameWithType: GraphicsExtensions.WithRenderTarget
  fullName: MLEM.Extensions.GraphicsExtensions.WithRenderTarget
- uid: Microsoft.Xna.Framework.Graphics.RenderTarget2D
  commentId: T:Microsoft.Xna.Framework.Graphics.RenderTarget2D
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: RenderTarget2D
  nameWithType: RenderTarget2D
  fullName: Microsoft.Xna.Framework.Graphics.RenderTarget2D
