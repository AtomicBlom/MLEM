### YamlMime:ManagedReference
items:
- uid: MLEM.Textures.UniformTextureAtlas
  commentId: T:MLEM.Textures.UniformTextureAtlas
  id: UniformTextureAtlas
  parent: MLEM.Textures
  children:
  - MLEM.Textures.UniformTextureAtlas.#ctor(Microsoft.Xna.Framework.Graphics.Texture2D,System.Int32,System.Int32)
  - MLEM.Textures.UniformTextureAtlas.Item(Microsoft.Xna.Framework.Point)
  - MLEM.Textures.UniformTextureAtlas.Item(Microsoft.Xna.Framework.Rectangle)
  - MLEM.Textures.UniformTextureAtlas.Item(System.Int32)
  - MLEM.Textures.UniformTextureAtlas.Item(System.Int32,System.Int32)
  - MLEM.Textures.UniformTextureAtlas.Item(System.Int32,System.Int32,System.Int32,System.Int32)
  - MLEM.Textures.UniformTextureAtlas.RegionAmountX
  - MLEM.Textures.UniformTextureAtlas.RegionAmountY
  - MLEM.Textures.UniformTextureAtlas.RegionHeight
  - MLEM.Textures.UniformTextureAtlas.RegionWidth
  - MLEM.Textures.UniformTextureAtlas.Texture
  langs:
  - csharp
  - vb
  name: UniformTextureAtlas
  nameWithType: UniformTextureAtlas
  fullName: MLEM.Textures.UniformTextureAtlas
  type: Class
  source:
    remote:
      path: MLEM/Textures/UniformTextureAtlas.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: UniformTextureAtlas
    path: ../MLEM/Textures/UniformTextureAtlas.cs
    startLine: 12
  assemblies:
  - MLEM
  namespace: MLEM.Textures
  summary: "\nThis class represents an atlas of <xref href=\"MLEM.Textures.TextureRegion\" data-throw-if-not-resolved=\"false\"></xref> objects that is uniform.\nUniform, in this case, means that the texture atlas&apos; size is not determined by the width and height of the texture, but instead by the amount of sub-regions that the atlas has in the x and y direction.\nUsing a uniform texture atlas over a regular texture as an atlas allows for texture artists to create higher resolution textures without coordinates becoming off.\n"
  example: []
  syntax:
    content: 'public class UniformTextureAtlas : GenericDataHolder'
    content.vb: >-
      Public Class UniformTextureAtlas

          Inherits GenericDataHolder
  inheritance:
  - System.Object
  - MLEM.Misc.GenericDataHolder
  inheritedMembers:
  - MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
  - MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  - MLEM.Misc.GenericDataHolder.GetDataKeys
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: MLEM.Textures.UniformTextureAtlas.Texture
  commentId: F:MLEM.Textures.UniformTextureAtlas.Texture
  id: Texture
  parent: MLEM.Textures.UniformTextureAtlas
  langs:
  - csharp
  - vb
  name: Texture
  nameWithType: UniformTextureAtlas.Texture
  fullName: MLEM.Textures.UniformTextureAtlas.Texture
  type: Field
  source:
    remote:
      path: MLEM/Textures/UniformTextureAtlas.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: Texture
    path: ../MLEM/Textures/UniformTextureAtlas.cs
    startLine: 17
  assemblies:
  - MLEM
  namespace: MLEM.Textures
  summary: "\nThe texture to use for this atlas\n"
  example: []
  syntax:
    content: public readonly Texture2D Texture
    return:
      type: Microsoft.Xna.Framework.Graphics.Texture2D
    content.vb: Public ReadOnly Texture As Texture2D
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: MLEM.Textures.UniformTextureAtlas.RegionAmountX
  commentId: F:MLEM.Textures.UniformTextureAtlas.RegionAmountX
  id: RegionAmountX
  parent: MLEM.Textures.UniformTextureAtlas
  langs:
  - csharp
  - vb
  name: RegionAmountX
  nameWithType: UniformTextureAtlas.RegionAmountX
  fullName: MLEM.Textures.UniformTextureAtlas.RegionAmountX
  type: Field
  source:
    remote:
      path: MLEM/Textures/UniformTextureAtlas.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: RegionAmountX
    path: ../MLEM/Textures/UniformTextureAtlas.cs
    startLine: 21
  assemblies:
  - MLEM
  namespace: MLEM.Textures
  summary: "\nThe amount of sub-regions this atlas has in the x direction\n"
  example: []
  syntax:
    content: public readonly int RegionAmountX
    return:
      type: System.Int32
    content.vb: Public ReadOnly RegionAmountX As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: MLEM.Textures.UniformTextureAtlas.RegionAmountY
  commentId: F:MLEM.Textures.UniformTextureAtlas.RegionAmountY
  id: RegionAmountY
  parent: MLEM.Textures.UniformTextureAtlas
  langs:
  - csharp
  - vb
  name: RegionAmountY
  nameWithType: UniformTextureAtlas.RegionAmountY
  fullName: MLEM.Textures.UniformTextureAtlas.RegionAmountY
  type: Field
  source:
    remote:
      path: MLEM/Textures/UniformTextureAtlas.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: RegionAmountY
    path: ../MLEM/Textures/UniformTextureAtlas.cs
    startLine: 25
  assemblies:
  - MLEM
  namespace: MLEM.Textures
  summary: "\nThe amount of sub-regions this atlas has in the y direction\n"
  example: []
  syntax:
    content: public readonly int RegionAmountY
    return:
      type: System.Int32
    content.vb: Public ReadOnly RegionAmountY As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: MLEM.Textures.UniformTextureAtlas.RegionWidth
  commentId: F:MLEM.Textures.UniformTextureAtlas.RegionWidth
  id: RegionWidth
  parent: MLEM.Textures.UniformTextureAtlas
  langs:
  - csharp
  - vb
  name: RegionWidth
  nameWithType: UniformTextureAtlas.RegionWidth
  fullName: MLEM.Textures.UniformTextureAtlas.RegionWidth
  type: Field
  source:
    remote:
      path: MLEM/Textures/UniformTextureAtlas.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: RegionWidth
    path: ../MLEM/Textures/UniformTextureAtlas.cs
    startLine: 29
  assemblies:
  - MLEM
  namespace: MLEM.Textures
  summary: "\nThe width of each region, based on the texture&apos;s width and the amount of regions\n"
  example: []
  syntax:
    content: public readonly int RegionWidth
    return:
      type: System.Int32
    content.vb: Public ReadOnly RegionWidth As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: MLEM.Textures.UniformTextureAtlas.RegionHeight
  commentId: F:MLEM.Textures.UniformTextureAtlas.RegionHeight
  id: RegionHeight
  parent: MLEM.Textures.UniformTextureAtlas
  langs:
  - csharp
  - vb
  name: RegionHeight
  nameWithType: UniformTextureAtlas.RegionHeight
  fullName: MLEM.Textures.UniformTextureAtlas.RegionHeight
  type: Field
  source:
    remote:
      path: MLEM/Textures/UniformTextureAtlas.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: RegionHeight
    path: ../MLEM/Textures/UniformTextureAtlas.cs
    startLine: 33
  assemblies:
  - MLEM
  namespace: MLEM.Textures
  summary: "\nThe height of reach region, based on the texture&apos;s height and the amount of regions\n"
  example: []
  syntax:
    content: public readonly int RegionHeight
    return:
      type: System.Int32
    content.vb: Public ReadOnly RegionHeight As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: MLEM.Textures.UniformTextureAtlas.Item(System.Int32)
  commentId: P:MLEM.Textures.UniformTextureAtlas.Item(System.Int32)
  id: Item(System.Int32)
  parent: MLEM.Textures.UniformTextureAtlas
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: UniformTextureAtlas.Item[Int32]
  fullName: MLEM.Textures.UniformTextureAtlas.Item[System.Int32]
  type: Property
  source:
    remote:
      path: MLEM/Textures/UniformTextureAtlas.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: this[]
    path: ../MLEM/Textures/UniformTextureAtlas.cs
    startLine: 39
  assemblies:
  - MLEM
  namespace: MLEM.Textures
  summary: "\nReturns the <xref href=\"MLEM.Textures.TextureRegion\" data-throw-if-not-resolved=\"false\"></xref> at this texture atlas&apos;s given index.\nThe index is zero-based, where rows come first and columns come second.\n"
  example: []
  syntax:
    content: public TextureRegion this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based texture index
    return:
      type: MLEM.Textures.TextureRegion
    content.vb: Public ReadOnly Property Item(index As Integer) As TextureRegion
  overload: MLEM.Textures.UniformTextureAtlas.Item*
  nameWithType.vb: UniformTextureAtlas.Item(Int32)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: MLEM.Textures.UniformTextureAtlas.Item(System.Int32)
  name.vb: Item(Int32)
- uid: MLEM.Textures.UniformTextureAtlas.Item(Microsoft.Xna.Framework.Point)
  commentId: P:MLEM.Textures.UniformTextureAtlas.Item(Microsoft.Xna.Framework.Point)
  id: Item(Microsoft.Xna.Framework.Point)
  parent: MLEM.Textures.UniformTextureAtlas
  langs:
  - csharp
  - vb
  name: Item[Point]
  nameWithType: UniformTextureAtlas.Item[Point]
  fullName: MLEM.Textures.UniformTextureAtlas.Item[Microsoft.Xna.Framework.Point]
  type: Property
  source:
    remote:
      path: MLEM/Textures/UniformTextureAtlas.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: this[]
    path: ../MLEM/Textures/UniformTextureAtlas.cs
    startLine: 44
  assemblies:
  - MLEM
  namespace: MLEM.Textures
  summary: "\nReturns the <xref href=\"MLEM.Textures.TextureRegion\" data-throw-if-not-resolved=\"false\"></xref> at this texture atlas&apos; given region position\n"
  example: []
  syntax:
    content: public TextureRegion this[Point point] { get; }
    parameters:
    - id: point
      type: Microsoft.Xna.Framework.Point
      description: The region&apos;s x and y location
    return:
      type: MLEM.Textures.TextureRegion
    content.vb: Public ReadOnly Property Item(point As Point) As TextureRegion
  overload: MLEM.Textures.UniformTextureAtlas.Item*
  nameWithType.vb: UniformTextureAtlas.Item(Point)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: MLEM.Textures.UniformTextureAtlas.Item(Microsoft.Xna.Framework.Point)
  name.vb: Item(Point)
- uid: MLEM.Textures.UniformTextureAtlas.Item(System.Int32,System.Int32)
  commentId: P:MLEM.Textures.UniformTextureAtlas.Item(System.Int32,System.Int32)
  id: Item(System.Int32,System.Int32)
  parent: MLEM.Textures.UniformTextureAtlas
  langs:
  - csharp
  - vb
  name: Item[Int32, Int32]
  nameWithType: UniformTextureAtlas.Item[Int32, Int32]
  fullName: MLEM.Textures.UniformTextureAtlas.Item[System.Int32, System.Int32]
  type: Property
  source:
    remote:
      path: MLEM/Textures/UniformTextureAtlas.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: this[]
    path: ../MLEM/Textures/UniformTextureAtlas.cs
    startLine: 46
  assemblies:
  - MLEM
  namespace: MLEM.Textures
  example: []
  syntax:
    content: public TextureRegion this[int x, int y] { get; }
    parameters:
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    return:
      type: MLEM.Textures.TextureRegion
    content.vb: Public ReadOnly Property Item(x As Integer, y As Integer) As TextureRegion
  overload: MLEM.Textures.UniformTextureAtlas.Item*
  nameWithType.vb: UniformTextureAtlas.Item(Int32, Int32)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: MLEM.Textures.UniformTextureAtlas.Item(System.Int32, System.Int32)
  name.vb: Item(Int32, Int32)
- uid: MLEM.Textures.UniformTextureAtlas.Item(Microsoft.Xna.Framework.Rectangle)
  commentId: P:MLEM.Textures.UniformTextureAtlas.Item(Microsoft.Xna.Framework.Rectangle)
  id: Item(Microsoft.Xna.Framework.Rectangle)
  parent: MLEM.Textures.UniformTextureAtlas
  langs:
  - csharp
  - vb
  name: Item[Rectangle]
  nameWithType: UniformTextureAtlas.Item[Rectangle]
  fullName: MLEM.Textures.UniformTextureAtlas.Item[Microsoft.Xna.Framework.Rectangle]
  type: Property
  source:
    remote:
      path: MLEM/Textures/UniformTextureAtlas.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: this[]
    path: ../MLEM/Textures/UniformTextureAtlas.cs
    startLine: 52
  assemblies:
  - MLEM
  namespace: MLEM.Textures
  summary: "\nReturns the <xref href=\"MLEM.Textures.TextureRegion\" data-throw-if-not-resolved=\"false\"></xref> at this texture atlas&apos; given region position and size.\nNote that the region size is not in pixels, but in region units.\n"
  example: []
  syntax:
    content: public TextureRegion this[Rectangle rect] { get; }
    parameters:
    - id: rect
      type: Microsoft.Xna.Framework.Rectangle
      description: The region&apos;s area
    return:
      type: MLEM.Textures.TextureRegion
    content.vb: Public ReadOnly Property Item(rect As Rectangle) As TextureRegion
  overload: MLEM.Textures.UniformTextureAtlas.Item*
  nameWithType.vb: UniformTextureAtlas.Item(Rectangle)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: MLEM.Textures.UniformTextureAtlas.Item(Microsoft.Xna.Framework.Rectangle)
  name.vb: Item(Rectangle)
- uid: MLEM.Textures.UniformTextureAtlas.Item(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: P:MLEM.Textures.UniformTextureAtlas.Item(System.Int32,System.Int32,System.Int32,System.Int32)
  id: Item(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: MLEM.Textures.UniformTextureAtlas
  langs:
  - csharp
  - vb
  name: Item[Int32, Int32, Int32, Int32]
  nameWithType: UniformTextureAtlas.Item[Int32, Int32, Int32, Int32]
  fullName: MLEM.Textures.UniformTextureAtlas.Item[System.Int32, System.Int32, System.Int32, System.Int32]
  type: Property
  source:
    remote:
      path: MLEM/Textures/UniformTextureAtlas.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: this[]
    path: ../MLEM/Textures/UniformTextureAtlas.cs
    startLine: 54
  assemblies:
  - MLEM
  namespace: MLEM.Textures
  example: []
  syntax:
    content: public TextureRegion this[int x, int y, int width, int height] { get; }
    parameters:
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: width
      type: System.Int32
    - id: height
      type: System.Int32
    return:
      type: MLEM.Textures.TextureRegion
    content.vb: Public ReadOnly Property Item(x As Integer, y As Integer, width As Integer, height As Integer) As TextureRegion
  overload: MLEM.Textures.UniformTextureAtlas.Item*
  nameWithType.vb: UniformTextureAtlas.Item(Int32, Int32, Int32, Int32)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: MLEM.Textures.UniformTextureAtlas.Item(System.Int32, System.Int32, System.Int32, System.Int32)
  name.vb: Item(Int32, Int32, Int32, Int32)
- uid: MLEM.Textures.UniformTextureAtlas.#ctor(Microsoft.Xna.Framework.Graphics.Texture2D,System.Int32,System.Int32)
  commentId: M:MLEM.Textures.UniformTextureAtlas.#ctor(Microsoft.Xna.Framework.Graphics.Texture2D,System.Int32,System.Int32)
  id: '#ctor(Microsoft.Xna.Framework.Graphics.Texture2D,System.Int32,System.Int32)'
  parent: MLEM.Textures.UniformTextureAtlas
  langs:
  - csharp
  - vb
  name: UniformTextureAtlas(Texture2D, Int32, Int32)
  nameWithType: UniformTextureAtlas.UniformTextureAtlas(Texture2D, Int32, Int32)
  fullName: MLEM.Textures.UniformTextureAtlas.UniformTextureAtlas(Microsoft.Xna.Framework.Graphics.Texture2D, System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: MLEM/Textures/UniformTextureAtlas.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: .ctor
    path: ../MLEM/Textures/UniformTextureAtlas.cs
    startLine: 64
  assemblies:
  - MLEM
  namespace: MLEM.Textures
  summary: "\nCreates a new uniform texture atlas with the given texture and region amount.\n"
  example: []
  syntax:
    content: public UniformTextureAtlas(Texture2D texture, int regionAmountX, int regionAmountY)
    parameters:
    - id: texture
      type: Microsoft.Xna.Framework.Graphics.Texture2D
      description: The texture to use for this atlas
    - id: regionAmountX
      type: System.Int32
      description: The amount of texture regions in the x direction
    - id: regionAmountY
      type: System.Int32
      description: The amount of texture regions in the y direction
    content.vb: Public Sub New(texture As Texture2D, regionAmountX As Integer, regionAmountY As Integer)
  overload: MLEM.Textures.UniformTextureAtlas.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: MLEM.Textures.TextureRegion
  commentId: T:MLEM.Textures.TextureRegion
  parent: MLEM.Textures
  name: TextureRegion
  nameWithType: TextureRegion
  fullName: MLEM.Textures.TextureRegion
- uid: MLEM.Textures
  commentId: N:MLEM.Textures
  name: MLEM.Textures
  nameWithType: MLEM.Textures
  fullName: MLEM.Textures
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: MLEM.Misc.GenericDataHolder
  commentId: T:MLEM.Misc.GenericDataHolder
  parent: MLEM.Misc
  name: GenericDataHolder
  nameWithType: GenericDataHolder
  fullName: MLEM.Misc.GenericDataHolder
- uid: MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
  commentId: M:MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
  parent: MLEM.Misc.GenericDataHolder
  isExternal: true
  name: SetData(String, Object)
  nameWithType: GenericDataHolder.SetData(String, Object)
  fullName: MLEM.Misc.GenericDataHolder.SetData(System.String, System.Object)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
    name: SetData
    nameWithType: GenericDataHolder.SetData
    fullName: MLEM.Misc.GenericDataHolder.SetData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
    name: SetData
    nameWithType: GenericDataHolder.SetData
    fullName: MLEM.Misc.GenericDataHolder.SetData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  commentId: M:MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  parent: MLEM.Misc.GenericDataHolder
  isExternal: true
  name: GetData<T>(String)
  nameWithType: GenericDataHolder.GetData<T>(String)
  fullName: MLEM.Misc.GenericDataHolder.GetData<T>(System.String)
  nameWithType.vb: GenericDataHolder.GetData(Of T)(String)
  fullName.vb: MLEM.Misc.GenericDataHolder.GetData(Of T)(System.String)
  name.vb: GetData(Of T)(String)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
    name: GetData<T>
    nameWithType: GenericDataHolder.GetData<T>
    fullName: MLEM.Misc.GenericDataHolder.GetData<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
    name: GetData(Of T)
    nameWithType: GenericDataHolder.GetData(Of T)
    fullName: MLEM.Misc.GenericDataHolder.GetData(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Misc.GenericDataHolder.GetDataKeys
  commentId: M:MLEM.Misc.GenericDataHolder.GetDataKeys
  parent: MLEM.Misc.GenericDataHolder
  name: GetDataKeys()
  nameWithType: GenericDataHolder.GetDataKeys()
  fullName: MLEM.Misc.GenericDataHolder.GetDataKeys()
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.GetDataKeys
    name: GetDataKeys
    nameWithType: GenericDataHolder.GetDataKeys
    fullName: MLEM.Misc.GenericDataHolder.GetDataKeys
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.GetDataKeys
    name: GetDataKeys
    nameWithType: GenericDataHolder.GetDataKeys
    fullName: MLEM.Misc.GenericDataHolder.GetDataKeys
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
- uid: Microsoft.Xna.Framework.Graphics.Texture2D
  commentId: T:Microsoft.Xna.Framework.Graphics.Texture2D
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: Texture2D
  nameWithType: Texture2D
  fullName: Microsoft.Xna.Framework.Graphics.Texture2D
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: MLEM.Textures.UniformTextureAtlas.Item*
  commentId: Overload:MLEM.Textures.UniformTextureAtlas.Item
  name: Item
  nameWithType: UniformTextureAtlas.Item
  fullName: MLEM.Textures.UniformTextureAtlas.Item
- uid: Microsoft.Xna.Framework.Point
  commentId: T:Microsoft.Xna.Framework.Point
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Point
  nameWithType: Point
  fullName: Microsoft.Xna.Framework.Point
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
- uid: MLEM.Textures.UniformTextureAtlas.Item(Microsoft.Xna.Framework.Point)
  commentId: P:MLEM.Textures.UniformTextureAtlas.Item(Microsoft.Xna.Framework.Point)
  isExternal: true
- uid: Microsoft.Xna.Framework.Rectangle
  commentId: T:Microsoft.Xna.Framework.Rectangle
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Rectangle
  nameWithType: Rectangle
  fullName: Microsoft.Xna.Framework.Rectangle
- uid: MLEM.Textures.UniformTextureAtlas.Item(Microsoft.Xna.Framework.Rectangle)
  commentId: P:MLEM.Textures.UniformTextureAtlas.Item(Microsoft.Xna.Framework.Rectangle)
  isExternal: true
- uid: MLEM.Textures.UniformTextureAtlas.#ctor*
  commentId: Overload:MLEM.Textures.UniformTextureAtlas.#ctor
  name: UniformTextureAtlas
  nameWithType: UniformTextureAtlas.UniformTextureAtlas
  fullName: MLEM.Textures.UniformTextureAtlas.UniformTextureAtlas
