### YamlMime:ManagedReference
items:
- uid: MLEM.Extensions.NumberExtensions
  commentId: T:MLEM.Extensions.NumberExtensions
  id: NumberExtensions
  parent: MLEM.Extensions
  children:
  - MLEM.Extensions.NumberExtensions.Ceil(System.Single)
  - MLEM.Extensions.NumberExtensions.Divide(Microsoft.Xna.Framework.Point,System.Single)
  - MLEM.Extensions.NumberExtensions.Equals(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Single)
  - MLEM.Extensions.NumberExtensions.Equals(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,System.Single)
  - MLEM.Extensions.NumberExtensions.Equals(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,System.Single)
  - MLEM.Extensions.NumberExtensions.Equals(System.Single,System.Single,System.Single)
  - MLEM.Extensions.NumberExtensions.Floor(Microsoft.Xna.Framework.Vector2)
  - MLEM.Extensions.NumberExtensions.Floor(Microsoft.Xna.Framework.Vector3)
  - MLEM.Extensions.NumberExtensions.Floor(Microsoft.Xna.Framework.Vector4)
  - MLEM.Extensions.NumberExtensions.Floor(System.Single)
  - MLEM.Extensions.NumberExtensions.Multiply(Microsoft.Xna.Framework.Point,System.Single)
  - MLEM.Extensions.NumberExtensions.OffsetCopy(Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Point)
  - MLEM.Extensions.NumberExtensions.OffsetCopy(MLEM.Misc.RectangleF,Microsoft.Xna.Framework.Vector2)
  - MLEM.Extensions.NumberExtensions.Shrink(Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Point)
  - MLEM.Extensions.NumberExtensions.Shrink(MLEM.Misc.RectangleF,Microsoft.Xna.Framework.Vector2)
  - MLEM.Extensions.NumberExtensions.Shrink(MLEM.Misc.RectangleF,MLEM.Misc.Padding)
  - MLEM.Extensions.NumberExtensions.Transform(Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Matrix)
  langs:
  - csharp
  - vb
  name: NumberExtensions
  nameWithType: NumberExtensions
  fullName: MLEM.Extensions.NumberExtensions
  type: Class
  source:
    remote:
      path: MLEM/Extensions/NumberExtensions.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: NumberExtensions
    path: ../MLEM/Extensions/NumberExtensions.cs
    startLine: 8
  assemblies:
  - MLEM
  namespace: MLEM.Extensions
  summary: "\nA set of extensions for dealing with <xref href=\"System.Single\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"Microsoft.Xna.Framework.Vector2\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"Microsoft.Xna.Framework.Vector3\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"Microsoft.Xna.Framework.Point\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"Microsoft.Xna.Framework.Rectangle\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"MLEM.Misc.RectangleF\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public static class NumberExtensions
    content.vb: Public Module NumberExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: MLEM.Extensions.NumberExtensions.Floor(System.Single)
  commentId: M:MLEM.Extensions.NumberExtensions.Floor(System.Single)
  id: Floor(System.Single)
  isExtensionMethod: true
  parent: MLEM.Extensions.NumberExtensions
  langs:
  - csharp
  - vb
  name: Floor(Single)
  nameWithType: NumberExtensions.Floor(Single)
  fullName: MLEM.Extensions.NumberExtensions.Floor(System.Single)
  type: Method
  source:
    remote:
      path: MLEM/Extensions/NumberExtensions.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: Floor
    path: ../MLEM/Extensions/NumberExtensions.cs
    startLine: 11
  assemblies:
  - MLEM
  namespace: MLEM.Extensions
  example: []
  syntax:
    content: public static int Floor(this float f)
    parameters:
    - id: f
      type: System.Single
    return:
      type: System.Int32
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Floor(f As Single) As Integer
  overload: MLEM.Extensions.NumberExtensions.Floor*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MLEM.Extensions.NumberExtensions.Ceil(System.Single)
  commentId: M:MLEM.Extensions.NumberExtensions.Ceil(System.Single)
  id: Ceil(System.Single)
  isExtensionMethod: true
  parent: MLEM.Extensions.NumberExtensions
  langs:
  - csharp
  - vb
  name: Ceil(Single)
  nameWithType: NumberExtensions.Ceil(Single)
  fullName: MLEM.Extensions.NumberExtensions.Ceil(System.Single)
  type: Method
  source:
    remote:
      path: MLEM/Extensions/NumberExtensions.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: Ceil
    path: ../MLEM/Extensions/NumberExtensions.cs
    startLine: 16
  assemblies:
  - MLEM
  namespace: MLEM.Extensions
  example: []
  syntax:
    content: public static int Ceil(this float f)
    parameters:
    - id: f
      type: System.Single
    return:
      type: System.Int32
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Ceil(f As Single) As Integer
  overload: MLEM.Extensions.NumberExtensions.Ceil*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MLEM.Extensions.NumberExtensions.Equals(System.Single,System.Single,System.Single)
  commentId: M:MLEM.Extensions.NumberExtensions.Equals(System.Single,System.Single,System.Single)
  id: Equals(System.Single,System.Single,System.Single)
  isExtensionMethod: true
  parent: MLEM.Extensions.NumberExtensions
  langs:
  - csharp
  - vb
  name: Equals(Single, Single, Single)
  nameWithType: NumberExtensions.Equals(Single, Single, Single)
  fullName: MLEM.Extensions.NumberExtensions.Equals(System.Single, System.Single, System.Single)
  type: Method
  source:
    remote:
      path: MLEM/Extensions/NumberExtensions.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: Equals
    path: ../MLEM/Extensions/NumberExtensions.cs
    startLine: 27
  assemblies:
  - MLEM
  namespace: MLEM.Extensions
  summary: "\nChecks for decimal equality with a given tolerance.\n"
  example: []
  syntax:
    content: public static bool Equals(this float first, float second, float tolerance)
    parameters:
    - id: first
      type: System.Single
      description: The first number to equate
    - id: second
      type: System.Single
      description: The second number to equate
    - id: tolerance
      type: System.Single
      description: The equality tolerance
    return:
      type: System.Boolean
      description: Whether or not the two values are different by at most <code>tolerance</code>
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Equals(first As Single, second As Single, tolerance As Single) As Boolean
  overload: MLEM.Extensions.NumberExtensions.Equals*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MLEM.Extensions.NumberExtensions.Equals(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Single)
  commentId: M:MLEM.Extensions.NumberExtensions.Equals(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Single)
  id: Equals(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Single)
  isExtensionMethod: true
  parent: MLEM.Extensions.NumberExtensions
  langs:
  - csharp
  - vb
  name: Equals(Vector2, Vector2, Single)
  nameWithType: NumberExtensions.Equals(Vector2, Vector2, Single)
  fullName: MLEM.Extensions.NumberExtensions.Equals(Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2, System.Single)
  type: Method
  source:
    remote:
      path: MLEM/Extensions/NumberExtensions.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: Equals
    path: ../MLEM/Extensions/NumberExtensions.cs
    startLine: 32
  assemblies:
  - MLEM
  namespace: MLEM.Extensions
  example: []
  syntax:
    content: public static bool Equals(this Vector2 first, Vector2 second, float tolerance)
    parameters:
    - id: first
      type: Microsoft.Xna.Framework.Vector2
    - id: second
      type: Microsoft.Xna.Framework.Vector2
    - id: tolerance
      type: System.Single
    return:
      type: System.Boolean
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Equals(first As Vector2, second As Vector2, tolerance As Single) As Boolean
  overload: MLEM.Extensions.NumberExtensions.Equals*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MLEM.Extensions.NumberExtensions.Equals(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,System.Single)
  commentId: M:MLEM.Extensions.NumberExtensions.Equals(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,System.Single)
  id: Equals(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,System.Single)
  isExtensionMethod: true
  parent: MLEM.Extensions.NumberExtensions
  langs:
  - csharp
  - vb
  name: Equals(Vector3, Vector3, Single)
  nameWithType: NumberExtensions.Equals(Vector3, Vector3, Single)
  fullName: MLEM.Extensions.NumberExtensions.Equals(Microsoft.Xna.Framework.Vector3, Microsoft.Xna.Framework.Vector3, System.Single)
  type: Method
  source:
    remote:
      path: MLEM/Extensions/NumberExtensions.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: Equals
    path: ../MLEM/Extensions/NumberExtensions.cs
    startLine: 37
  assemblies:
  - MLEM
  namespace: MLEM.Extensions
  example: []
  syntax:
    content: public static bool Equals(this Vector3 first, Vector3 second, float tolerance)
    parameters:
    - id: first
      type: Microsoft.Xna.Framework.Vector3
    - id: second
      type: Microsoft.Xna.Framework.Vector3
    - id: tolerance
      type: System.Single
    return:
      type: System.Boolean
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Equals(first As Vector3, second As Vector3, tolerance As Single) As Boolean
  overload: MLEM.Extensions.NumberExtensions.Equals*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MLEM.Extensions.NumberExtensions.Equals(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,System.Single)
  commentId: M:MLEM.Extensions.NumberExtensions.Equals(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,System.Single)
  id: Equals(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,System.Single)
  isExtensionMethod: true
  parent: MLEM.Extensions.NumberExtensions
  langs:
  - csharp
  - vb
  name: Equals(Vector4, Vector4, Single)
  nameWithType: NumberExtensions.Equals(Vector4, Vector4, Single)
  fullName: MLEM.Extensions.NumberExtensions.Equals(Microsoft.Xna.Framework.Vector4, Microsoft.Xna.Framework.Vector4, System.Single)
  type: Method
  source:
    remote:
      path: MLEM/Extensions/NumberExtensions.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: Equals
    path: ../MLEM/Extensions/NumberExtensions.cs
    startLine: 42
  assemblies:
  - MLEM
  namespace: MLEM.Extensions
  example: []
  syntax:
    content: public static bool Equals(this Vector4 first, Vector4 second, float tolerance)
    parameters:
    - id: first
      type: Microsoft.Xna.Framework.Vector4
    - id: second
      type: Microsoft.Xna.Framework.Vector4
    - id: tolerance
      type: System.Single
    return:
      type: System.Boolean
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Equals(first As Vector4, second As Vector4, tolerance As Single) As Boolean
  overload: MLEM.Extensions.NumberExtensions.Equals*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MLEM.Extensions.NumberExtensions.Floor(Microsoft.Xna.Framework.Vector2)
  commentId: M:MLEM.Extensions.NumberExtensions.Floor(Microsoft.Xna.Framework.Vector2)
  id: Floor(Microsoft.Xna.Framework.Vector2)
  isExtensionMethod: true
  parent: MLEM.Extensions.NumberExtensions
  langs:
  - csharp
  - vb
  name: Floor(Vector2)
  nameWithType: NumberExtensions.Floor(Vector2)
  fullName: MLEM.Extensions.NumberExtensions.Floor(Microsoft.Xna.Framework.Vector2)
  type: Method
  source:
    remote:
      path: MLEM/Extensions/NumberExtensions.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: Floor
    path: ../MLEM/Extensions/NumberExtensions.cs
    startLine: 47
  assemblies:
  - MLEM
  namespace: MLEM.Extensions
  example: []
  syntax:
    content: public static Vector2 Floor(this Vector2 vec)
    parameters:
    - id: vec
      type: Microsoft.Xna.Framework.Vector2
    return:
      type: Microsoft.Xna.Framework.Vector2
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Floor(vec As Vector2) As Vector2
  overload: MLEM.Extensions.NumberExtensions.Floor*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MLEM.Extensions.NumberExtensions.Floor(Microsoft.Xna.Framework.Vector3)
  commentId: M:MLEM.Extensions.NumberExtensions.Floor(Microsoft.Xna.Framework.Vector3)
  id: Floor(Microsoft.Xna.Framework.Vector3)
  isExtensionMethod: true
  parent: MLEM.Extensions.NumberExtensions
  langs:
  - csharp
  - vb
  name: Floor(Vector3)
  nameWithType: NumberExtensions.Floor(Vector3)
  fullName: MLEM.Extensions.NumberExtensions.Floor(Microsoft.Xna.Framework.Vector3)
  type: Method
  source:
    remote:
      path: MLEM/Extensions/NumberExtensions.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: Floor
    path: ../MLEM/Extensions/NumberExtensions.cs
    startLine: 52
  assemblies:
  - MLEM
  namespace: MLEM.Extensions
  example: []
  syntax:
    content: public static Vector3 Floor(this Vector3 vec)
    parameters:
    - id: vec
      type: Microsoft.Xna.Framework.Vector3
    return:
      type: Microsoft.Xna.Framework.Vector3
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Floor(vec As Vector3) As Vector3
  overload: MLEM.Extensions.NumberExtensions.Floor*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MLEM.Extensions.NumberExtensions.Floor(Microsoft.Xna.Framework.Vector4)
  commentId: M:MLEM.Extensions.NumberExtensions.Floor(Microsoft.Xna.Framework.Vector4)
  id: Floor(Microsoft.Xna.Framework.Vector4)
  isExtensionMethod: true
  parent: MLEM.Extensions.NumberExtensions
  langs:
  - csharp
  - vb
  name: Floor(Vector4)
  nameWithType: NumberExtensions.Floor(Vector4)
  fullName: MLEM.Extensions.NumberExtensions.Floor(Microsoft.Xna.Framework.Vector4)
  type: Method
  source:
    remote:
      path: MLEM/Extensions/NumberExtensions.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: Floor
    path: ../MLEM/Extensions/NumberExtensions.cs
    startLine: 57
  assemblies:
  - MLEM
  namespace: MLEM.Extensions
  example: []
  syntax:
    content: public static Vector4 Floor(this Vector4 vec)
    parameters:
    - id: vec
      type: Microsoft.Xna.Framework.Vector4
    return:
      type: Microsoft.Xna.Framework.Vector4
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Floor(vec As Vector4) As Vector4
  overload: MLEM.Extensions.NumberExtensions.Floor*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MLEM.Extensions.NumberExtensions.Multiply(Microsoft.Xna.Framework.Point,System.Single)
  commentId: M:MLEM.Extensions.NumberExtensions.Multiply(Microsoft.Xna.Framework.Point,System.Single)
  id: Multiply(Microsoft.Xna.Framework.Point,System.Single)
  isExtensionMethod: true
  parent: MLEM.Extensions.NumberExtensions
  langs:
  - csharp
  - vb
  name: Multiply(Point, Single)
  nameWithType: NumberExtensions.Multiply(Point, Single)
  fullName: MLEM.Extensions.NumberExtensions.Multiply(Microsoft.Xna.Framework.Point, System.Single)
  type: Method
  source:
    remote:
      path: MLEM/Extensions/NumberExtensions.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: Multiply
    path: ../MLEM/Extensions/NumberExtensions.cs
    startLine: 67
  assemblies:
  - MLEM
  namespace: MLEM.Extensions
  summary: "\nMultiplies a point by a given scalar.\n"
  example: []
  syntax:
    content: public static Point Multiply(this Point point, float f)
    parameters:
    - id: point
      type: Microsoft.Xna.Framework.Point
      description: The point
    - id: f
      type: System.Single
      description: The scalar
    return:
      type: Microsoft.Xna.Framework.Point
      description: The point, multiplied by the scalar memberwise
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Multiply(point As Point, f As Single) As Point
  overload: MLEM.Extensions.NumberExtensions.Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MLEM.Extensions.NumberExtensions.Divide(Microsoft.Xna.Framework.Point,System.Single)
  commentId: M:MLEM.Extensions.NumberExtensions.Divide(Microsoft.Xna.Framework.Point,System.Single)
  id: Divide(Microsoft.Xna.Framework.Point,System.Single)
  isExtensionMethod: true
  parent: MLEM.Extensions.NumberExtensions
  langs:
  - csharp
  - vb
  name: Divide(Point, Single)
  nameWithType: NumberExtensions.Divide(Point, Single)
  fullName: MLEM.Extensions.NumberExtensions.Divide(Microsoft.Xna.Framework.Point, System.Single)
  type: Method
  source:
    remote:
      path: MLEM/Extensions/NumberExtensions.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: Divide
    path: ../MLEM/Extensions/NumberExtensions.cs
    startLine: 77
  assemblies:
  - MLEM
  namespace: MLEM.Extensions
  summary: "\nDivides a point by a given scalar.\n"
  example: []
  syntax:
    content: public static Point Divide(this Point point, float f)
    parameters:
    - id: point
      type: Microsoft.Xna.Framework.Point
      description: The point
    - id: f
      type: System.Single
      description: The scalar
    return:
      type: Microsoft.Xna.Framework.Point
      description: The point, divided by the scalar memberwise
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Divide(point As Point, f As Single) As Point
  overload: MLEM.Extensions.NumberExtensions.Divide*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MLEM.Extensions.NumberExtensions.Transform(Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Matrix)
  commentId: M:MLEM.Extensions.NumberExtensions.Transform(Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Matrix)
  id: Transform(Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Matrix)
  isExtensionMethod: true
  parent: MLEM.Extensions.NumberExtensions
  langs:
  - csharp
  - vb
  name: Transform(Point, Matrix)
  nameWithType: NumberExtensions.Transform(Point, Matrix)
  fullName: MLEM.Extensions.NumberExtensions.Transform(Microsoft.Xna.Framework.Point, Microsoft.Xna.Framework.Matrix)
  type: Method
  source:
    remote:
      path: MLEM/Extensions/NumberExtensions.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: Transform
    path: ../MLEM/Extensions/NumberExtensions.cs
    startLine: 87
  assemblies:
  - MLEM
  namespace: MLEM.Extensions
  summary: "\nTransforms a point by a given matrix.\n"
  example: []
  syntax:
    content: public static Point Transform(this Point position, Matrix matrix)
    parameters:
    - id: position
      type: Microsoft.Xna.Framework.Point
      description: The point
    - id: matrix
      type: Microsoft.Xna.Framework.Matrix
      description: The matrix
    return:
      type: Microsoft.Xna.Framework.Point
      description: The point, transformed by the matrix
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Transform(position As Point, matrix As Matrix) As Point
  overload: MLEM.Extensions.NumberExtensions.Transform*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MLEM.Extensions.NumberExtensions.OffsetCopy(Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Point)
  commentId: M:MLEM.Extensions.NumberExtensions.OffsetCopy(Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Point)
  id: OffsetCopy(Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Point)
  isExtensionMethod: true
  parent: MLEM.Extensions.NumberExtensions
  langs:
  - csharp
  - vb
  name: OffsetCopy(Rectangle, Point)
  nameWithType: NumberExtensions.OffsetCopy(Rectangle, Point)
  fullName: MLEM.Extensions.NumberExtensions.OffsetCopy(Microsoft.Xna.Framework.Rectangle, Microsoft.Xna.Framework.Point)
  type: Method
  source:
    remote:
      path: MLEM/Extensions/NumberExtensions.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: OffsetCopy
    path: ../MLEM/Extensions/NumberExtensions.cs
    startLine: 100
  assemblies:
  - MLEM
  namespace: MLEM.Extensions
  summary: "\nReturns a copy of the given rectangle, moved by the given point.\nThe rectangle&apos;s size remains unchanged.\n"
  example: []
  syntax:
    content: public static Rectangle OffsetCopy(this Rectangle rect, Point offset)
    parameters:
    - id: rect
      type: Microsoft.Xna.Framework.Rectangle
      description: The rectangle to move
    - id: offset
      type: Microsoft.Xna.Framework.Point
      description: The amount to move by
    return:
      type: Microsoft.Xna.Framework.Rectangle
      description: The moved rectangle
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function OffsetCopy(rect As Rectangle, offset As Point) As Rectangle
  overload: MLEM.Extensions.NumberExtensions.OffsetCopy*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MLEM.Extensions.NumberExtensions.OffsetCopy(MLEM.Misc.RectangleF,Microsoft.Xna.Framework.Vector2)
  commentId: M:MLEM.Extensions.NumberExtensions.OffsetCopy(MLEM.Misc.RectangleF,Microsoft.Xna.Framework.Vector2)
  id: OffsetCopy(MLEM.Misc.RectangleF,Microsoft.Xna.Framework.Vector2)
  isExtensionMethod: true
  parent: MLEM.Extensions.NumberExtensions
  langs:
  - csharp
  - vb
  name: OffsetCopy(RectangleF, Vector2)
  nameWithType: NumberExtensions.OffsetCopy(RectangleF, Vector2)
  fullName: MLEM.Extensions.NumberExtensions.OffsetCopy(MLEM.Misc.RectangleF, Microsoft.Xna.Framework.Vector2)
  type: Method
  source:
    remote:
      path: MLEM/Extensions/NumberExtensions.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: OffsetCopy
    path: ../MLEM/Extensions/NumberExtensions.cs
    startLine: 107
  assemblies:
  - MLEM
  namespace: MLEM.Extensions
  example: []
  syntax:
    content: public static RectangleF OffsetCopy(this RectangleF rect, Vector2 offset)
    parameters:
    - id: rect
      type: MLEM.Misc.RectangleF
    - id: offset
      type: Microsoft.Xna.Framework.Vector2
    return:
      type: MLEM.Misc.RectangleF
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function OffsetCopy(rect As RectangleF, offset As Vector2) As RectangleF
  overload: MLEM.Extensions.NumberExtensions.OffsetCopy*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MLEM.Extensions.NumberExtensions.Shrink(Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Point)
  commentId: M:MLEM.Extensions.NumberExtensions.Shrink(Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Point)
  id: Shrink(Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Point)
  isExtensionMethod: true
  parent: MLEM.Extensions.NumberExtensions
  langs:
  - csharp
  - vb
  name: Shrink(Rectangle, Point)
  nameWithType: NumberExtensions.Shrink(Rectangle, Point)
  fullName: MLEM.Extensions.NumberExtensions.Shrink(Microsoft.Xna.Framework.Rectangle, Microsoft.Xna.Framework.Point)
  type: Method
  source:
    remote:
      path: MLEM/Extensions/NumberExtensions.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: Shrink
    path: ../MLEM/Extensions/NumberExtensions.cs
    startLine: 119
  assemblies:
  - MLEM
  namespace: MLEM.Extensions
  summary: "\nShrinks the rectangle by the given padding, causing its size to decrease by twice the amount and its position to be moved inwards by the amount.\n"
  example: []
  syntax:
    content: public static Rectangle Shrink(this Rectangle rect, Point padding)
    parameters:
    - id: rect
      type: Microsoft.Xna.Framework.Rectangle
      description: The rectangle to shrink
    - id: padding
      type: Microsoft.Xna.Framework.Point
      description: The padding to shrink by
    return:
      type: Microsoft.Xna.Framework.Rectangle
      description: The shrunk rectangle
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Shrink(rect As Rectangle, padding As Point) As Rectangle
  overload: MLEM.Extensions.NumberExtensions.Shrink*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MLEM.Extensions.NumberExtensions.Shrink(MLEM.Misc.RectangleF,Microsoft.Xna.Framework.Vector2)
  commentId: M:MLEM.Extensions.NumberExtensions.Shrink(MLEM.Misc.RectangleF,Microsoft.Xna.Framework.Vector2)
  id: Shrink(MLEM.Misc.RectangleF,Microsoft.Xna.Framework.Vector2)
  isExtensionMethod: true
  parent: MLEM.Extensions.NumberExtensions
  langs:
  - csharp
  - vb
  name: Shrink(RectangleF, Vector2)
  nameWithType: NumberExtensions.Shrink(RectangleF, Vector2)
  fullName: MLEM.Extensions.NumberExtensions.Shrink(MLEM.Misc.RectangleF, Microsoft.Xna.Framework.Vector2)
  type: Method
  source:
    remote:
      path: MLEM/Extensions/NumberExtensions.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: Shrink
    path: ../MLEM/Extensions/NumberExtensions.cs
    startLine: 128
  assemblies:
  - MLEM
  namespace: MLEM.Extensions
  example: []
  syntax:
    content: public static RectangleF Shrink(this RectangleF rect, Vector2 padding)
    parameters:
    - id: rect
      type: MLEM.Misc.RectangleF
    - id: padding
      type: Microsoft.Xna.Framework.Vector2
    return:
      type: MLEM.Misc.RectangleF
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Shrink(rect As RectangleF, padding As Vector2) As RectangleF
  overload: MLEM.Extensions.NumberExtensions.Shrink*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MLEM.Extensions.NumberExtensions.Shrink(MLEM.Misc.RectangleF,MLEM.Misc.Padding)
  commentId: M:MLEM.Extensions.NumberExtensions.Shrink(MLEM.Misc.RectangleF,MLEM.Misc.Padding)
  id: Shrink(MLEM.Misc.RectangleF,MLEM.Misc.Padding)
  isExtensionMethod: true
  parent: MLEM.Extensions.NumberExtensions
  langs:
  - csharp
  - vb
  name: Shrink(RectangleF, Padding)
  nameWithType: NumberExtensions.Shrink(RectangleF, Padding)
  fullName: MLEM.Extensions.NumberExtensions.Shrink(MLEM.Misc.RectangleF, MLEM.Misc.Padding)
  type: Method
  source:
    remote:
      path: MLEM/Extensions/NumberExtensions.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: Shrink
    path: ../MLEM/Extensions/NumberExtensions.cs
    startLine: 137
  assemblies:
  - MLEM
  namespace: MLEM.Extensions
  example: []
  syntax:
    content: public static RectangleF Shrink(this RectangleF rect, Padding padding)
    parameters:
    - id: rect
      type: MLEM.Misc.RectangleF
    - id: padding
      type: MLEM.Misc.Padding
    return:
      type: MLEM.Misc.RectangleF
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Shrink(rect As RectangleF, padding As Padding) As RectangleF
  overload: MLEM.Extensions.NumberExtensions.Shrink*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Microsoft.Xna.Framework.Vector2
  commentId: T:Microsoft.Xna.Framework.Vector2
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Microsoft.Xna.Framework.Vector2
- uid: Microsoft.Xna.Framework.Vector3
  commentId: T:Microsoft.Xna.Framework.Vector3
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: Microsoft.Xna.Framework.Vector3
- uid: Microsoft.Xna.Framework.Vector4
  commentId: T:Microsoft.Xna.Framework.Vector4
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Vector4
  nameWithType: Vector4
  fullName: Microsoft.Xna.Framework.Vector4
- uid: Microsoft.Xna.Framework.Point
  commentId: T:Microsoft.Xna.Framework.Point
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Point
  nameWithType: Point
  fullName: Microsoft.Xna.Framework.Point
- uid: Microsoft.Xna.Framework.Rectangle
  commentId: T:Microsoft.Xna.Framework.Rectangle
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Rectangle
  nameWithType: Rectangle
  fullName: Microsoft.Xna.Framework.Rectangle
- uid: MLEM.Misc.RectangleF
  commentId: T:MLEM.Misc.RectangleF
  parent: MLEM.Misc
  name: RectangleF
  nameWithType: RectangleF
  fullName: MLEM.Misc.RectangleF
- uid: MLEM.Extensions
  commentId: N:MLEM.Extensions
  name: MLEM.Extensions
  nameWithType: MLEM.Extensions
  fullName: MLEM.Extensions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
- uid: System.Math.Floor(System.Decimal)
  commentId: M:System.Math.Floor(System.Decimal)
  isExternal: true
- uid: MLEM.Extensions.NumberExtensions.Floor*
  commentId: Overload:MLEM.Extensions.NumberExtensions.Floor
  name: Floor
  nameWithType: NumberExtensions.Floor
  fullName: MLEM.Extensions.NumberExtensions.Floor
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Math.Ceiling(System.Decimal)
  commentId: M:System.Math.Ceiling(System.Decimal)
  isExternal: true
- uid: MLEM.Extensions.NumberExtensions.Ceil*
  commentId: Overload:MLEM.Extensions.NumberExtensions.Ceil
  name: Ceil
  nameWithType: NumberExtensions.Ceil
  fullName: MLEM.Extensions.NumberExtensions.Ceil
- uid: MLEM.Extensions.NumberExtensions.Equals*
  commentId: Overload:MLEM.Extensions.NumberExtensions.Equals
  name: Equals
  nameWithType: NumberExtensions.Equals
  fullName: MLEM.Extensions.NumberExtensions.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: MLEM.Extensions.NumberExtensions.Equals(System.Single,System.Single,System.Single)
  commentId: M:MLEM.Extensions.NumberExtensions.Equals(System.Single,System.Single,System.Single)
  isExternal: true
- uid: MLEM.Extensions.NumberExtensions.Multiply*
  commentId: Overload:MLEM.Extensions.NumberExtensions.Multiply
  name: Multiply
  nameWithType: NumberExtensions.Multiply
  fullName: MLEM.Extensions.NumberExtensions.Multiply
- uid: MLEM.Extensions.NumberExtensions.Divide*
  commentId: Overload:MLEM.Extensions.NumberExtensions.Divide
  name: Divide
  nameWithType: NumberExtensions.Divide
  fullName: MLEM.Extensions.NumberExtensions.Divide
- uid: MLEM.Extensions.NumberExtensions.Transform*
  commentId: Overload:MLEM.Extensions.NumberExtensions.Transform
  name: Transform
  nameWithType: NumberExtensions.Transform
  fullName: MLEM.Extensions.NumberExtensions.Transform
- uid: Microsoft.Xna.Framework.Matrix
  commentId: T:Microsoft.Xna.Framework.Matrix
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Matrix
  nameWithType: Matrix
  fullName: Microsoft.Xna.Framework.Matrix
- uid: MLEM.Extensions.NumberExtensions.OffsetCopy*
  commentId: Overload:MLEM.Extensions.NumberExtensions.OffsetCopy
  name: OffsetCopy
  nameWithType: NumberExtensions.OffsetCopy
  fullName: MLEM.Extensions.NumberExtensions.OffsetCopy
- uid: MLEM.Extensions.NumberExtensions.OffsetCopy(Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Point)
  commentId: M:MLEM.Extensions.NumberExtensions.OffsetCopy(Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Point)
  isExternal: true
- uid: MLEM.Extensions.NumberExtensions.Shrink*
  commentId: Overload:MLEM.Extensions.NumberExtensions.Shrink
  name: Shrink
  nameWithType: NumberExtensions.Shrink
  fullName: MLEM.Extensions.NumberExtensions.Shrink
- uid: MLEM.Extensions.NumberExtensions.Shrink(Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Point)
  commentId: M:MLEM.Extensions.NumberExtensions.Shrink(Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Point)
  isExternal: true
- uid: MLEM.Misc.Padding
  commentId: T:MLEM.Misc.Padding
  parent: MLEM.Misc
  name: Padding
  nameWithType: Padding
  fullName: MLEM.Misc.Padding
