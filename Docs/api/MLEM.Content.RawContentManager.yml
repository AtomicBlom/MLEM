### YamlMime:ManagedReference
items:
- uid: MLEM.Content.RawContentManager
  commentId: T:MLEM.Content.RawContentManager
  id: RawContentManager
  parent: MLEM.Content
  children:
  - MLEM.Content.RawContentManager.#ctor(System.IServiceProvider,System.String)
  - MLEM.Content.RawContentManager.GraphicsDevice
  - MLEM.Content.RawContentManager.Initialize
  - MLEM.Content.RawContentManager.Load``1(System.String)
  - MLEM.Content.RawContentManager.ReloadAsset``1(System.String,``0)
  - MLEM.Content.RawContentManager.Unload
  langs:
  - csharp
  - vb
  name: RawContentManager
  nameWithType: RawContentManager
  fullName: MLEM.Content.RawContentManager
  type: Class
  source:
    remote:
      path: MLEM/Content/RawContentManager.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: RawContentManager
    path: ../MLEM/Content/RawContentManager.cs
    startLine: 13
  assemblies:
  - MLEM
  namespace: MLEM.Content
  summary: "\nRepresents a version of <xref href=\"Microsoft.Xna.Framework.Content.ContentManager\" data-throw-if-not-resolved=\"false\"></xref> that doesn&apos;t load content binary <code>xnb</code> files, but rather as their regular formats. \n"
  example: []
  syntax:
    content: 'public class RawContentManager : ContentManager, IDisposable, IGameComponent'
    content.vb: >-
      Public Class RawContentManager

          Inherits ContentManager

          Implements IDisposable, IGameComponent
  inheritance:
  - System.Object
  - Microsoft.Xna.Framework.Content.ContentManager
  implements:
  - System.IDisposable
  - Microsoft.Xna.Framework.IGameComponent
  inheritedMembers:
  - Microsoft.Xna.Framework.Content.ContentManager.Dispose
  - Microsoft.Xna.Framework.Content.ContentManager.Dispose(System.Boolean)
  - Microsoft.Xna.Framework.Content.ContentManager.LoadLocalized``1(System.String)
  - Microsoft.Xna.Framework.Content.ContentManager.OpenStream(System.String)
  - Microsoft.Xna.Framework.Content.ContentManager.ReadAsset``1(System.String,System.Action{System.IDisposable})
  - Microsoft.Xna.Framework.Content.ContentManager.ReloadGraphicsAssets
  - Microsoft.Xna.Framework.Content.ContentManager.LoadedAssets
  - Microsoft.Xna.Framework.Content.ContentManager.RootDirectory
  - Microsoft.Xna.Framework.Content.ContentManager.ServiceProvider
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Microsoft.Xna.Framework.Content.ContentManager.MLEM.Data.ContentExtensions.SetJsonSerializer(Newtonsoft.Json.JsonSerializer)
  - Microsoft.Xna.Framework.Content.ContentManager.MLEM.Data.ContentExtensions.GetJsonSerializer
  - Microsoft.Xna.Framework.Content.ContentManager.MLEM.Data.ContentExtensions.AddJsonConverter(Newtonsoft.Json.JsonConverter)
  - Microsoft.Xna.Framework.Content.ContentManager.MLEM.Data.ContentExtensions.LoadJson``1(System.String,System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: MLEM.Content.RawContentManager.GraphicsDevice
  commentId: F:MLEM.Content.RawContentManager.GraphicsDevice
  id: GraphicsDevice
  parent: MLEM.Content.RawContentManager
  langs:
  - csharp
  - vb
  name: GraphicsDevice
  nameWithType: RawContentManager.GraphicsDevice
  fullName: MLEM.Content.RawContentManager.GraphicsDevice
  type: Field
  source:
    remote:
      path: MLEM/Content/RawContentManager.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: GraphicsDevice
    path: ../MLEM/Content/RawContentManager.cs
    startLine: 26
  assemblies:
  - MLEM
  namespace: MLEM.Content
  summary: "\nThe graphics device that this content manager uses\n"
  example: []
  syntax:
    content: public readonly GraphicsDevice GraphicsDevice
    return:
      type: Microsoft.Xna.Framework.Graphics.GraphicsDevice
    content.vb: Public ReadOnly GraphicsDevice As GraphicsDevice
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: MLEM.Content.RawContentManager.#ctor(System.IServiceProvider,System.String)
  commentId: M:MLEM.Content.RawContentManager.#ctor(System.IServiceProvider,System.String)
  id: '#ctor(System.IServiceProvider,System.String)'
  parent: MLEM.Content.RawContentManager
  langs:
  - csharp
  - vb
  name: RawContentManager(IServiceProvider, String)
  nameWithType: RawContentManager.RawContentManager(IServiceProvider, String)
  fullName: MLEM.Content.RawContentManager.RawContentManager(System.IServiceProvider, System.String)
  type: Constructor
  source:
    remote:
      path: MLEM/Content/RawContentManager.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: .ctor
    path: ../MLEM/Content/RawContentManager.cs
    startLine: 33
  assemblies:
  - MLEM
  namespace: MLEM.Content
  summary: "\nCreates a new content manager with an optionally specified root directory.\n"
  example: []
  syntax:
    content: public RawContentManager(IServiceProvider serviceProvider, string rootDirectory = "Content")
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: The service provider of your game
    - id: rootDirectory
      type: System.String
      description: The root directory. Defaults to &quot;Content&quot;
    content.vb: Public Sub New(serviceProvider As IServiceProvider, rootDirectory As String = "Content")
  overload: MLEM.Content.RawContentManager.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MLEM.Content.RawContentManager.Load``1(System.String)
  commentId: M:MLEM.Content.RawContentManager.Load``1(System.String)
  id: Load``1(System.String)
  parent: MLEM.Content.RawContentManager
  langs:
  - csharp
  - vb
  name: Load<T>(String)
  nameWithType: RawContentManager.Load<T>(String)
  fullName: MLEM.Content.RawContentManager.Load<T>(System.String)
  type: Method
  source:
    remote:
      path: MLEM/Content/RawContentManager.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: Load
    path: ../MLEM/Content/RawContentManager.cs
    startLine: 46
  assemblies:
  - MLEM
  namespace: MLEM.Content
  summary: "\nLoads a raw asset with the given name, based on the <xref href=\"Microsoft.Xna.Framework.Content.ContentManager.RootDirectory\" data-throw-if-not-resolved=\"false\"></xref>.\nIf the asset was previously loaded using this method, the cached asset is merely returned.\n"
  example: []
  syntax:
    content: public override T Load<T>(string assetName)
    parameters:
    - id: assetName
      type: System.String
      description: The path and name of the asset to load, without extension.
    typeParameters:
    - id: T
      description: The type of asset to load
    return:
      type: '{T}'
      description: The asset, either loaded from the cache, or from disk.
    content.vb: Public Overrides Function Load(Of T)(assetName As String) As T
  overridden: Microsoft.Xna.Framework.Content.ContentManager.Load``1(System.String)
  overload: MLEM.Content.RawContentManager.Load*
  nameWithType.vb: RawContentManager.Load(Of T)(String)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: MLEM.Content.RawContentManager.Load(Of T)(System.String)
  name.vb: Load(Of T)(String)
- uid: MLEM.Content.RawContentManager.ReloadAsset``1(System.String,``0)
  commentId: M:MLEM.Content.RawContentManager.ReloadAsset``1(System.String,``0)
  id: ReloadAsset``1(System.String,``0)
  parent: MLEM.Content.RawContentManager
  langs:
  - csharp
  - vb
  name: ReloadAsset<T>(String, T)
  nameWithType: RawContentManager.ReloadAsset<T>(String, T)
  fullName: MLEM.Content.RawContentManager.ReloadAsset<T>(System.String, T)
  type: Method
  source:
    remote:
      path: MLEM/Content/RawContentManager.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: ReloadAsset
    path: ../MLEM/Content/RawContentManager.cs
    startLine: 60
  assemblies:
  - MLEM
  namespace: MLEM.Content
  example: []
  syntax:
    content: protected override void ReloadAsset<T>(string originalAssetName, T currentAsset)
    parameters:
    - id: originalAssetName
      type: System.String
    - id: currentAsset
      type: '{T}'
    typeParameters:
    - id: T
    content.vb: Protected Overrides Sub ReloadAsset(Of T)(originalAssetName As String, currentAsset As T)
  overridden: Microsoft.Xna.Framework.Content.ContentManager.ReloadAsset``1(System.String,{T})
  overload: MLEM.Content.RawContentManager.ReloadAsset*
  nameWithType.vb: RawContentManager.ReloadAsset(Of T)(String, T)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: MLEM.Content.RawContentManager.ReloadAsset(Of T)(System.String, T)
  name.vb: ReloadAsset(Of T)(String, T)
- uid: MLEM.Content.RawContentManager.Unload
  commentId: M:MLEM.Content.RawContentManager.Unload
  id: Unload
  parent: MLEM.Content.RawContentManager
  langs:
  - csharp
  - vb
  name: Unload()
  nameWithType: RawContentManager.Unload()
  fullName: MLEM.Content.RawContentManager.Unload()
  type: Method
  source:
    remote:
      path: MLEM/Content/RawContentManager.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: Unload
    path: ../MLEM/Content/RawContentManager.cs
    startLine: 84
  assemblies:
  - MLEM
  namespace: MLEM.Content
  example: []
  syntax:
    content: public override void Unload()
    content.vb: Public Overrides Sub Unload
  overridden: Microsoft.Xna.Framework.Content.ContentManager.Unload
  overload: MLEM.Content.RawContentManager.Unload*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: MLEM.Content.RawContentManager.Initialize
  commentId: M:MLEM.Content.RawContentManager.Initialize
  id: Initialize
  parent: MLEM.Content.RawContentManager
  langs:
  - csharp
  - vb
  name: Initialize()
  nameWithType: RawContentManager.Initialize()
  fullName: MLEM.Content.RawContentManager.Initialize()
  type: Method
  source:
    remote:
      path: MLEM/Content/RawContentManager.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: Initialize
    path: ../MLEM/Content/RawContentManager.cs
    startLine: 92
  assemblies:
  - MLEM
  namespace: MLEM.Content
  example: []
  syntax:
    content: public void Initialize()
    content.vb: Public Sub Initialize
  overload: MLEM.Content.RawContentManager.Initialize*
  implements:
  - Microsoft.Xna.Framework.IGameComponent.Initialize
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Xna.Framework.Content.ContentManager
  commentId: T:Microsoft.Xna.Framework.Content.ContentManager
  parent: Microsoft.Xna.Framework.Content
  isExternal: true
  name: ContentManager
  nameWithType: ContentManager
  fullName: Microsoft.Xna.Framework.Content.ContentManager
- uid: MLEM.Content
  commentId: N:MLEM.Content
  name: MLEM.Content
  nameWithType: MLEM.Content
  fullName: MLEM.Content
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.Xna.Framework.IGameComponent
  commentId: T:Microsoft.Xna.Framework.IGameComponent
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: IGameComponent
  nameWithType: IGameComponent
  fullName: Microsoft.Xna.Framework.IGameComponent
- uid: Microsoft.Xna.Framework.Content.ContentManager.Dispose
  commentId: M:Microsoft.Xna.Framework.Content.ContentManager.Dispose
  parent: Microsoft.Xna.Framework.Content.ContentManager
  isExternal: true
  name: Dispose()
  nameWithType: ContentManager.Dispose()
  fullName: Microsoft.Xna.Framework.Content.ContentManager.Dispose()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Content.ContentManager.Dispose
    name: Dispose
    nameWithType: ContentManager.Dispose
    fullName: Microsoft.Xna.Framework.Content.ContentManager.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Content.ContentManager.Dispose
    name: Dispose
    nameWithType: ContentManager.Dispose
    fullName: Microsoft.Xna.Framework.Content.ContentManager.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Content.ContentManager.Dispose(System.Boolean)
  commentId: M:Microsoft.Xna.Framework.Content.ContentManager.Dispose(System.Boolean)
  parent: Microsoft.Xna.Framework.Content.ContentManager
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: ContentManager.Dispose(Boolean)
  fullName: Microsoft.Xna.Framework.Content.ContentManager.Dispose(System.Boolean)
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Content.ContentManager.Dispose(System.Boolean)
    name: Dispose
    nameWithType: ContentManager.Dispose
    fullName: Microsoft.Xna.Framework.Content.ContentManager.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Content.ContentManager.Dispose(System.Boolean)
    name: Dispose
    nameWithType: ContentManager.Dispose
    fullName: Microsoft.Xna.Framework.Content.ContentManager.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Content.ContentManager.LoadLocalized``1(System.String)
  commentId: M:Microsoft.Xna.Framework.Content.ContentManager.LoadLocalized``1(System.String)
  parent: Microsoft.Xna.Framework.Content.ContentManager
  isExternal: true
  name: LoadLocalized<T>(String)
  nameWithType: ContentManager.LoadLocalized<T>(String)
  fullName: Microsoft.Xna.Framework.Content.ContentManager.LoadLocalized<T>(System.String)
  nameWithType.vb: ContentManager.LoadLocalized(Of T)(String)
  fullName.vb: Microsoft.Xna.Framework.Content.ContentManager.LoadLocalized(Of T)(System.String)
  name.vb: LoadLocalized(Of T)(String)
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Content.ContentManager.LoadLocalized``1(System.String)
    name: LoadLocalized<T>
    nameWithType: ContentManager.LoadLocalized<T>
    fullName: Microsoft.Xna.Framework.Content.ContentManager.LoadLocalized<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Content.ContentManager.LoadLocalized``1(System.String)
    name: LoadLocalized(Of T)
    nameWithType: ContentManager.LoadLocalized(Of T)
    fullName: Microsoft.Xna.Framework.Content.ContentManager.LoadLocalized(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Content.ContentManager.OpenStream(System.String)
  commentId: M:Microsoft.Xna.Framework.Content.ContentManager.OpenStream(System.String)
  parent: Microsoft.Xna.Framework.Content.ContentManager
  isExternal: true
  name: OpenStream(String)
  nameWithType: ContentManager.OpenStream(String)
  fullName: Microsoft.Xna.Framework.Content.ContentManager.OpenStream(System.String)
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Content.ContentManager.OpenStream(System.String)
    name: OpenStream
    nameWithType: ContentManager.OpenStream
    fullName: Microsoft.Xna.Framework.Content.ContentManager.OpenStream
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Content.ContentManager.OpenStream(System.String)
    name: OpenStream
    nameWithType: ContentManager.OpenStream
    fullName: Microsoft.Xna.Framework.Content.ContentManager.OpenStream
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Content.ContentManager.ReadAsset``1(System.String,System.Action{System.IDisposable})
  commentId: M:Microsoft.Xna.Framework.Content.ContentManager.ReadAsset``1(System.String,System.Action{System.IDisposable})
  parent: Microsoft.Xna.Framework.Content.ContentManager
  isExternal: true
  name: ReadAsset<T>(String, Action<IDisposable>)
  nameWithType: ContentManager.ReadAsset<T>(String, Action<IDisposable>)
  fullName: Microsoft.Xna.Framework.Content.ContentManager.ReadAsset<T>(System.String, System.Action<System.IDisposable>)
  nameWithType.vb: ContentManager.ReadAsset(Of T)(String, Action(Of IDisposable))
  fullName.vb: Microsoft.Xna.Framework.Content.ContentManager.ReadAsset(Of T)(System.String, System.Action(Of System.IDisposable))
  name.vb: ReadAsset(Of T)(String, Action(Of IDisposable))
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Content.ContentManager.ReadAsset``1(System.String,System.Action{System.IDisposable})
    name: ReadAsset<T>
    nameWithType: ContentManager.ReadAsset<T>
    fullName: Microsoft.Xna.Framework.Content.ContentManager.ReadAsset<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IDisposable
    name: IDisposable
    nameWithType: IDisposable
    fullName: System.IDisposable
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Content.ContentManager.ReadAsset``1(System.String,System.Action{System.IDisposable})
    name: ReadAsset(Of T)
    nameWithType: ContentManager.ReadAsset(Of T)
    fullName: Microsoft.Xna.Framework.Content.ContentManager.ReadAsset(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IDisposable
    name: IDisposable
    nameWithType: IDisposable
    fullName: System.IDisposable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Content.ContentManager.ReloadGraphicsAssets
  commentId: M:Microsoft.Xna.Framework.Content.ContentManager.ReloadGraphicsAssets
  parent: Microsoft.Xna.Framework.Content.ContentManager
  isExternal: true
  name: ReloadGraphicsAssets()
  nameWithType: ContentManager.ReloadGraphicsAssets()
  fullName: Microsoft.Xna.Framework.Content.ContentManager.ReloadGraphicsAssets()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Content.ContentManager.ReloadGraphicsAssets
    name: ReloadGraphicsAssets
    nameWithType: ContentManager.ReloadGraphicsAssets
    fullName: Microsoft.Xna.Framework.Content.ContentManager.ReloadGraphicsAssets
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Content.ContentManager.ReloadGraphicsAssets
    name: ReloadGraphicsAssets
    nameWithType: ContentManager.ReloadGraphicsAssets
    fullName: Microsoft.Xna.Framework.Content.ContentManager.ReloadGraphicsAssets
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Content.ContentManager.LoadedAssets
  commentId: P:Microsoft.Xna.Framework.Content.ContentManager.LoadedAssets
  parent: Microsoft.Xna.Framework.Content.ContentManager
  isExternal: true
  name: LoadedAssets
  nameWithType: ContentManager.LoadedAssets
  fullName: Microsoft.Xna.Framework.Content.ContentManager.LoadedAssets
- uid: Microsoft.Xna.Framework.Content.ContentManager.RootDirectory
  commentId: P:Microsoft.Xna.Framework.Content.ContentManager.RootDirectory
  parent: Microsoft.Xna.Framework.Content.ContentManager
  isExternal: true
  name: RootDirectory
  nameWithType: ContentManager.RootDirectory
  fullName: Microsoft.Xna.Framework.Content.ContentManager.RootDirectory
- uid: Microsoft.Xna.Framework.Content.ContentManager.ServiceProvider
  commentId: P:Microsoft.Xna.Framework.Content.ContentManager.ServiceProvider
  parent: Microsoft.Xna.Framework.Content.ContentManager
  isExternal: true
  name: ServiceProvider
  nameWithType: ContentManager.ServiceProvider
  fullName: Microsoft.Xna.Framework.Content.ContentManager.ServiceProvider
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Content.ContentManager.MLEM.Data.ContentExtensions.SetJsonSerializer(Newtonsoft.Json.JsonSerializer)
  commentId: M:MLEM.Data.ContentExtensions.SetJsonSerializer(Microsoft.Xna.Framework.Content.ContentManager,Newtonsoft.Json.JsonSerializer)
  parent: MLEM.Data.ContentExtensions
  definition: MLEM.Data.ContentExtensions.SetJsonSerializer(Microsoft.Xna.Framework.Content.ContentManager,Newtonsoft.Json.JsonSerializer)
  name: SetJsonSerializer(JsonSerializer)
  nameWithType: ContentExtensions.SetJsonSerializer(JsonSerializer)
  fullName: MLEM.Data.ContentExtensions.SetJsonSerializer(Newtonsoft.Json.JsonSerializer)
  spec.csharp:
  - uid: MLEM.Data.ContentExtensions.SetJsonSerializer(Newtonsoft.Json.JsonSerializer)
    name: SetJsonSerializer
    nameWithType: ContentExtensions.SetJsonSerializer
    fullName: MLEM.Data.ContentExtensions.SetJsonSerializer
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    nameWithType: JsonSerializer
    fullName: Newtonsoft.Json.JsonSerializer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Data.ContentExtensions.SetJsonSerializer(Newtonsoft.Json.JsonSerializer)
    name: SetJsonSerializer
    nameWithType: ContentExtensions.SetJsonSerializer
    fullName: MLEM.Data.ContentExtensions.SetJsonSerializer
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    nameWithType: JsonSerializer
    fullName: Newtonsoft.Json.JsonSerializer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Content.ContentManager.MLEM.Data.ContentExtensions.GetJsonSerializer
  commentId: M:MLEM.Data.ContentExtensions.GetJsonSerializer(Microsoft.Xna.Framework.Content.ContentManager)
  parent: MLEM.Data.ContentExtensions
  definition: MLEM.Data.ContentExtensions.GetJsonSerializer(Microsoft.Xna.Framework.Content.ContentManager)
  name: GetJsonSerializer()
  nameWithType: ContentExtensions.GetJsonSerializer()
  fullName: MLEM.Data.ContentExtensions.GetJsonSerializer()
  spec.csharp:
  - uid: MLEM.Data.ContentExtensions.GetJsonSerializer
    name: GetJsonSerializer
    nameWithType: ContentExtensions.GetJsonSerializer
    fullName: MLEM.Data.ContentExtensions.GetJsonSerializer
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Data.ContentExtensions.GetJsonSerializer
    name: GetJsonSerializer
    nameWithType: ContentExtensions.GetJsonSerializer
    fullName: MLEM.Data.ContentExtensions.GetJsonSerializer
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Content.ContentManager.MLEM.Data.ContentExtensions.AddJsonConverter(Newtonsoft.Json.JsonConverter)
  commentId: M:MLEM.Data.ContentExtensions.AddJsonConverter(Microsoft.Xna.Framework.Content.ContentManager,Newtonsoft.Json.JsonConverter)
  parent: MLEM.Data.ContentExtensions
  definition: MLEM.Data.ContentExtensions.AddJsonConverter(Microsoft.Xna.Framework.Content.ContentManager,Newtonsoft.Json.JsonConverter)
  name: AddJsonConverter(JsonConverter)
  nameWithType: ContentExtensions.AddJsonConverter(JsonConverter)
  fullName: MLEM.Data.ContentExtensions.AddJsonConverter(Newtonsoft.Json.JsonConverter)
  spec.csharp:
  - uid: MLEM.Data.ContentExtensions.AddJsonConverter(Newtonsoft.Json.JsonConverter)
    name: AddJsonConverter
    nameWithType: ContentExtensions.AddJsonConverter
    fullName: MLEM.Data.ContentExtensions.AddJsonConverter
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.JsonConverter
    name: JsonConverter
    nameWithType: JsonConverter
    fullName: Newtonsoft.Json.JsonConverter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Data.ContentExtensions.AddJsonConverter(Newtonsoft.Json.JsonConverter)
    name: AddJsonConverter
    nameWithType: ContentExtensions.AddJsonConverter
    fullName: MLEM.Data.ContentExtensions.AddJsonConverter
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.JsonConverter
    name: JsonConverter
    nameWithType: JsonConverter
    fullName: Newtonsoft.Json.JsonConverter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Content.ContentManager.MLEM.Data.ContentExtensions.LoadJson``1(System.String,System.String)
  commentId: M:MLEM.Data.ContentExtensions.LoadJson``1(Microsoft.Xna.Framework.Content.ContentManager,System.String,System.String)
  parent: MLEM.Data.ContentExtensions
  definition: MLEM.Data.ContentExtensions.LoadJson``1(Microsoft.Xna.Framework.Content.ContentManager,System.String,System.String)
  name: LoadJson<T>(String, String)
  nameWithType: ContentExtensions.LoadJson<T>(String, String)
  fullName: MLEM.Data.ContentExtensions.LoadJson<T>(System.String, System.String)
  nameWithType.vb: ContentExtensions.LoadJson(Of T)(String, String)
  fullName.vb: MLEM.Data.ContentExtensions.LoadJson(Of T)(System.String, System.String)
  name.vb: LoadJson(Of T)(String, String)
  spec.csharp:
  - uid: MLEM.Data.ContentExtensions.LoadJson``1(System.String,System.String)
    name: LoadJson<T>
    nameWithType: ContentExtensions.LoadJson<T>
    fullName: MLEM.Data.ContentExtensions.LoadJson<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Data.ContentExtensions.LoadJson``1(System.String,System.String)
    name: LoadJson(Of T)
    nameWithType: ContentExtensions.LoadJson(Of T)
    fullName: MLEM.Data.ContentExtensions.LoadJson(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Content
  commentId: N:Microsoft.Xna.Framework.Content
  isExternal: true
  name: Microsoft.Xna.Framework.Content
  nameWithType: Microsoft.Xna.Framework.Content
  fullName: Microsoft.Xna.Framework.Content
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
- uid: MLEM.Data.ContentExtensions.SetJsonSerializer(Microsoft.Xna.Framework.Content.ContentManager,Newtonsoft.Json.JsonSerializer)
  commentId: M:MLEM.Data.ContentExtensions.SetJsonSerializer(Microsoft.Xna.Framework.Content.ContentManager,Newtonsoft.Json.JsonSerializer)
  isExternal: true
  name: SetJsonSerializer(ContentManager, JsonSerializer)
  nameWithType: ContentExtensions.SetJsonSerializer(ContentManager, JsonSerializer)
  fullName: MLEM.Data.ContentExtensions.SetJsonSerializer(Microsoft.Xna.Framework.Content.ContentManager, Newtonsoft.Json.JsonSerializer)
  spec.csharp:
  - uid: MLEM.Data.ContentExtensions.SetJsonSerializer(Microsoft.Xna.Framework.Content.ContentManager,Newtonsoft.Json.JsonSerializer)
    name: SetJsonSerializer
    nameWithType: ContentExtensions.SetJsonSerializer
    fullName: MLEM.Data.ContentExtensions.SetJsonSerializer
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.Content.ContentManager
    name: ContentManager
    nameWithType: ContentManager
    fullName: Microsoft.Xna.Framework.Content.ContentManager
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    nameWithType: JsonSerializer
    fullName: Newtonsoft.Json.JsonSerializer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Data.ContentExtensions.SetJsonSerializer(Microsoft.Xna.Framework.Content.ContentManager,Newtonsoft.Json.JsonSerializer)
    name: SetJsonSerializer
    nameWithType: ContentExtensions.SetJsonSerializer
    fullName: MLEM.Data.ContentExtensions.SetJsonSerializer
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.Content.ContentManager
    name: ContentManager
    nameWithType: ContentManager
    fullName: Microsoft.Xna.Framework.Content.ContentManager
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    nameWithType: JsonSerializer
    fullName: Newtonsoft.Json.JsonSerializer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Data.ContentExtensions
  commentId: T:MLEM.Data.ContentExtensions
  parent: MLEM.Data
  name: ContentExtensions
  nameWithType: ContentExtensions
  fullName: MLEM.Data.ContentExtensions
- uid: MLEM.Data.ContentExtensions.GetJsonSerializer(Microsoft.Xna.Framework.Content.ContentManager)
  commentId: M:MLEM.Data.ContentExtensions.GetJsonSerializer(Microsoft.Xna.Framework.Content.ContentManager)
  isExternal: true
  name: GetJsonSerializer(ContentManager)
  nameWithType: ContentExtensions.GetJsonSerializer(ContentManager)
  fullName: MLEM.Data.ContentExtensions.GetJsonSerializer(Microsoft.Xna.Framework.Content.ContentManager)
  spec.csharp:
  - uid: MLEM.Data.ContentExtensions.GetJsonSerializer(Microsoft.Xna.Framework.Content.ContentManager)
    name: GetJsonSerializer
    nameWithType: ContentExtensions.GetJsonSerializer
    fullName: MLEM.Data.ContentExtensions.GetJsonSerializer
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.Content.ContentManager
    name: ContentManager
    nameWithType: ContentManager
    fullName: Microsoft.Xna.Framework.Content.ContentManager
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Data.ContentExtensions.GetJsonSerializer(Microsoft.Xna.Framework.Content.ContentManager)
    name: GetJsonSerializer
    nameWithType: ContentExtensions.GetJsonSerializer
    fullName: MLEM.Data.ContentExtensions.GetJsonSerializer
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.Content.ContentManager
    name: ContentManager
    nameWithType: ContentManager
    fullName: Microsoft.Xna.Framework.Content.ContentManager
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Data.ContentExtensions.AddJsonConverter(Microsoft.Xna.Framework.Content.ContentManager,Newtonsoft.Json.JsonConverter)
  commentId: M:MLEM.Data.ContentExtensions.AddJsonConverter(Microsoft.Xna.Framework.Content.ContentManager,Newtonsoft.Json.JsonConverter)
  isExternal: true
  name: AddJsonConverter(ContentManager, JsonConverter)
  nameWithType: ContentExtensions.AddJsonConverter(ContentManager, JsonConverter)
  fullName: MLEM.Data.ContentExtensions.AddJsonConverter(Microsoft.Xna.Framework.Content.ContentManager, Newtonsoft.Json.JsonConverter)
  spec.csharp:
  - uid: MLEM.Data.ContentExtensions.AddJsonConverter(Microsoft.Xna.Framework.Content.ContentManager,Newtonsoft.Json.JsonConverter)
    name: AddJsonConverter
    nameWithType: ContentExtensions.AddJsonConverter
    fullName: MLEM.Data.ContentExtensions.AddJsonConverter
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.Content.ContentManager
    name: ContentManager
    nameWithType: ContentManager
    fullName: Microsoft.Xna.Framework.Content.ContentManager
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.JsonConverter
    name: JsonConverter
    nameWithType: JsonConverter
    fullName: Newtonsoft.Json.JsonConverter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Data.ContentExtensions.AddJsonConverter(Microsoft.Xna.Framework.Content.ContentManager,Newtonsoft.Json.JsonConverter)
    name: AddJsonConverter
    nameWithType: ContentExtensions.AddJsonConverter
    fullName: MLEM.Data.ContentExtensions.AddJsonConverter
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.Content.ContentManager
    name: ContentManager
    nameWithType: ContentManager
    fullName: Microsoft.Xna.Framework.Content.ContentManager
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.JsonConverter
    name: JsonConverter
    nameWithType: JsonConverter
    fullName: Newtonsoft.Json.JsonConverter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Data.ContentExtensions.LoadJson``1(Microsoft.Xna.Framework.Content.ContentManager,System.String,System.String)
  commentId: M:MLEM.Data.ContentExtensions.LoadJson``1(Microsoft.Xna.Framework.Content.ContentManager,System.String,System.String)
  isExternal: true
  name: LoadJson<T>(ContentManager, String, String)
  nameWithType: ContentExtensions.LoadJson<T>(ContentManager, String, String)
  fullName: MLEM.Data.ContentExtensions.LoadJson<T>(Microsoft.Xna.Framework.Content.ContentManager, System.String, System.String)
  nameWithType.vb: ContentExtensions.LoadJson(Of T)(ContentManager, String, String)
  fullName.vb: MLEM.Data.ContentExtensions.LoadJson(Of T)(Microsoft.Xna.Framework.Content.ContentManager, System.String, System.String)
  name.vb: LoadJson(Of T)(ContentManager, String, String)
  spec.csharp:
  - uid: MLEM.Data.ContentExtensions.LoadJson``1(Microsoft.Xna.Framework.Content.ContentManager,System.String,System.String)
    name: LoadJson<T>
    nameWithType: ContentExtensions.LoadJson<T>
    fullName: MLEM.Data.ContentExtensions.LoadJson<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.Content.ContentManager
    name: ContentManager
    nameWithType: ContentManager
    fullName: Microsoft.Xna.Framework.Content.ContentManager
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Data.ContentExtensions.LoadJson``1(Microsoft.Xna.Framework.Content.ContentManager,System.String,System.String)
    name: LoadJson(Of T)
    nameWithType: ContentExtensions.LoadJson(Of T)
    fullName: MLEM.Data.ContentExtensions.LoadJson(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.Content.ContentManager
    name: ContentManager
    nameWithType: ContentManager
    fullName: Microsoft.Xna.Framework.Content.ContentManager
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Data
  commentId: N:MLEM.Data
  name: MLEM.Data
  nameWithType: MLEM.Data
  fullName: MLEM.Data
- uid: Microsoft.Xna.Framework.Graphics.GraphicsDevice
  commentId: T:Microsoft.Xna.Framework.Graphics.GraphicsDevice
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: GraphicsDevice
  nameWithType: GraphicsDevice
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsDevice
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
- uid: MLEM.Content.RawContentManager.#ctor*
  commentId: Overload:MLEM.Content.RawContentManager.#ctor
  name: RawContentManager
  nameWithType: RawContentManager.RawContentManager
  fullName: MLEM.Content.RawContentManager.RawContentManager
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Xna.Framework.Content.ContentManager.Load``1(System.String)
  commentId: M:Microsoft.Xna.Framework.Content.ContentManager.Load``1(System.String)
  parent: Microsoft.Xna.Framework.Content.ContentManager
  isExternal: true
  name: Load<T>(String)
  nameWithType: ContentManager.Load<T>(String)
  fullName: Microsoft.Xna.Framework.Content.ContentManager.Load<T>(System.String)
  nameWithType.vb: ContentManager.Load(Of T)(String)
  fullName.vb: Microsoft.Xna.Framework.Content.ContentManager.Load(Of T)(System.String)
  name.vb: Load(Of T)(String)
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Content.ContentManager.Load``1(System.String)
    name: Load<T>
    nameWithType: ContentManager.Load<T>
    fullName: Microsoft.Xna.Framework.Content.ContentManager.Load<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Content.ContentManager.Load``1(System.String)
    name: Load(Of T)
    nameWithType: ContentManager.Load(Of T)
    fullName: Microsoft.Xna.Framework.Content.ContentManager.Load(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Content.RawContentManager.Load*
  commentId: Overload:MLEM.Content.RawContentManager.Load
  name: Load
  nameWithType: RawContentManager.Load
  fullName: MLEM.Content.RawContentManager.Load
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Microsoft.Xna.Framework.Content.ContentManager.ReloadAsset``1(System.String,{T})
  commentId: M:Microsoft.Xna.Framework.Content.ContentManager.ReloadAsset``1(System.String,``0)
  parent: Microsoft.Xna.Framework.Content.ContentManager
  definition: Microsoft.Xna.Framework.Content.ContentManager.ReloadAsset``1(System.String,``0)
  name: ReloadAsset<T>(String, T)
  nameWithType: ContentManager.ReloadAsset<T>(String, T)
  fullName: Microsoft.Xna.Framework.Content.ContentManager.ReloadAsset<T>(System.String, T)
  nameWithType.vb: ContentManager.ReloadAsset(Of T)(String, T)
  fullName.vb: Microsoft.Xna.Framework.Content.ContentManager.ReloadAsset(Of T)(System.String, T)
  name.vb: ReloadAsset(Of T)(String, T)
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Content.ContentManager.ReloadAsset``1(System.String,``0)
    name: ReloadAsset<T>
    nameWithType: ContentManager.ReloadAsset<T>
    fullName: Microsoft.Xna.Framework.Content.ContentManager.ReloadAsset<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Content.ContentManager.ReloadAsset``1(System.String,``0)
    name: ReloadAsset(Of T)
    nameWithType: ContentManager.ReloadAsset(Of T)
    fullName: Microsoft.Xna.Framework.Content.ContentManager.ReloadAsset(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Content.RawContentManager.ReloadAsset*
  commentId: Overload:MLEM.Content.RawContentManager.ReloadAsset
  name: ReloadAsset
  nameWithType: RawContentManager.ReloadAsset
  fullName: MLEM.Content.RawContentManager.ReloadAsset
- uid: Microsoft.Xna.Framework.Content.ContentManager.ReloadAsset``1(System.String,``0)
  commentId: M:Microsoft.Xna.Framework.Content.ContentManager.ReloadAsset``1(System.String,``0)
  isExternal: true
  name: ReloadAsset<T>(String, T)
  nameWithType: ContentManager.ReloadAsset<T>(String, T)
  fullName: Microsoft.Xna.Framework.Content.ContentManager.ReloadAsset<T>(System.String, T)
  nameWithType.vb: ContentManager.ReloadAsset(Of T)(String, T)
  fullName.vb: Microsoft.Xna.Framework.Content.ContentManager.ReloadAsset(Of T)(System.String, T)
  name.vb: ReloadAsset(Of T)(String, T)
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Content.ContentManager.ReloadAsset``1(System.String,``0)
    name: ReloadAsset<T>
    nameWithType: ContentManager.ReloadAsset<T>
    fullName: Microsoft.Xna.Framework.Content.ContentManager.ReloadAsset<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Content.ContentManager.ReloadAsset``1(System.String,``0)
    name: ReloadAsset(Of T)
    nameWithType: ContentManager.ReloadAsset(Of T)
    fullName: Microsoft.Xna.Framework.Content.ContentManager.ReloadAsset(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Content.ContentManager.Unload
  commentId: M:Microsoft.Xna.Framework.Content.ContentManager.Unload
  parent: Microsoft.Xna.Framework.Content.ContentManager
  isExternal: true
  name: Unload()
  nameWithType: ContentManager.Unload()
  fullName: Microsoft.Xna.Framework.Content.ContentManager.Unload()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Content.ContentManager.Unload
    name: Unload
    nameWithType: ContentManager.Unload
    fullName: Microsoft.Xna.Framework.Content.ContentManager.Unload
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Content.ContentManager.Unload
    name: Unload
    nameWithType: ContentManager.Unload
    fullName: Microsoft.Xna.Framework.Content.ContentManager.Unload
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Content.RawContentManager.Unload*
  commentId: Overload:MLEM.Content.RawContentManager.Unload
  name: Unload
  nameWithType: RawContentManager.Unload
  fullName: MLEM.Content.RawContentManager.Unload
- uid: MLEM.Content.RawContentManager.Initialize*
  commentId: Overload:MLEM.Content.RawContentManager.Initialize
  name: Initialize
  nameWithType: RawContentManager.Initialize
  fullName: MLEM.Content.RawContentManager.Initialize
- uid: Microsoft.Xna.Framework.IGameComponent.Initialize
  commentId: M:Microsoft.Xna.Framework.IGameComponent.Initialize
  parent: Microsoft.Xna.Framework.IGameComponent
  isExternal: true
  name: Initialize()
  nameWithType: IGameComponent.Initialize()
  fullName: Microsoft.Xna.Framework.IGameComponent.Initialize()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.IGameComponent.Initialize
    name: Initialize
    nameWithType: IGameComponent.Initialize
    fullName: Microsoft.Xna.Framework.IGameComponent.Initialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.IGameComponent.Initialize
    name: Initialize
    nameWithType: IGameComponent.Initialize
    fullName: Microsoft.Xna.Framework.IGameComponent.Initialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
