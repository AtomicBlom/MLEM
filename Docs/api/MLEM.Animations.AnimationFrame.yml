### YamlMime:ManagedReference
items:
- uid: MLEM.Animations.AnimationFrame
  commentId: T:MLEM.Animations.AnimationFrame
  id: AnimationFrame
  parent: MLEM.Animations
  children:
  - MLEM.Animations.AnimationFrame.#ctor(MLEM.Textures.TextureRegion,System.Double)
  - MLEM.Animations.AnimationFrame.Region
  - MLEM.Animations.AnimationFrame.Seconds
  langs:
  - csharp
  - vb
  name: AnimationFrame
  nameWithType: AnimationFrame
  fullName: MLEM.Animations.AnimationFrame
  type: Class
  source:
    remote:
      path: MLEM/Animations/SpriteAnimation.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: AnimationFrame
    path: ../MLEM/Animations/SpriteAnimation.cs
    startLine: 147
  assemblies:
  - MLEM
  namespace: MLEM.Animations
  summary: "\nRepresents a single frame of a <xref href=\"MLEM.Animations.SpriteAnimation\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public class AnimationFrame
    content.vb: Public Class AnimationFrame
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: MLEM.Animations.AnimationFrame.Region
  commentId: F:MLEM.Animations.AnimationFrame.Region
  id: Region
  parent: MLEM.Animations.AnimationFrame
  langs:
  - csharp
  - vb
  name: Region
  nameWithType: AnimationFrame.Region
  fullName: MLEM.Animations.AnimationFrame.Region
  type: Field
  source:
    remote:
      path: MLEM/Animations/SpriteAnimation.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: Region
    path: ../MLEM/Animations/SpriteAnimation.cs
    startLine: 152
  assemblies:
  - MLEM
  namespace: MLEM.Animations
  summary: "\nThe texture region that this frame should render\n"
  example: []
  syntax:
    content: public readonly TextureRegion Region
    return:
      type: MLEM.Textures.TextureRegion
    content.vb: Public ReadOnly Region As TextureRegion
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: MLEM.Animations.AnimationFrame.Seconds
  commentId: F:MLEM.Animations.AnimationFrame.Seconds
  id: Seconds
  parent: MLEM.Animations.AnimationFrame
  langs:
  - csharp
  - vb
  name: Seconds
  nameWithType: AnimationFrame.Seconds
  fullName: MLEM.Animations.AnimationFrame.Seconds
  type: Field
  source:
    remote:
      path: MLEM/Animations/SpriteAnimation.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: Seconds
    path: ../MLEM/Animations/SpriteAnimation.cs
    startLine: 156
  assemblies:
  - MLEM
  namespace: MLEM.Animations
  summary: "\nThe total amount of seconds that this frame should last for\n"
  example: []
  syntax:
    content: public readonly double Seconds
    return:
      type: System.Double
    content.vb: Public ReadOnly Seconds As Double
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: MLEM.Animations.AnimationFrame.#ctor(MLEM.Textures.TextureRegion,System.Double)
  commentId: M:MLEM.Animations.AnimationFrame.#ctor(MLEM.Textures.TextureRegion,System.Double)
  id: '#ctor(MLEM.Textures.TextureRegion,System.Double)'
  parent: MLEM.Animations.AnimationFrame
  langs:
  - csharp
  - vb
  name: AnimationFrame(TextureRegion, Double)
  nameWithType: AnimationFrame.AnimationFrame(TextureRegion, Double)
  fullName: MLEM.Animations.AnimationFrame.AnimationFrame(MLEM.Textures.TextureRegion, System.Double)
  type: Constructor
  source:
    remote:
      path: MLEM/Animations/SpriteAnimation.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: .ctor
    path: ../MLEM/Animations/SpriteAnimation.cs
    startLine: 163
  assemblies:
  - MLEM
  namespace: MLEM.Animations
  summary: "\nCreates a new animation frame based on a texture region and a time\n"
  example: []
  syntax:
    content: public AnimationFrame(TextureRegion region, double seconds)
    parameters:
    - id: region
      type: MLEM.Textures.TextureRegion
      description: The texture region that this frame should render
    - id: seconds
      type: System.Double
      description: The total amount of seconds that this frame should last for
    content.vb: Public Sub New(region As TextureRegion, seconds As Double)
  overload: MLEM.Animations.AnimationFrame.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: MLEM.Animations.SpriteAnimation
  commentId: T:MLEM.Animations.SpriteAnimation
  parent: MLEM.Animations
  name: SpriteAnimation
  nameWithType: SpriteAnimation
  fullName: MLEM.Animations.SpriteAnimation
- uid: MLEM.Animations
  commentId: N:MLEM.Animations
  name: MLEM.Animations
  nameWithType: MLEM.Animations
  fullName: MLEM.Animations
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Textures.TextureRegion
  commentId: T:MLEM.Textures.TextureRegion
  parent: MLEM.Textures
  name: TextureRegion
  nameWithType: TextureRegion
  fullName: MLEM.Textures.TextureRegion
- uid: MLEM.Textures
  commentId: N:MLEM.Textures
  name: MLEM.Textures
  nameWithType: MLEM.Textures
  fullName: MLEM.Textures
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: MLEM.Animations.AnimationFrame.#ctor*
  commentId: Overload:MLEM.Animations.AnimationFrame.#ctor
  name: AnimationFrame
  nameWithType: AnimationFrame.AnimationFrame
  fullName: MLEM.Animations.AnimationFrame.AnimationFrame
