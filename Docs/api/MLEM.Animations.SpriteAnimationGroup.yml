### YamlMime:ManagedReference
items:
- uid: MLEM.Animations.SpriteAnimationGroup
  commentId: T:MLEM.Animations.SpriteAnimationGroup
  id: SpriteAnimationGroup
  parent: MLEM.Animations
  children:
  - MLEM.Animations.SpriteAnimationGroup.Add(MLEM.Animations.SpriteAnimation,System.Func{System.Boolean},System.Int32)
  - MLEM.Animations.SpriteAnimationGroup.ByName(System.String)
  - MLEM.Animations.SpriteAnimationGroup.CurrentAnimation
  - MLEM.Animations.SpriteAnimationGroup.CurrentFrame
  - MLEM.Animations.SpriteAnimationGroup.CurrentRegion
  - MLEM.Animations.SpriteAnimationGroup.OnAnimationChanged
  - MLEM.Animations.SpriteAnimationGroup.SpeedMultiplier
  - MLEM.Animations.SpriteAnimationGroup.Update(Microsoft.Xna.Framework.GameTime)
  langs:
  - csharp
  - vb
  name: SpriteAnimationGroup
  nameWithType: SpriteAnimationGroup
  fullName: MLEM.Animations.SpriteAnimationGroup
  type: Class
  source:
    remote:
      path: MLEM/Animations/SpriteAnimationGroup.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: SpriteAnimationGroup
    path: ../MLEM/Animations/SpriteAnimationGroup.cs
    startLine: 11
  assemblies:
  - MLEM
  namespace: MLEM.Animations
  summary: "\nRepresents a list of <xref href=\"MLEM.Animations.SpriteAnimation\" data-throw-if-not-resolved=\"false\"></xref> objects with a condition and priority attached to them.\nSprite animation groups can be used if any single entity should have multiple animations (like up, down, left, right standing and running animations) that should be automatically managed.\n"
  example: []
  syntax:
    content: 'public class SpriteAnimationGroup : GenericDataHolder'
    content.vb: >-
      Public Class SpriteAnimationGroup
          Inherits GenericDataHolder
  inheritance:
  - System.Object
  - MLEM.Misc.GenericDataHolder
  inheritedMembers:
  - MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
  - MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  - MLEM.Misc.GenericDataHolder.GetDataKeys
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: MLEM.Animations.SpriteAnimationGroup.CurrentAnimation
  commentId: P:MLEM.Animations.SpriteAnimationGroup.CurrentAnimation
  id: CurrentAnimation
  parent: MLEM.Animations.SpriteAnimationGroup
  langs:
  - csharp
  - vb
  name: CurrentAnimation
  nameWithType: SpriteAnimationGroup.CurrentAnimation
  fullName: MLEM.Animations.SpriteAnimationGroup.CurrentAnimation
  type: Property
  source:
    remote:
      path: MLEM/Animations/SpriteAnimationGroup.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: CurrentAnimation
    path: ../MLEM/Animations/SpriteAnimationGroup.cs
    startLine: 29
  assemblies:
  - MLEM
  namespace: MLEM.Animations
  summary: "\nThe animation that is currently playing\n"
  example: []
  syntax:
    content: public SpriteAnimation CurrentAnimation { get; }
    parameters: []
    return:
      type: MLEM.Animations.SpriteAnimation
    content.vb: Public ReadOnly Property CurrentAnimation As SpriteAnimation
  overload: MLEM.Animations.SpriteAnimationGroup.CurrentAnimation*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: MLEM.Animations.SpriteAnimationGroup.CurrentFrame
  commentId: P:MLEM.Animations.SpriteAnimationGroup.CurrentFrame
  id: CurrentFrame
  parent: MLEM.Animations.SpriteAnimationGroup
  langs:
  - csharp
  - vb
  name: CurrentFrame
  nameWithType: SpriteAnimationGroup.CurrentFrame
  fullName: MLEM.Animations.SpriteAnimationGroup.CurrentFrame
  type: Property
  source:
    remote:
      path: MLEM/Animations/SpriteAnimationGroup.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: CurrentFrame
    path: ../MLEM/Animations/SpriteAnimationGroup.cs
    startLine: 33
  assemblies:
  - MLEM
  namespace: MLEM.Animations
  summary: "\nThe frame that <xref href=\"MLEM.Animations.SpriteAnimationGroup.CurrentAnimation\" data-throw-if-not-resolved=\"false\"></xref> is displaying\n"
  example: []
  syntax:
    content: public AnimationFrame CurrentFrame { get; }
    parameters: []
    return:
      type: MLEM.Animations.AnimationFrame
    content.vb: Public ReadOnly Property CurrentFrame As AnimationFrame
  overload: MLEM.Animations.SpriteAnimationGroup.CurrentFrame*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: MLEM.Animations.SpriteAnimationGroup.CurrentRegion
  commentId: P:MLEM.Animations.SpriteAnimationGroup.CurrentRegion
  id: CurrentRegion
  parent: MLEM.Animations.SpriteAnimationGroup
  langs:
  - csharp
  - vb
  name: CurrentRegion
  nameWithType: SpriteAnimationGroup.CurrentRegion
  fullName: MLEM.Animations.SpriteAnimationGroup.CurrentRegion
  type: Property
  source:
    remote:
      path: MLEM/Animations/SpriteAnimationGroup.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: CurrentRegion
    path: ../MLEM/Animations/SpriteAnimationGroup.cs
    startLine: 37
  assemblies:
  - MLEM
  namespace: MLEM.Animations
  summary: "\nThe region that <xref href=\"MLEM.Animations.SpriteAnimationGroup.CurrentFrame\" data-throw-if-not-resolved=\"false\"></xref> has\n"
  example: []
  syntax:
    content: public TextureRegion CurrentRegion { get; }
    parameters: []
    return:
      type: MLEM.Textures.TextureRegion
    content.vb: Public ReadOnly Property CurrentRegion As TextureRegion
  overload: MLEM.Animations.SpriteAnimationGroup.CurrentRegion*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: MLEM.Animations.SpriteAnimationGroup.OnAnimationChanged
  commentId: E:MLEM.Animations.SpriteAnimationGroup.OnAnimationChanged
  id: OnAnimationChanged
  parent: MLEM.Animations.SpriteAnimationGroup
  langs:
  - csharp
  - vb
  name: OnAnimationChanged
  nameWithType: SpriteAnimationGroup.OnAnimationChanged
  fullName: MLEM.Animations.SpriteAnimationGroup.OnAnimationChanged
  type: Event
  source:
    remote:
      path: MLEM/Animations/SpriteAnimationGroup.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: OnAnimationChanged
    path: ../MLEM/Animations/SpriteAnimationGroup.cs
    startLine: 41
  assemblies:
  - MLEM
  namespace: MLEM.Animations
  summary: "\nA callback for when the currently displaying animation has changed due to a condition with a higher priority being met. \n"
  example: []
  syntax:
    content: public event SpriteAnimationGroup.AnimationChanged OnAnimationChanged
    return:
      type: MLEM.Animations.SpriteAnimationGroup.AnimationChanged
    content.vb: Public Event OnAnimationChanged As SpriteAnimationGroup.AnimationChanged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MLEM.Animations.SpriteAnimationGroup.SpeedMultiplier
  commentId: P:MLEM.Animations.SpriteAnimationGroup.SpeedMultiplier
  id: SpeedMultiplier
  parent: MLEM.Animations.SpriteAnimationGroup
  langs:
  - csharp
  - vb
  name: SpeedMultiplier
  nameWithType: SpriteAnimationGroup.SpeedMultiplier
  fullName: MLEM.Animations.SpriteAnimationGroup.SpeedMultiplier
  type: Property
  source:
    remote:
      path: MLEM/Animations/SpriteAnimationGroup.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: SpeedMultiplier
    path: ../MLEM/Animations/SpriteAnimationGroup.cs
    startLine: 44
  assemblies:
  - MLEM
  namespace: MLEM.Animations
  summary: "\nThe speed multiplier that this animation should run with.\nNumbers higher than 1 will increase the speed.\n"
  example: []
  syntax:
    content: public float SpeedMultiplier { set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public WriteOnly Property SpeedMultiplier As Single
  overload: MLEM.Animations.SpriteAnimationGroup.SpeedMultiplier*
  modifiers.csharp:
  - public
  - set
  modifiers.vb:
  - Public
  - WriteOnly
- uid: MLEM.Animations.SpriteAnimationGroup.Add(MLEM.Animations.SpriteAnimation,System.Func{System.Boolean},System.Int32)
  commentId: M:MLEM.Animations.SpriteAnimationGroup.Add(MLEM.Animations.SpriteAnimation,System.Func{System.Boolean},System.Int32)
  id: Add(MLEM.Animations.SpriteAnimation,System.Func{System.Boolean},System.Int32)
  parent: MLEM.Animations.SpriteAnimationGroup
  langs:
  - csharp
  - vb
  name: Add(SpriteAnimation, Func<Boolean>, Int32)
  nameWithType: SpriteAnimationGroup.Add(SpriteAnimation, Func<Boolean>, Int32)
  fullName: MLEM.Animations.SpriteAnimationGroup.Add(MLEM.Animations.SpriteAnimation, System.Func<System.Boolean>, System.Int32)
  type: Method
  source:
    remote:
      path: MLEM/Animations/SpriteAnimationGroup.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: Add
    path: ../MLEM/Animations/SpriteAnimationGroup.cs
    startLine: 58
  assemblies:
  - MLEM
  namespace: MLEM.Animations
  summary: "\nAdds a <xref href=\"MLEM.Animations.SpriteAnimation\" data-throw-if-not-resolved=\"false\"></xref> to this group.\n"
  example: []
  syntax:
    content: public SpriteAnimationGroup Add(SpriteAnimation anim, Func<bool> condition, int priority = 0)
    parameters:
    - id: anim
      type: MLEM.Animations.SpriteAnimation
      description: The animation to add
    - id: condition
      type: System.Func{System.Boolean}
      description: The condition that needs to be met for this animation to play
    - id: priority
      type: System.Int32
      description: The priority of this animation. The higher the priority, the earlier it is picked for playing.
    return:
      type: MLEM.Animations.SpriteAnimationGroup
      description: This group, for chaining
    content.vb: Public Function Add(anim As SpriteAnimation, condition As Func(Of Boolean), priority As Integer = 0) As SpriteAnimationGroup
  overload: MLEM.Animations.SpriteAnimationGroup.Add*
  nameWithType.vb: SpriteAnimationGroup.Add(SpriteAnimation, Func(Of Boolean), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: MLEM.Animations.SpriteAnimationGroup.Add(MLEM.Animations.SpriteAnimation, System.Func(Of System.Boolean), System.Int32)
  name.vb: Add(SpriteAnimation, Func(Of Boolean), Int32)
- uid: MLEM.Animations.SpriteAnimationGroup.Update(Microsoft.Xna.Framework.GameTime)
  commentId: M:MLEM.Animations.SpriteAnimationGroup.Update(Microsoft.Xna.Framework.GameTime)
  id: Update(Microsoft.Xna.Framework.GameTime)
  parent: MLEM.Animations.SpriteAnimationGroup
  langs:
  - csharp
  - vb
  name: Update(GameTime)
  nameWithType: SpriteAnimationGroup.Update(GameTime)
  fullName: MLEM.Animations.SpriteAnimationGroup.Update(Microsoft.Xna.Framework.GameTime)
  type: Method
  source:
    remote:
      path: MLEM/Animations/SpriteAnimationGroup.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: Update
    path: ../MLEM/Animations/SpriteAnimationGroup.cs
    startLine: 65
  assemblies:
  - MLEM
  namespace: MLEM.Animations
  summary: "\nUpdates this animation, causing <xref href=\"MLEM.Animations.SpriteAnimation.TimeIntoAnimation\" data-throw-if-not-resolved=\"false\"></xref> to be increased and the <xref href=\"MLEM.Animations.SpriteAnimation.CurrentFrame\" data-throw-if-not-resolved=\"false\"></xref> to be updated.\n"
  example: []
  syntax:
    content: public void Update(GameTime time)
    parameters:
    - id: time
      type: Microsoft.Xna.Framework.GameTime
      description: The game&apos;s time
    content.vb: Public Sub Update(time As GameTime)
  overload: MLEM.Animations.SpriteAnimationGroup.Update*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MLEM.Animations.SpriteAnimationGroup.ByName(System.String)
  commentId: M:MLEM.Animations.SpriteAnimationGroup.ByName(System.String)
  id: ByName(System.String)
  parent: MLEM.Animations.SpriteAnimationGroup
  langs:
  - csharp
  - vb
  name: ByName(String)
  nameWithType: SpriteAnimationGroup.ByName(String)
  fullName: MLEM.Animations.SpriteAnimationGroup.ByName(System.String)
  type: Method
  source:
    remote:
      path: MLEM/Animations/SpriteAnimationGroup.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: ByName
    path: ../MLEM/Animations/SpriteAnimationGroup.cs
    startLine: 76
  assemblies:
  - MLEM
  namespace: MLEM.Animations
  summary: "\nFind an animation in this group by name and returns it.\n"
  example: []
  syntax:
    content: public SpriteAnimation ByName(string name)
    parameters:
    - id: name
      type: System.String
      description: The <xref href="MLEM.Animations.SpriteAnimation.Name" data-throw-if-not-resolved="false"></xref> of the animation
    return:
      type: MLEM.Animations.SpriteAnimation
      description: The animation by that name, or <code>null</code> if there is none
    content.vb: Public Function ByName(name As String) As SpriteAnimation
  overload: MLEM.Animations.SpriteAnimationGroup.ByName*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: MLEM.Animations.SpriteAnimation
  commentId: T:MLEM.Animations.SpriteAnimation
  parent: MLEM.Animations
  name: SpriteAnimation
  nameWithType: SpriteAnimation
  fullName: MLEM.Animations.SpriteAnimation
- uid: MLEM.Animations
  commentId: N:MLEM.Animations
  name: MLEM.Animations
  nameWithType: MLEM.Animations
  fullName: MLEM.Animations
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: MLEM.Misc.GenericDataHolder
  commentId: T:MLEM.Misc.GenericDataHolder
  parent: MLEM.Misc
  name: GenericDataHolder
  nameWithType: GenericDataHolder
  fullName: MLEM.Misc.GenericDataHolder
- uid: MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
  commentId: M:MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
  parent: MLEM.Misc.GenericDataHolder
  isExternal: true
  name: SetData(String, Object)
  nameWithType: GenericDataHolder.SetData(String, Object)
  fullName: MLEM.Misc.GenericDataHolder.SetData(System.String, System.Object)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
    name: SetData
    nameWithType: GenericDataHolder.SetData
    fullName: MLEM.Misc.GenericDataHolder.SetData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
    name: SetData
    nameWithType: GenericDataHolder.SetData
    fullName: MLEM.Misc.GenericDataHolder.SetData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  commentId: M:MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  parent: MLEM.Misc.GenericDataHolder
  isExternal: true
  name: GetData<T>(String)
  nameWithType: GenericDataHolder.GetData<T>(String)
  fullName: MLEM.Misc.GenericDataHolder.GetData<T>(System.String)
  nameWithType.vb: GenericDataHolder.GetData(Of T)(String)
  fullName.vb: MLEM.Misc.GenericDataHolder.GetData(Of T)(System.String)
  name.vb: GetData(Of T)(String)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
    name: GetData<T>
    nameWithType: GenericDataHolder.GetData<T>
    fullName: MLEM.Misc.GenericDataHolder.GetData<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
    name: GetData(Of T)
    nameWithType: GenericDataHolder.GetData(Of T)
    fullName: MLEM.Misc.GenericDataHolder.GetData(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Misc.GenericDataHolder.GetDataKeys
  commentId: M:MLEM.Misc.GenericDataHolder.GetDataKeys
  parent: MLEM.Misc.GenericDataHolder
  name: GetDataKeys()
  nameWithType: GenericDataHolder.GetDataKeys()
  fullName: MLEM.Misc.GenericDataHolder.GetDataKeys()
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.GetDataKeys
    name: GetDataKeys
    nameWithType: GenericDataHolder.GetDataKeys
    fullName: MLEM.Misc.GenericDataHolder.GetDataKeys
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.GetDataKeys
    name: GetDataKeys
    nameWithType: GenericDataHolder.GetDataKeys
    fullName: MLEM.Misc.GenericDataHolder.GetDataKeys
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
- uid: MLEM.Animations.SpriteAnimationGroup.CurrentAnimation*
  commentId: Overload:MLEM.Animations.SpriteAnimationGroup.CurrentAnimation
  name: CurrentAnimation
  nameWithType: SpriteAnimationGroup.CurrentAnimation
  fullName: MLEM.Animations.SpriteAnimationGroup.CurrentAnimation
- uid: MLEM.Animations.SpriteAnimationGroup.CurrentAnimation
  commentId: P:MLEM.Animations.SpriteAnimationGroup.CurrentAnimation
  isExternal: true
- uid: MLEM.Animations.SpriteAnimationGroup.CurrentFrame*
  commentId: Overload:MLEM.Animations.SpriteAnimationGroup.CurrentFrame
  name: CurrentFrame
  nameWithType: SpriteAnimationGroup.CurrentFrame
  fullName: MLEM.Animations.SpriteAnimationGroup.CurrentFrame
- uid: MLEM.Animations.AnimationFrame
  commentId: T:MLEM.Animations.AnimationFrame
  parent: MLEM.Animations
  name: AnimationFrame
  nameWithType: AnimationFrame
  fullName: MLEM.Animations.AnimationFrame
- uid: MLEM.Animations.SpriteAnimationGroup.CurrentFrame
  commentId: P:MLEM.Animations.SpriteAnimationGroup.CurrentFrame
  isExternal: true
- uid: MLEM.Animations.SpriteAnimationGroup.CurrentRegion*
  commentId: Overload:MLEM.Animations.SpriteAnimationGroup.CurrentRegion
  name: CurrentRegion
  nameWithType: SpriteAnimationGroup.CurrentRegion
  fullName: MLEM.Animations.SpriteAnimationGroup.CurrentRegion
- uid: MLEM.Textures.TextureRegion
  commentId: T:MLEM.Textures.TextureRegion
  parent: MLEM.Textures
  name: TextureRegion
  nameWithType: TextureRegion
  fullName: MLEM.Textures.TextureRegion
- uid: MLEM.Textures
  commentId: N:MLEM.Textures
  name: MLEM.Textures
  nameWithType: MLEM.Textures
  fullName: MLEM.Textures
- uid: MLEM.Animations.SpriteAnimationGroup.AnimationChanged
  commentId: T:MLEM.Animations.SpriteAnimationGroup.AnimationChanged
  parent: MLEM.Animations
  name: SpriteAnimationGroup.AnimationChanged
  nameWithType: SpriteAnimationGroup.AnimationChanged
  fullName: MLEM.Animations.SpriteAnimationGroup.AnimationChanged
- uid: MLEM.Animations.SpriteAnimation.SpeedMultiplier
  commentId: F:MLEM.Animations.SpriteAnimation.SpeedMultiplier
  isExternal: true
- uid: MLEM.Animations.SpriteAnimationGroup.SpeedMultiplier*
  commentId: Overload:MLEM.Animations.SpriteAnimationGroup.SpeedMultiplier
  name: SpeedMultiplier
  nameWithType: SpriteAnimationGroup.SpeedMultiplier
  fullName: MLEM.Animations.SpriteAnimationGroup.SpeedMultiplier
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: MLEM.Animations.SpriteAnimationGroup.Add*
  commentId: Overload:MLEM.Animations.SpriteAnimationGroup.Add
  name: Add
  nameWithType: SpriteAnimationGroup.Add
  fullName: MLEM.Animations.SpriteAnimationGroup.Add
- uid: System.Func{System.Boolean}
  commentId: T:System.Func{System.Boolean}
  parent: System
  definition: System.Func`1
  name: Func<Boolean>
  nameWithType: Func<Boolean>
  fullName: System.Func<System.Boolean>
  nameWithType.vb: Func(Of Boolean)
  fullName.vb: System.Func(Of System.Boolean)
  name.vb: Func(Of Boolean)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: MLEM.Animations.SpriteAnimationGroup
  commentId: T:MLEM.Animations.SpriteAnimationGroup
  parent: MLEM.Animations
  name: SpriteAnimationGroup
  nameWithType: SpriteAnimationGroup
  fullName: MLEM.Animations.SpriteAnimationGroup
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Animations.SpriteAnimation.Update(Microsoft.Xna.Framework.GameTime)
  commentId: M:MLEM.Animations.SpriteAnimation.Update(Microsoft.Xna.Framework.GameTime)
  isExternal: true
- uid: MLEM.Animations.SpriteAnimationGroup.Update*
  commentId: Overload:MLEM.Animations.SpriteAnimationGroup.Update
  name: Update
  nameWithType: SpriteAnimationGroup.Update
  fullName: MLEM.Animations.SpriteAnimationGroup.Update
- uid: Microsoft.Xna.Framework.GameTime
  commentId: T:Microsoft.Xna.Framework.GameTime
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: GameTime
  nameWithType: GameTime
  fullName: Microsoft.Xna.Framework.GameTime
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
- uid: MLEM.Animations.SpriteAnimation.Name
  commentId: F:MLEM.Animations.SpriteAnimation.Name
  isExternal: true
- uid: MLEM.Animations.SpriteAnimationGroup.ByName*
  commentId: Overload:MLEM.Animations.SpriteAnimationGroup.ByName
  name: ByName
  nameWithType: SpriteAnimationGroup.ByName
  fullName: MLEM.Animations.SpriteAnimationGroup.ByName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
