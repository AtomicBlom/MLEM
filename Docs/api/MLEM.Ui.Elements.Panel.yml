### YamlMime:ManagedReference
items:
- uid: MLEM.Ui.Elements.Panel
  commentId: T:MLEM.Ui.Elements.Panel
  id: Panel
  parent: MLEM.Ui.Elements
  children:
  - MLEM.Ui.Elements.Panel.#ctor(MLEM.Ui.Anchor,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Boolean,System.Boolean,System.Nullable{Microsoft.Xna.Framework.Point},System.Boolean)
  - MLEM.Ui.Elements.Panel.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single,Microsoft.Xna.Framework.Graphics.BlendState,Microsoft.Xna.Framework.Graphics.SamplerState,Microsoft.Xna.Framework.Matrix)
  - MLEM.Ui.Elements.Panel.DrawEarly(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single,Microsoft.Xna.Framework.Graphics.BlendState,Microsoft.Xna.Framework.Graphics.SamplerState,Microsoft.Xna.Framework.Matrix)
  - MLEM.Ui.Elements.Panel.ForceUpdateArea
  - MLEM.Ui.Elements.Panel.ForceUpdateSortedChildren
  - MLEM.Ui.Elements.Panel.GetElementUnderPos(Microsoft.Xna.Framework.Vector2)
  - MLEM.Ui.Elements.Panel.GetRelevantChildren
  - MLEM.Ui.Elements.Panel.InitStyle(MLEM.Ui.Style.UiStyle)
  - MLEM.Ui.Elements.Panel.ScrollBar
  - MLEM.Ui.Elements.Panel.ScrollSetup
  - MLEM.Ui.Elements.Panel.Texture
  langs:
  - csharp
  - vb
  name: Panel
  nameWithType: Panel
  fullName: MLEM.Ui.Elements.Panel
  type: Class
  source:
    remote:
      path: MLEM.Ui/Elements/Panel.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: Panel
    path: ../MLEM.Ui/Elements/Panel.cs
    startLine: 12
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: 'public class Panel : Element'
    content.vb: >-
      Public Class Panel

          Inherits Element
  inheritance:
  - System.Object
  - MLEM.Misc.GenericDataHolder
  - MLEM.Ui.Elements.Element
  derivedClasses:
  - MLEM.Ui.Elements.Tooltip
  inheritedMembers:
  - MLEM.Ui.Elements.Element.Children
  - MLEM.Ui.Elements.Element.SortedChildren
  - MLEM.Ui.Elements.Element.System
  - MLEM.Ui.Elements.Element.Controls
  - MLEM.Ui.Elements.Element.Input
  - MLEM.Ui.Elements.Element.Parent
  - MLEM.Ui.Elements.Element.Root
  - MLEM.Ui.Elements.Element.Scale
  - MLEM.Ui.Elements.Element.Anchor
  - MLEM.Ui.Elements.Element.Size
  - MLEM.Ui.Elements.Element.ScaledSize
  - MLEM.Ui.Elements.Element.PositionOffset
  - MLEM.Ui.Elements.Element.ScaledOffset
  - MLEM.Ui.Elements.Element.Padding
  - MLEM.Ui.Elements.Element.ScaledPadding
  - MLEM.Ui.Elements.Element.ChildPadding
  - MLEM.Ui.Elements.Element.ScaledChildPadding
  - MLEM.Ui.Elements.Element.ChildPaddedArea
  - MLEM.Ui.Elements.Element.UnscrolledArea
  - MLEM.Ui.Elements.Element.Area
  - MLEM.Ui.Elements.Element.DisplayArea
  - MLEM.Ui.Elements.Element.ScrollOffset
  - MLEM.Ui.Elements.Element.ScaledScrollOffset
  - MLEM.Ui.Elements.Element.IsHidden
  - MLEM.Ui.Elements.Element.Priority
  - MLEM.Ui.Elements.Element.CanBeSelected
  - MLEM.Ui.Elements.Element.CanBeMoused
  - MLEM.Ui.Elements.Element.CanBePressed
  - MLEM.Ui.Elements.Element.CanAutoAnchorsAttach
  - MLEM.Ui.Elements.Element.SetHeightBasedOnChildren
  - MLEM.Ui.Elements.Element.SetWidthBasedOnChildren
  - MLEM.Ui.Elements.Element.DrawAlpha
  - MLEM.Ui.Elements.Element.IsMouseOver
  - MLEM.Ui.Elements.Element.IsSelected
  - MLEM.Ui.Elements.Element.OnDrawn
  - MLEM.Ui.Elements.Element.OnUpdated
  - MLEM.Ui.Elements.Element.OnPressed
  - MLEM.Ui.Elements.Element.OnSecondaryPressed
  - MLEM.Ui.Elements.Element.OnSelected
  - MLEM.Ui.Elements.Element.OnDeselected
  - MLEM.Ui.Elements.Element.OnMouseEnter
  - MLEM.Ui.Elements.Element.OnMouseExit
  - MLEM.Ui.Elements.Element.OnTextInput
  - MLEM.Ui.Elements.Element.OnAreaUpdated
  - MLEM.Ui.Elements.Element.OnMousedElementChanged
  - MLEM.Ui.Elements.Element.OnSelectedElementChanged
  - MLEM.Ui.Elements.Element.GetTabNextElement
  - MLEM.Ui.Elements.Element.GetGamepadNextElement
  - MLEM.Ui.Elements.Element.OnChildAdded
  - MLEM.Ui.Elements.Element.OnChildRemoved
  - MLEM.Ui.Elements.Element.SelectionIndicator
  - MLEM.Ui.Elements.Element.ActionSound
  - MLEM.Ui.Elements.Element.SecondActionSound
  - MLEM.Ui.Elements.Element.AddChild``1({T},System.Int32)
  - MLEM.Ui.Elements.Element.RemoveChild(MLEM.Ui.Elements.Element)
  - MLEM.Ui.Elements.Element.RemoveChildren(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  - MLEM.Ui.Elements.Element.SetSortedChildrenDirty
  - MLEM.Ui.Elements.Element.UpdateSortedChildrenIfDirty
  - MLEM.Ui.Elements.Element.SetAreaDirty
  - MLEM.Ui.Elements.Element.UpdateAreaIfDirty
  - MLEM.Ui.Elements.Element.CalcActualSize(MLEM.Misc.RectangleF)
  - MLEM.Ui.Elements.Element.GetAreaForAutoAnchors
  - MLEM.Ui.Elements.Element.GetLowestChild(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  - MLEM.Ui.Elements.Element.GetRightmostChild(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  - MLEM.Ui.Elements.Element.GetLowestOlderSibling(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  - MLEM.Ui.Elements.Element.GetOlderSibling(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  - MLEM.Ui.Elements.Element.GetSiblings(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  - MLEM.Ui.Elements.Element.GetChildren``1(System.Func{{T},System.Boolean},System.Boolean,System.Boolean)
  - MLEM.Ui.Elements.Element.GetChildren(System.Func{MLEM.Ui.Elements.Element,System.Boolean},System.Boolean,System.Boolean)
  - MLEM.Ui.Elements.Element.GetParentTree
  - MLEM.Ui.Elements.Element.Update(Microsoft.Xna.Framework.GameTime)
  - MLEM.Ui.Elements.Element.AndChildren(System.Action{MLEM.Ui.Elements.Element})
  - MLEM.Ui.Elements.Element.ReorderChildren(System.Comparison{MLEM.Ui.Elements.Element})
  - MLEM.Ui.Elements.Element.ReverseChildren(System.Int32,System.Nullable{System.Int32})
  - MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
  - MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  - MLEM.Misc.GenericDataHolder.GetDataKeys
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: MLEM.Ui.Elements.Panel.Texture
  commentId: F:MLEM.Ui.Elements.Panel.Texture
  id: Texture
  parent: MLEM.Ui.Elements.Panel
  langs:
  - csharp
  - vb
  name: Texture
  nameWithType: Panel.Texture
  fullName: MLEM.Ui.Elements.Panel.Texture
  type: Field
  source:
    remote:
      path: MLEM.Ui/Elements/Panel.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: Texture
    path: ../MLEM.Ui/Elements/Panel.cs
    startLine: 14
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public StyleProp<NinePatch> Texture
    return:
      type: MLEM.Ui.Style.StyleProp{MLEM.Textures.NinePatch}
    content.vb: Public Texture As StyleProp(Of NinePatch)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Panel.ScrollBar
  commentId: F:MLEM.Ui.Elements.Panel.ScrollBar
  id: ScrollBar
  parent: MLEM.Ui.Elements.Panel
  langs:
  - csharp
  - vb
  name: ScrollBar
  nameWithType: Panel.ScrollBar
  fullName: MLEM.Ui.Elements.Panel.ScrollBar
  type: Field
  source:
    remote:
      path: MLEM.Ui/Elements/Panel.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: ScrollBar
    path: ../MLEM.Ui/Elements/Panel.cs
    startLine: 15
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public readonly ScrollBar ScrollBar
    return:
      type: MLEM.Ui.Elements.ScrollBar
    content.vb: Public ReadOnly ScrollBar As ScrollBar
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: MLEM.Ui.Elements.Panel.#ctor(MLEM.Ui.Anchor,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Boolean,System.Boolean,System.Nullable{Microsoft.Xna.Framework.Point},System.Boolean)
  commentId: M:MLEM.Ui.Elements.Panel.#ctor(MLEM.Ui.Anchor,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Boolean,System.Boolean,System.Nullable{Microsoft.Xna.Framework.Point},System.Boolean)
  id: '#ctor(MLEM.Ui.Anchor,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Boolean,System.Boolean,System.Nullable{Microsoft.Xna.Framework.Point},System.Boolean)'
  parent: MLEM.Ui.Elements.Panel
  langs:
  - csharp
  - vb
  name: Panel(Anchor, Vector2, Vector2, Boolean, Boolean, Nullable<Point>, Boolean)
  nameWithType: Panel.Panel(Anchor, Vector2, Vector2, Boolean, Boolean, Nullable<Point>, Boolean)
  fullName: MLEM.Ui.Elements.Panel.Panel(MLEM.Ui.Anchor, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2, System.Boolean, System.Boolean, System.Nullable<Microsoft.Xna.Framework.Point>, System.Boolean)
  type: Constructor
  source:
    remote:
      path: MLEM.Ui/Elements/Panel.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: .ctor
    path: ../MLEM.Ui/Elements/Panel.cs
    startLine: 21
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public Panel(Anchor anchor, Vector2 size, Vector2 positionOffset, bool setHeightBasedOnChildren = false, bool scrollOverflow = false, Point? scrollerSize = default(Point? ), bool autoHideScrollbar = true)
    parameters:
    - id: anchor
      type: MLEM.Ui.Anchor
    - id: size
      type: Microsoft.Xna.Framework.Vector2
    - id: positionOffset
      type: Microsoft.Xna.Framework.Vector2
    - id: setHeightBasedOnChildren
      type: System.Boolean
    - id: scrollOverflow
      type: System.Boolean
    - id: scrollerSize
      type: System.Nullable{Microsoft.Xna.Framework.Point}
    - id: autoHideScrollbar
      type: System.Boolean
    content.vb: Public Sub New(anchor As Anchor, size As Vector2, positionOffset As Vector2, setHeightBasedOnChildren As Boolean = False, scrollOverflow As Boolean = False, scrollerSize As Point? = Nothing, autoHideScrollbar As Boolean = True)
  overload: MLEM.Ui.Elements.Panel.#ctor*
  nameWithType.vb: Panel.Panel(Anchor, Vector2, Vector2, Boolean, Boolean, Nullable(Of Point), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: MLEM.Ui.Elements.Panel.Panel(MLEM.Ui.Anchor, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2, System.Boolean, System.Boolean, System.Nullable(Of Microsoft.Xna.Framework.Point), System.Boolean)
  name.vb: Panel(Anchor, Vector2, Vector2, Boolean, Boolean, Nullable(Of Point), Boolean)
- uid: MLEM.Ui.Elements.Panel.ForceUpdateArea
  commentId: M:MLEM.Ui.Elements.Panel.ForceUpdateArea
  id: ForceUpdateArea
  parent: MLEM.Ui.Elements.Panel
  langs:
  - csharp
  - vb
  name: ForceUpdateArea()
  nameWithType: Panel.ForceUpdateArea()
  fullName: MLEM.Ui.Elements.Panel.ForceUpdateArea()
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/Panel.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: ForceUpdateArea
    path: ../MLEM.Ui/Elements/Panel.cs
    startLine: 55
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public override void ForceUpdateArea()
    content.vb: Public Overrides Sub ForceUpdateArea
  overridden: MLEM.Ui.Elements.Element.ForceUpdateArea
  overload: MLEM.Ui.Elements.Panel.ForceUpdateArea*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: MLEM.Ui.Elements.Panel.ForceUpdateSortedChildren
  commentId: M:MLEM.Ui.Elements.Panel.ForceUpdateSortedChildren
  id: ForceUpdateSortedChildren
  parent: MLEM.Ui.Elements.Panel
  langs:
  - csharp
  - vb
  name: ForceUpdateSortedChildren()
  nameWithType: Panel.ForceUpdateSortedChildren()
  fullName: MLEM.Ui.Elements.Panel.ForceUpdateSortedChildren()
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/Panel.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: ForceUpdateSortedChildren
    path: ../MLEM.Ui/Elements/Panel.cs
    startLine: 83
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public override void ForceUpdateSortedChildren()
    content.vb: Public Overrides Sub ForceUpdateSortedChildren
  overridden: MLEM.Ui.Elements.Element.ForceUpdateSortedChildren
  overload: MLEM.Ui.Elements.Panel.ForceUpdateSortedChildren*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: MLEM.Ui.Elements.Panel.GetRelevantChildren
  commentId: M:MLEM.Ui.Elements.Panel.GetRelevantChildren
  id: GetRelevantChildren
  parent: MLEM.Ui.Elements.Panel
  langs:
  - csharp
  - vb
  name: GetRelevantChildren()
  nameWithType: Panel.GetRelevantChildren()
  fullName: MLEM.Ui.Elements.Panel.GetRelevantChildren()
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/Panel.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: GetRelevantChildren
    path: ../MLEM.Ui/Elements/Panel.cs
    startLine: 89
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: protected override List<Element> GetRelevantChildren()
    return:
      type: System.Collections.Generic.List{MLEM.Ui.Elements.Element}
    content.vb: Protected Overrides Function GetRelevantChildren As List(Of Element)
  overridden: MLEM.Ui.Elements.Element.GetRelevantChildren
  overload: MLEM.Ui.Elements.Panel.GetRelevantChildren*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: MLEM.Ui.Elements.Panel.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single,Microsoft.Xna.Framework.Graphics.BlendState,Microsoft.Xna.Framework.Graphics.SamplerState,Microsoft.Xna.Framework.Matrix)
  commentId: M:MLEM.Ui.Elements.Panel.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single,Microsoft.Xna.Framework.Graphics.BlendState,Microsoft.Xna.Framework.Graphics.SamplerState,Microsoft.Xna.Framework.Matrix)
  id: Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single,Microsoft.Xna.Framework.Graphics.BlendState,Microsoft.Xna.Framework.Graphics.SamplerState,Microsoft.Xna.Framework.Matrix)
  parent: MLEM.Ui.Elements.Panel
  langs:
  - csharp
  - vb
  name: Draw(GameTime, SpriteBatch, Single, BlendState, SamplerState, Matrix)
  nameWithType: Panel.Draw(GameTime, SpriteBatch, Single, BlendState, SamplerState, Matrix)
  fullName: MLEM.Ui.Elements.Panel.Draw(Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch, System.Single, Microsoft.Xna.Framework.Graphics.BlendState, Microsoft.Xna.Framework.Graphics.SamplerState, Microsoft.Xna.Framework.Matrix)
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/Panel.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: Draw
    path: ../MLEM.Ui/Elements/Panel.cs
    startLine: 115
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public override void Draw(GameTime time, SpriteBatch batch, float alpha, BlendState blendState, SamplerState samplerState, Matrix matrix)
    parameters:
    - id: time
      type: Microsoft.Xna.Framework.GameTime
    - id: batch
      type: Microsoft.Xna.Framework.Graphics.SpriteBatch
    - id: alpha
      type: System.Single
    - id: blendState
      type: Microsoft.Xna.Framework.Graphics.BlendState
    - id: samplerState
      type: Microsoft.Xna.Framework.Graphics.SamplerState
    - id: matrix
      type: Microsoft.Xna.Framework.Matrix
    content.vb: Public Overrides Sub Draw(time As GameTime, batch As SpriteBatch, alpha As Single, blendState As BlendState, samplerState As SamplerState, matrix As Matrix)
  overridden: MLEM.Ui.Elements.Element.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single,Microsoft.Xna.Framework.Graphics.BlendState,Microsoft.Xna.Framework.Graphics.SamplerState,Microsoft.Xna.Framework.Matrix)
  overload: MLEM.Ui.Elements.Panel.Draw*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: MLEM.Ui.Elements.Panel.DrawEarly(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single,Microsoft.Xna.Framework.Graphics.BlendState,Microsoft.Xna.Framework.Graphics.SamplerState,Microsoft.Xna.Framework.Matrix)
  commentId: M:MLEM.Ui.Elements.Panel.DrawEarly(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single,Microsoft.Xna.Framework.Graphics.BlendState,Microsoft.Xna.Framework.Graphics.SamplerState,Microsoft.Xna.Framework.Matrix)
  id: DrawEarly(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single,Microsoft.Xna.Framework.Graphics.BlendState,Microsoft.Xna.Framework.Graphics.SamplerState,Microsoft.Xna.Framework.Matrix)
  parent: MLEM.Ui.Elements.Panel
  langs:
  - csharp
  - vb
  name: DrawEarly(GameTime, SpriteBatch, Single, BlendState, SamplerState, Matrix)
  nameWithType: Panel.DrawEarly(GameTime, SpriteBatch, Single, BlendState, SamplerState, Matrix)
  fullName: MLEM.Ui.Elements.Panel.DrawEarly(Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch, System.Single, Microsoft.Xna.Framework.Graphics.BlendState, Microsoft.Xna.Framework.Graphics.SamplerState, Microsoft.Xna.Framework.Matrix)
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/Panel.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: DrawEarly
    path: ../MLEM.Ui/Elements/Panel.cs
    startLine: 127
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public override void DrawEarly(GameTime time, SpriteBatch batch, float alpha, BlendState blendState, SamplerState samplerState, Matrix matrix)
    parameters:
    - id: time
      type: Microsoft.Xna.Framework.GameTime
    - id: batch
      type: Microsoft.Xna.Framework.Graphics.SpriteBatch
    - id: alpha
      type: System.Single
    - id: blendState
      type: Microsoft.Xna.Framework.Graphics.BlendState
    - id: samplerState
      type: Microsoft.Xna.Framework.Graphics.SamplerState
    - id: matrix
      type: Microsoft.Xna.Framework.Matrix
    content.vb: Public Overrides Sub DrawEarly(time As GameTime, batch As SpriteBatch, alpha As Single, blendState As BlendState, samplerState As SamplerState, matrix As Matrix)
  overridden: MLEM.Ui.Elements.Element.DrawEarly(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single,Microsoft.Xna.Framework.Graphics.BlendState,Microsoft.Xna.Framework.Graphics.SamplerState,Microsoft.Xna.Framework.Matrix)
  overload: MLEM.Ui.Elements.Panel.DrawEarly*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: MLEM.Ui.Elements.Panel.GetElementUnderPos(Microsoft.Xna.Framework.Vector2)
  commentId: M:MLEM.Ui.Elements.Panel.GetElementUnderPos(Microsoft.Xna.Framework.Vector2)
  id: GetElementUnderPos(Microsoft.Xna.Framework.Vector2)
  parent: MLEM.Ui.Elements.Panel
  langs:
  - csharp
  - vb
  name: GetElementUnderPos(Vector2)
  nameWithType: Panel.GetElementUnderPos(Vector2)
  fullName: MLEM.Ui.Elements.Panel.GetElementUnderPos(Microsoft.Xna.Framework.Vector2)
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/Panel.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: GetElementUnderPos
    path: ../MLEM.Ui/Elements/Panel.cs
    startLine: 148
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public override Element GetElementUnderPos(Vector2 position)
    parameters:
    - id: position
      type: Microsoft.Xna.Framework.Vector2
    return:
      type: MLEM.Ui.Elements.Element
    content.vb: Public Overrides Function GetElementUnderPos(position As Vector2) As Element
  overridden: MLEM.Ui.Elements.Element.GetElementUnderPos(Microsoft.Xna.Framework.Vector2)
  overload: MLEM.Ui.Elements.Panel.GetElementUnderPos*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: MLEM.Ui.Elements.Panel.InitStyle(MLEM.Ui.Style.UiStyle)
  commentId: M:MLEM.Ui.Elements.Panel.InitStyle(MLEM.Ui.Style.UiStyle)
  id: InitStyle(MLEM.Ui.Style.UiStyle)
  parent: MLEM.Ui.Elements.Panel
  langs:
  - csharp
  - vb
  name: InitStyle(UiStyle)
  nameWithType: Panel.InitStyle(UiStyle)
  fullName: MLEM.Ui.Elements.Panel.InitStyle(MLEM.Ui.Style.UiStyle)
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/Panel.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: InitStyle
    path: ../MLEM.Ui/Elements/Panel.cs
    startLine: 162
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: protected override void InitStyle(UiStyle style)
    parameters:
    - id: style
      type: MLEM.Ui.Style.UiStyle
    content.vb: Protected Overrides Sub InitStyle(style As UiStyle)
  overridden: MLEM.Ui.Elements.Element.InitStyle(MLEM.Ui.Style.UiStyle)
  overload: MLEM.Ui.Elements.Panel.InitStyle*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: MLEM.Ui.Elements.Panel.ScrollSetup
  commentId: M:MLEM.Ui.Elements.Panel.ScrollSetup
  id: ScrollSetup
  parent: MLEM.Ui.Elements.Panel
  langs:
  - csharp
  - vb
  name: ScrollSetup()
  nameWithType: Panel.ScrollSetup()
  fullName: MLEM.Ui.Elements.Panel.ScrollSetup()
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/Panel.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: ScrollSetup
    path: ../MLEM.Ui/Elements/Panel.cs
    startLine: 167
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: protected virtual void ScrollSetup()
    content.vb: Protected Overridable Sub ScrollSetup
  overload: MLEM.Ui.Elements.Panel.ScrollSetup*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: MLEM.Ui.Elements
  commentId: N:MLEM.Ui.Elements
  name: MLEM.Ui.Elements
  nameWithType: MLEM.Ui.Elements
  fullName: MLEM.Ui.Elements
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: MLEM.Misc.GenericDataHolder
  commentId: T:MLEM.Misc.GenericDataHolder
  parent: MLEM.Misc
  name: GenericDataHolder
  nameWithType: GenericDataHolder
  fullName: MLEM.Misc.GenericDataHolder
- uid: MLEM.Ui.Elements.Element
  commentId: T:MLEM.Ui.Elements.Element
  parent: MLEM.Ui.Elements
  name: Element
  nameWithType: Element
  fullName: MLEM.Ui.Elements.Element
- uid: MLEM.Ui.Elements.Element.Children
  commentId: F:MLEM.Ui.Elements.Element.Children
  parent: MLEM.Ui.Elements.Element
  name: Children
  nameWithType: Element.Children
  fullName: MLEM.Ui.Elements.Element.Children
- uid: MLEM.Ui.Elements.Element.SortedChildren
  commentId: P:MLEM.Ui.Elements.Element.SortedChildren
  parent: MLEM.Ui.Elements.Element
  name: SortedChildren
  nameWithType: Element.SortedChildren
  fullName: MLEM.Ui.Elements.Element.SortedChildren
- uid: MLEM.Ui.Elements.Element.System
  commentId: P:MLEM.Ui.Elements.Element.System
  parent: MLEM.Ui.Elements.Element
  name: System
  nameWithType: Element.System
  fullName: MLEM.Ui.Elements.Element.System
- uid: MLEM.Ui.Elements.Element.Controls
  commentId: F:MLEM.Ui.Elements.Element.Controls
  parent: MLEM.Ui.Elements.Element
  name: Controls
  nameWithType: Element.Controls
  fullName: MLEM.Ui.Elements.Element.Controls
- uid: MLEM.Ui.Elements.Element.Input
  commentId: P:MLEM.Ui.Elements.Element.Input
  parent: MLEM.Ui.Elements.Element
  name: Input
  nameWithType: Element.Input
  fullName: MLEM.Ui.Elements.Element.Input
- uid: MLEM.Ui.Elements.Element.Parent
  commentId: P:MLEM.Ui.Elements.Element.Parent
  parent: MLEM.Ui.Elements.Element
  name: Parent
  nameWithType: Element.Parent
  fullName: MLEM.Ui.Elements.Element.Parent
- uid: MLEM.Ui.Elements.Element.Root
  commentId: P:MLEM.Ui.Elements.Element.Root
  parent: MLEM.Ui.Elements.Element
  name: Root
  nameWithType: Element.Root
  fullName: MLEM.Ui.Elements.Element.Root
- uid: MLEM.Ui.Elements.Element.Scale
  commentId: P:MLEM.Ui.Elements.Element.Scale
  parent: MLEM.Ui.Elements.Element
  name: Scale
  nameWithType: Element.Scale
  fullName: MLEM.Ui.Elements.Element.Scale
- uid: MLEM.Ui.Elements.Element.Anchor
  commentId: P:MLEM.Ui.Elements.Element.Anchor
  parent: MLEM.Ui.Elements.Element
  name: Anchor
  nameWithType: Element.Anchor
  fullName: MLEM.Ui.Elements.Element.Anchor
- uid: MLEM.Ui.Elements.Element.Size
  commentId: P:MLEM.Ui.Elements.Element.Size
  parent: MLEM.Ui.Elements.Element
  name: Size
  nameWithType: Element.Size
  fullName: MLEM.Ui.Elements.Element.Size
- uid: MLEM.Ui.Elements.Element.ScaledSize
  commentId: P:MLEM.Ui.Elements.Element.ScaledSize
  parent: MLEM.Ui.Elements.Element
  name: ScaledSize
  nameWithType: Element.ScaledSize
  fullName: MLEM.Ui.Elements.Element.ScaledSize
- uid: MLEM.Ui.Elements.Element.PositionOffset
  commentId: P:MLEM.Ui.Elements.Element.PositionOffset
  parent: MLEM.Ui.Elements.Element
  name: PositionOffset
  nameWithType: Element.PositionOffset
  fullName: MLEM.Ui.Elements.Element.PositionOffset
- uid: MLEM.Ui.Elements.Element.ScaledOffset
  commentId: P:MLEM.Ui.Elements.Element.ScaledOffset
  parent: MLEM.Ui.Elements.Element
  name: ScaledOffset
  nameWithType: Element.ScaledOffset
  fullName: MLEM.Ui.Elements.Element.ScaledOffset
- uid: MLEM.Ui.Elements.Element.Padding
  commentId: F:MLEM.Ui.Elements.Element.Padding
  parent: MLEM.Ui.Elements.Element
  name: Padding
  nameWithType: Element.Padding
  fullName: MLEM.Ui.Elements.Element.Padding
- uid: MLEM.Ui.Elements.Element.ScaledPadding
  commentId: P:MLEM.Ui.Elements.Element.ScaledPadding
  parent: MLEM.Ui.Elements.Element
  name: ScaledPadding
  nameWithType: Element.ScaledPadding
  fullName: MLEM.Ui.Elements.Element.ScaledPadding
- uid: MLEM.Ui.Elements.Element.ChildPadding
  commentId: P:MLEM.Ui.Elements.Element.ChildPadding
  parent: MLEM.Ui.Elements.Element
  name: ChildPadding
  nameWithType: Element.ChildPadding
  fullName: MLEM.Ui.Elements.Element.ChildPadding
- uid: MLEM.Ui.Elements.Element.ScaledChildPadding
  commentId: P:MLEM.Ui.Elements.Element.ScaledChildPadding
  parent: MLEM.Ui.Elements.Element
  name: ScaledChildPadding
  nameWithType: Element.ScaledChildPadding
  fullName: MLEM.Ui.Elements.Element.ScaledChildPadding
- uid: MLEM.Ui.Elements.Element.ChildPaddedArea
  commentId: P:MLEM.Ui.Elements.Element.ChildPaddedArea
  parent: MLEM.Ui.Elements.Element
  name: ChildPaddedArea
  nameWithType: Element.ChildPaddedArea
  fullName: MLEM.Ui.Elements.Element.ChildPaddedArea
- uid: MLEM.Ui.Elements.Element.UnscrolledArea
  commentId: P:MLEM.Ui.Elements.Element.UnscrolledArea
  parent: MLEM.Ui.Elements.Element
  name: UnscrolledArea
  nameWithType: Element.UnscrolledArea
  fullName: MLEM.Ui.Elements.Element.UnscrolledArea
- uid: MLEM.Ui.Elements.Element.Area
  commentId: P:MLEM.Ui.Elements.Element.Area
  parent: MLEM.Ui.Elements.Element
  name: Area
  nameWithType: Element.Area
  fullName: MLEM.Ui.Elements.Element.Area
- uid: MLEM.Ui.Elements.Element.DisplayArea
  commentId: P:MLEM.Ui.Elements.Element.DisplayArea
  parent: MLEM.Ui.Elements.Element
  name: DisplayArea
  nameWithType: Element.DisplayArea
  fullName: MLEM.Ui.Elements.Element.DisplayArea
- uid: MLEM.Ui.Elements.Element.ScrollOffset
  commentId: F:MLEM.Ui.Elements.Element.ScrollOffset
  parent: MLEM.Ui.Elements.Element
  name: ScrollOffset
  nameWithType: Element.ScrollOffset
  fullName: MLEM.Ui.Elements.Element.ScrollOffset
- uid: MLEM.Ui.Elements.Element.ScaledScrollOffset
  commentId: P:MLEM.Ui.Elements.Element.ScaledScrollOffset
  parent: MLEM.Ui.Elements.Element
  name: ScaledScrollOffset
  nameWithType: Element.ScaledScrollOffset
  fullName: MLEM.Ui.Elements.Element.ScaledScrollOffset
- uid: MLEM.Ui.Elements.Element.IsHidden
  commentId: P:MLEM.Ui.Elements.Element.IsHidden
  parent: MLEM.Ui.Elements.Element
  name: IsHidden
  nameWithType: Element.IsHidden
  fullName: MLEM.Ui.Elements.Element.IsHidden
- uid: MLEM.Ui.Elements.Element.Priority
  commentId: P:MLEM.Ui.Elements.Element.Priority
  parent: MLEM.Ui.Elements.Element
  name: Priority
  nameWithType: Element.Priority
  fullName: MLEM.Ui.Elements.Element.Priority
- uid: MLEM.Ui.Elements.Element.CanBeSelected
  commentId: F:MLEM.Ui.Elements.Element.CanBeSelected
  parent: MLEM.Ui.Elements.Element
  name: CanBeSelected
  nameWithType: Element.CanBeSelected
  fullName: MLEM.Ui.Elements.Element.CanBeSelected
- uid: MLEM.Ui.Elements.Element.CanBeMoused
  commentId: F:MLEM.Ui.Elements.Element.CanBeMoused
  parent: MLEM.Ui.Elements.Element
  name: CanBeMoused
  nameWithType: Element.CanBeMoused
  fullName: MLEM.Ui.Elements.Element.CanBeMoused
- uid: MLEM.Ui.Elements.Element.CanBePressed
  commentId: F:MLEM.Ui.Elements.Element.CanBePressed
  parent: MLEM.Ui.Elements.Element
  name: CanBePressed
  nameWithType: Element.CanBePressed
  fullName: MLEM.Ui.Elements.Element.CanBePressed
- uid: MLEM.Ui.Elements.Element.CanAutoAnchorsAttach
  commentId: F:MLEM.Ui.Elements.Element.CanAutoAnchorsAttach
  parent: MLEM.Ui.Elements.Element
  name: CanAutoAnchorsAttach
  nameWithType: Element.CanAutoAnchorsAttach
  fullName: MLEM.Ui.Elements.Element.CanAutoAnchorsAttach
- uid: MLEM.Ui.Elements.Element.SetHeightBasedOnChildren
  commentId: F:MLEM.Ui.Elements.Element.SetHeightBasedOnChildren
  parent: MLEM.Ui.Elements.Element
  name: SetHeightBasedOnChildren
  nameWithType: Element.SetHeightBasedOnChildren
  fullName: MLEM.Ui.Elements.Element.SetHeightBasedOnChildren
- uid: MLEM.Ui.Elements.Element.SetWidthBasedOnChildren
  commentId: F:MLEM.Ui.Elements.Element.SetWidthBasedOnChildren
  parent: MLEM.Ui.Elements.Element
  name: SetWidthBasedOnChildren
  nameWithType: Element.SetWidthBasedOnChildren
  fullName: MLEM.Ui.Elements.Element.SetWidthBasedOnChildren
- uid: MLEM.Ui.Elements.Element.DrawAlpha
  commentId: F:MLEM.Ui.Elements.Element.DrawAlpha
  parent: MLEM.Ui.Elements.Element
  name: DrawAlpha
  nameWithType: Element.DrawAlpha
  fullName: MLEM.Ui.Elements.Element.DrawAlpha
- uid: MLEM.Ui.Elements.Element.IsMouseOver
  commentId: P:MLEM.Ui.Elements.Element.IsMouseOver
  parent: MLEM.Ui.Elements.Element
  name: IsMouseOver
  nameWithType: Element.IsMouseOver
  fullName: MLEM.Ui.Elements.Element.IsMouseOver
- uid: MLEM.Ui.Elements.Element.IsSelected
  commentId: P:MLEM.Ui.Elements.Element.IsSelected
  parent: MLEM.Ui.Elements.Element
  name: IsSelected
  nameWithType: Element.IsSelected
  fullName: MLEM.Ui.Elements.Element.IsSelected
- uid: MLEM.Ui.Elements.Element.OnDrawn
  commentId: F:MLEM.Ui.Elements.Element.OnDrawn
  parent: MLEM.Ui.Elements.Element
  name: OnDrawn
  nameWithType: Element.OnDrawn
  fullName: MLEM.Ui.Elements.Element.OnDrawn
- uid: MLEM.Ui.Elements.Element.OnUpdated
  commentId: F:MLEM.Ui.Elements.Element.OnUpdated
  parent: MLEM.Ui.Elements.Element
  name: OnUpdated
  nameWithType: Element.OnUpdated
  fullName: MLEM.Ui.Elements.Element.OnUpdated
- uid: MLEM.Ui.Elements.Element.OnPressed
  commentId: F:MLEM.Ui.Elements.Element.OnPressed
  parent: MLEM.Ui.Elements.Element
  name: OnPressed
  nameWithType: Element.OnPressed
  fullName: MLEM.Ui.Elements.Element.OnPressed
- uid: MLEM.Ui.Elements.Element.OnSecondaryPressed
  commentId: F:MLEM.Ui.Elements.Element.OnSecondaryPressed
  parent: MLEM.Ui.Elements.Element
  name: OnSecondaryPressed
  nameWithType: Element.OnSecondaryPressed
  fullName: MLEM.Ui.Elements.Element.OnSecondaryPressed
- uid: MLEM.Ui.Elements.Element.OnSelected
  commentId: F:MLEM.Ui.Elements.Element.OnSelected
  parent: MLEM.Ui.Elements.Element
  name: OnSelected
  nameWithType: Element.OnSelected
  fullName: MLEM.Ui.Elements.Element.OnSelected
- uid: MLEM.Ui.Elements.Element.OnDeselected
  commentId: F:MLEM.Ui.Elements.Element.OnDeselected
  parent: MLEM.Ui.Elements.Element
  name: OnDeselected
  nameWithType: Element.OnDeselected
  fullName: MLEM.Ui.Elements.Element.OnDeselected
- uid: MLEM.Ui.Elements.Element.OnMouseEnter
  commentId: F:MLEM.Ui.Elements.Element.OnMouseEnter
  parent: MLEM.Ui.Elements.Element
  name: OnMouseEnter
  nameWithType: Element.OnMouseEnter
  fullName: MLEM.Ui.Elements.Element.OnMouseEnter
- uid: MLEM.Ui.Elements.Element.OnMouseExit
  commentId: F:MLEM.Ui.Elements.Element.OnMouseExit
  parent: MLEM.Ui.Elements.Element
  name: OnMouseExit
  nameWithType: Element.OnMouseExit
  fullName: MLEM.Ui.Elements.Element.OnMouseExit
- uid: MLEM.Ui.Elements.Element.OnTextInput
  commentId: F:MLEM.Ui.Elements.Element.OnTextInput
  parent: MLEM.Ui.Elements.Element
  name: OnTextInput
  nameWithType: Element.OnTextInput
  fullName: MLEM.Ui.Elements.Element.OnTextInput
- uid: MLEM.Ui.Elements.Element.OnAreaUpdated
  commentId: F:MLEM.Ui.Elements.Element.OnAreaUpdated
  parent: MLEM.Ui.Elements.Element
  name: OnAreaUpdated
  nameWithType: Element.OnAreaUpdated
  fullName: MLEM.Ui.Elements.Element.OnAreaUpdated
- uid: MLEM.Ui.Elements.Element.OnMousedElementChanged
  commentId: F:MLEM.Ui.Elements.Element.OnMousedElementChanged
  parent: MLEM.Ui.Elements.Element
  name: OnMousedElementChanged
  nameWithType: Element.OnMousedElementChanged
  fullName: MLEM.Ui.Elements.Element.OnMousedElementChanged
- uid: MLEM.Ui.Elements.Element.OnSelectedElementChanged
  commentId: F:MLEM.Ui.Elements.Element.OnSelectedElementChanged
  parent: MLEM.Ui.Elements.Element
  name: OnSelectedElementChanged
  nameWithType: Element.OnSelectedElementChanged
  fullName: MLEM.Ui.Elements.Element.OnSelectedElementChanged
- uid: MLEM.Ui.Elements.Element.GetTabNextElement
  commentId: F:MLEM.Ui.Elements.Element.GetTabNextElement
  parent: MLEM.Ui.Elements.Element
  name: GetTabNextElement
  nameWithType: Element.GetTabNextElement
  fullName: MLEM.Ui.Elements.Element.GetTabNextElement
- uid: MLEM.Ui.Elements.Element.GetGamepadNextElement
  commentId: F:MLEM.Ui.Elements.Element.GetGamepadNextElement
  parent: MLEM.Ui.Elements.Element
  name: GetGamepadNextElement
  nameWithType: Element.GetGamepadNextElement
  fullName: MLEM.Ui.Elements.Element.GetGamepadNextElement
- uid: MLEM.Ui.Elements.Element.OnChildAdded
  commentId: F:MLEM.Ui.Elements.Element.OnChildAdded
  parent: MLEM.Ui.Elements.Element
  name: OnChildAdded
  nameWithType: Element.OnChildAdded
  fullName: MLEM.Ui.Elements.Element.OnChildAdded
- uid: MLEM.Ui.Elements.Element.OnChildRemoved
  commentId: F:MLEM.Ui.Elements.Element.OnChildRemoved
  parent: MLEM.Ui.Elements.Element
  name: OnChildRemoved
  nameWithType: Element.OnChildRemoved
  fullName: MLEM.Ui.Elements.Element.OnChildRemoved
- uid: MLEM.Ui.Elements.Element.SelectionIndicator
  commentId: F:MLEM.Ui.Elements.Element.SelectionIndicator
  parent: MLEM.Ui.Elements.Element
  name: SelectionIndicator
  nameWithType: Element.SelectionIndicator
  fullName: MLEM.Ui.Elements.Element.SelectionIndicator
- uid: MLEM.Ui.Elements.Element.ActionSound
  commentId: F:MLEM.Ui.Elements.Element.ActionSound
  parent: MLEM.Ui.Elements.Element
  name: ActionSound
  nameWithType: Element.ActionSound
  fullName: MLEM.Ui.Elements.Element.ActionSound
- uid: MLEM.Ui.Elements.Element.SecondActionSound
  commentId: F:MLEM.Ui.Elements.Element.SecondActionSound
  parent: MLEM.Ui.Elements.Element
  name: SecondActionSound
  nameWithType: Element.SecondActionSound
  fullName: MLEM.Ui.Elements.Element.SecondActionSound
- uid: MLEM.Ui.Elements.Element.AddChild``1({T},System.Int32)
  commentId: M:MLEM.Ui.Elements.Element.AddChild``1(``0,System.Int32)
  parent: MLEM.Ui.Elements.Element
  definition: MLEM.Ui.Elements.Element.AddChild``1(``0,System.Int32)
  name: AddChild<T>(T, Int32)
  nameWithType: Element.AddChild<T>(T, Int32)
  fullName: MLEM.Ui.Elements.Element.AddChild<T>(T, System.Int32)
  nameWithType.vb: Element.AddChild(Of T)(T, Int32)
  fullName.vb: MLEM.Ui.Elements.Element.AddChild(Of T)(T, System.Int32)
  name.vb: AddChild(Of T)(T, Int32)
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.AddChild``1(``0,System.Int32)
    name: AddChild<T>
    nameWithType: Element.AddChild<T>
    fullName: MLEM.Ui.Elements.Element.AddChild<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.AddChild``1(``0,System.Int32)
    name: AddChild(Of T)
    nameWithType: Element.AddChild(Of T)
    fullName: MLEM.Ui.Elements.Element.AddChild(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Element.RemoveChild(MLEM.Ui.Elements.Element)
  commentId: M:MLEM.Ui.Elements.Element.RemoveChild(MLEM.Ui.Elements.Element)
  parent: MLEM.Ui.Elements.Element
  name: RemoveChild(Element)
  nameWithType: Element.RemoveChild(Element)
  fullName: MLEM.Ui.Elements.Element.RemoveChild(MLEM.Ui.Elements.Element)
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.RemoveChild(MLEM.Ui.Elements.Element)
    name: RemoveChild
    nameWithType: Element.RemoveChild
    fullName: MLEM.Ui.Elements.Element.RemoveChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.RemoveChild(MLEM.Ui.Elements.Element)
    name: RemoveChild
    nameWithType: Element.RemoveChild
    fullName: MLEM.Ui.Elements.Element.RemoveChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Element.RemoveChildren(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  commentId: M:MLEM.Ui.Elements.Element.RemoveChildren(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  parent: MLEM.Ui.Elements.Element
  isExternal: true
  name: RemoveChildren(Func<Element, Boolean>)
  nameWithType: Element.RemoveChildren(Func<Element, Boolean>)
  fullName: MLEM.Ui.Elements.Element.RemoveChildren(System.Func<MLEM.Ui.Elements.Element, System.Boolean>)
  nameWithType.vb: Element.RemoveChildren(Func(Of Element, Boolean))
  fullName.vb: MLEM.Ui.Elements.Element.RemoveChildren(System.Func(Of MLEM.Ui.Elements.Element, System.Boolean))
  name.vb: RemoveChildren(Func(Of Element, Boolean))
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.RemoveChildren(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
    name: RemoveChildren
    nameWithType: Element.RemoveChildren
    fullName: MLEM.Ui.Elements.Element.RemoveChildren
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.RemoveChildren(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
    name: RemoveChildren
    nameWithType: Element.RemoveChildren
    fullName: MLEM.Ui.Elements.Element.RemoveChildren
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Element.SetSortedChildrenDirty
  commentId: M:MLEM.Ui.Elements.Element.SetSortedChildrenDirty
  parent: MLEM.Ui.Elements.Element
  name: SetSortedChildrenDirty()
  nameWithType: Element.SetSortedChildrenDirty()
  fullName: MLEM.Ui.Elements.Element.SetSortedChildrenDirty()
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.SetSortedChildrenDirty
    name: SetSortedChildrenDirty
    nameWithType: Element.SetSortedChildrenDirty
    fullName: MLEM.Ui.Elements.Element.SetSortedChildrenDirty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.SetSortedChildrenDirty
    name: SetSortedChildrenDirty
    nameWithType: Element.SetSortedChildrenDirty
    fullName: MLEM.Ui.Elements.Element.SetSortedChildrenDirty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Element.UpdateSortedChildrenIfDirty
  commentId: M:MLEM.Ui.Elements.Element.UpdateSortedChildrenIfDirty
  parent: MLEM.Ui.Elements.Element
  name: UpdateSortedChildrenIfDirty()
  nameWithType: Element.UpdateSortedChildrenIfDirty()
  fullName: MLEM.Ui.Elements.Element.UpdateSortedChildrenIfDirty()
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.UpdateSortedChildrenIfDirty
    name: UpdateSortedChildrenIfDirty
    nameWithType: Element.UpdateSortedChildrenIfDirty
    fullName: MLEM.Ui.Elements.Element.UpdateSortedChildrenIfDirty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.UpdateSortedChildrenIfDirty
    name: UpdateSortedChildrenIfDirty
    nameWithType: Element.UpdateSortedChildrenIfDirty
    fullName: MLEM.Ui.Elements.Element.UpdateSortedChildrenIfDirty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Element.SetAreaDirty
  commentId: M:MLEM.Ui.Elements.Element.SetAreaDirty
  parent: MLEM.Ui.Elements.Element
  name: SetAreaDirty()
  nameWithType: Element.SetAreaDirty()
  fullName: MLEM.Ui.Elements.Element.SetAreaDirty()
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.SetAreaDirty
    name: SetAreaDirty
    nameWithType: Element.SetAreaDirty
    fullName: MLEM.Ui.Elements.Element.SetAreaDirty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.SetAreaDirty
    name: SetAreaDirty
    nameWithType: Element.SetAreaDirty
    fullName: MLEM.Ui.Elements.Element.SetAreaDirty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Element.UpdateAreaIfDirty
  commentId: M:MLEM.Ui.Elements.Element.UpdateAreaIfDirty
  parent: MLEM.Ui.Elements.Element
  name: UpdateAreaIfDirty()
  nameWithType: Element.UpdateAreaIfDirty()
  fullName: MLEM.Ui.Elements.Element.UpdateAreaIfDirty()
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.UpdateAreaIfDirty
    name: UpdateAreaIfDirty
    nameWithType: Element.UpdateAreaIfDirty
    fullName: MLEM.Ui.Elements.Element.UpdateAreaIfDirty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.UpdateAreaIfDirty
    name: UpdateAreaIfDirty
    nameWithType: Element.UpdateAreaIfDirty
    fullName: MLEM.Ui.Elements.Element.UpdateAreaIfDirty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Element.CalcActualSize(MLEM.Misc.RectangleF)
  commentId: M:MLEM.Ui.Elements.Element.CalcActualSize(MLEM.Misc.RectangleF)
  parent: MLEM.Ui.Elements.Element
  name: CalcActualSize(RectangleF)
  nameWithType: Element.CalcActualSize(RectangleF)
  fullName: MLEM.Ui.Elements.Element.CalcActualSize(MLEM.Misc.RectangleF)
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.CalcActualSize(MLEM.Misc.RectangleF)
    name: CalcActualSize
    nameWithType: Element.CalcActualSize
    fullName: MLEM.Ui.Elements.Element.CalcActualSize
  - name: (
    nameWithType: (
    fullName: (
  - uid: MLEM.Misc.RectangleF
    name: RectangleF
    nameWithType: RectangleF
    fullName: MLEM.Misc.RectangleF
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.CalcActualSize(MLEM.Misc.RectangleF)
    name: CalcActualSize
    nameWithType: Element.CalcActualSize
    fullName: MLEM.Ui.Elements.Element.CalcActualSize
  - name: (
    nameWithType: (
    fullName: (
  - uid: MLEM.Misc.RectangleF
    name: RectangleF
    nameWithType: RectangleF
    fullName: MLEM.Misc.RectangleF
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Element.GetAreaForAutoAnchors
  commentId: M:MLEM.Ui.Elements.Element.GetAreaForAutoAnchors
  parent: MLEM.Ui.Elements.Element
  name: GetAreaForAutoAnchors()
  nameWithType: Element.GetAreaForAutoAnchors()
  fullName: MLEM.Ui.Elements.Element.GetAreaForAutoAnchors()
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.GetAreaForAutoAnchors
    name: GetAreaForAutoAnchors
    nameWithType: Element.GetAreaForAutoAnchors
    fullName: MLEM.Ui.Elements.Element.GetAreaForAutoAnchors
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.GetAreaForAutoAnchors
    name: GetAreaForAutoAnchors
    nameWithType: Element.GetAreaForAutoAnchors
    fullName: MLEM.Ui.Elements.Element.GetAreaForAutoAnchors
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Element.GetLowestChild(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  commentId: M:MLEM.Ui.Elements.Element.GetLowestChild(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  parent: MLEM.Ui.Elements.Element
  isExternal: true
  name: GetLowestChild(Func<Element, Boolean>)
  nameWithType: Element.GetLowestChild(Func<Element, Boolean>)
  fullName: MLEM.Ui.Elements.Element.GetLowestChild(System.Func<MLEM.Ui.Elements.Element, System.Boolean>)
  nameWithType.vb: Element.GetLowestChild(Func(Of Element, Boolean))
  fullName.vb: MLEM.Ui.Elements.Element.GetLowestChild(System.Func(Of MLEM.Ui.Elements.Element, System.Boolean))
  name.vb: GetLowestChild(Func(Of Element, Boolean))
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.GetLowestChild(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
    name: GetLowestChild
    nameWithType: Element.GetLowestChild
    fullName: MLEM.Ui.Elements.Element.GetLowestChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.GetLowestChild(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
    name: GetLowestChild
    nameWithType: Element.GetLowestChild
    fullName: MLEM.Ui.Elements.Element.GetLowestChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Element.GetRightmostChild(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  commentId: M:MLEM.Ui.Elements.Element.GetRightmostChild(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  parent: MLEM.Ui.Elements.Element
  isExternal: true
  name: GetRightmostChild(Func<Element, Boolean>)
  nameWithType: Element.GetRightmostChild(Func<Element, Boolean>)
  fullName: MLEM.Ui.Elements.Element.GetRightmostChild(System.Func<MLEM.Ui.Elements.Element, System.Boolean>)
  nameWithType.vb: Element.GetRightmostChild(Func(Of Element, Boolean))
  fullName.vb: MLEM.Ui.Elements.Element.GetRightmostChild(System.Func(Of MLEM.Ui.Elements.Element, System.Boolean))
  name.vb: GetRightmostChild(Func(Of Element, Boolean))
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.GetRightmostChild(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
    name: GetRightmostChild
    nameWithType: Element.GetRightmostChild
    fullName: MLEM.Ui.Elements.Element.GetRightmostChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.GetRightmostChild(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
    name: GetRightmostChild
    nameWithType: Element.GetRightmostChild
    fullName: MLEM.Ui.Elements.Element.GetRightmostChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Element.GetLowestOlderSibling(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  commentId: M:MLEM.Ui.Elements.Element.GetLowestOlderSibling(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  parent: MLEM.Ui.Elements.Element
  isExternal: true
  name: GetLowestOlderSibling(Func<Element, Boolean>)
  nameWithType: Element.GetLowestOlderSibling(Func<Element, Boolean>)
  fullName: MLEM.Ui.Elements.Element.GetLowestOlderSibling(System.Func<MLEM.Ui.Elements.Element, System.Boolean>)
  nameWithType.vb: Element.GetLowestOlderSibling(Func(Of Element, Boolean))
  fullName.vb: MLEM.Ui.Elements.Element.GetLowestOlderSibling(System.Func(Of MLEM.Ui.Elements.Element, System.Boolean))
  name.vb: GetLowestOlderSibling(Func(Of Element, Boolean))
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.GetLowestOlderSibling(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
    name: GetLowestOlderSibling
    nameWithType: Element.GetLowestOlderSibling
    fullName: MLEM.Ui.Elements.Element.GetLowestOlderSibling
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.GetLowestOlderSibling(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
    name: GetLowestOlderSibling
    nameWithType: Element.GetLowestOlderSibling
    fullName: MLEM.Ui.Elements.Element.GetLowestOlderSibling
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Element.GetOlderSibling(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  commentId: M:MLEM.Ui.Elements.Element.GetOlderSibling(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  parent: MLEM.Ui.Elements.Element
  isExternal: true
  name: GetOlderSibling(Func<Element, Boolean>)
  nameWithType: Element.GetOlderSibling(Func<Element, Boolean>)
  fullName: MLEM.Ui.Elements.Element.GetOlderSibling(System.Func<MLEM.Ui.Elements.Element, System.Boolean>)
  nameWithType.vb: Element.GetOlderSibling(Func(Of Element, Boolean))
  fullName.vb: MLEM.Ui.Elements.Element.GetOlderSibling(System.Func(Of MLEM.Ui.Elements.Element, System.Boolean))
  name.vb: GetOlderSibling(Func(Of Element, Boolean))
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.GetOlderSibling(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
    name: GetOlderSibling
    nameWithType: Element.GetOlderSibling
    fullName: MLEM.Ui.Elements.Element.GetOlderSibling
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.GetOlderSibling(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
    name: GetOlderSibling
    nameWithType: Element.GetOlderSibling
    fullName: MLEM.Ui.Elements.Element.GetOlderSibling
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Element.GetSiblings(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  commentId: M:MLEM.Ui.Elements.Element.GetSiblings(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  parent: MLEM.Ui.Elements.Element
  isExternal: true
  name: GetSiblings(Func<Element, Boolean>)
  nameWithType: Element.GetSiblings(Func<Element, Boolean>)
  fullName: MLEM.Ui.Elements.Element.GetSiblings(System.Func<MLEM.Ui.Elements.Element, System.Boolean>)
  nameWithType.vb: Element.GetSiblings(Func(Of Element, Boolean))
  fullName.vb: MLEM.Ui.Elements.Element.GetSiblings(System.Func(Of MLEM.Ui.Elements.Element, System.Boolean))
  name.vb: GetSiblings(Func(Of Element, Boolean))
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.GetSiblings(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
    name: GetSiblings
    nameWithType: Element.GetSiblings
    fullName: MLEM.Ui.Elements.Element.GetSiblings
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.GetSiblings(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
    name: GetSiblings
    nameWithType: Element.GetSiblings
    fullName: MLEM.Ui.Elements.Element.GetSiblings
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Element.GetChildren``1(System.Func{{T},System.Boolean},System.Boolean,System.Boolean)
  commentId: M:MLEM.Ui.Elements.Element.GetChildren``1(System.Func{``0,System.Boolean},System.Boolean,System.Boolean)
  parent: MLEM.Ui.Elements.Element
  definition: MLEM.Ui.Elements.Element.GetChildren``1(System.Func{``0,System.Boolean},System.Boolean,System.Boolean)
  name: GetChildren<T>(Func<T, Boolean>, Boolean, Boolean)
  nameWithType: Element.GetChildren<T>(Func<T, Boolean>, Boolean, Boolean)
  fullName: MLEM.Ui.Elements.Element.GetChildren<T>(System.Func<T, System.Boolean>, System.Boolean, System.Boolean)
  nameWithType.vb: Element.GetChildren(Of T)(Func(Of T, Boolean), Boolean, Boolean)
  fullName.vb: MLEM.Ui.Elements.Element.GetChildren(Of T)(System.Func(Of T, System.Boolean), System.Boolean, System.Boolean)
  name.vb: GetChildren(Of T)(Func(Of T, Boolean), Boolean, Boolean)
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.GetChildren``1(System.Func{``0,System.Boolean},System.Boolean,System.Boolean)
    name: GetChildren<T>
    nameWithType: Element.GetChildren<T>
    fullName: MLEM.Ui.Elements.Element.GetChildren<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.GetChildren``1(System.Func{``0,System.Boolean},System.Boolean,System.Boolean)
    name: GetChildren(Of T)
    nameWithType: Element.GetChildren(Of T)
    fullName: MLEM.Ui.Elements.Element.GetChildren(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Element.GetChildren(System.Func{MLEM.Ui.Elements.Element,System.Boolean},System.Boolean,System.Boolean)
  commentId: M:MLEM.Ui.Elements.Element.GetChildren(System.Func{MLEM.Ui.Elements.Element,System.Boolean},System.Boolean,System.Boolean)
  parent: MLEM.Ui.Elements.Element
  isExternal: true
  name: GetChildren(Func<Element, Boolean>, Boolean, Boolean)
  nameWithType: Element.GetChildren(Func<Element, Boolean>, Boolean, Boolean)
  fullName: MLEM.Ui.Elements.Element.GetChildren(System.Func<MLEM.Ui.Elements.Element, System.Boolean>, System.Boolean, System.Boolean)
  nameWithType.vb: Element.GetChildren(Func(Of Element, Boolean), Boolean, Boolean)
  fullName.vb: MLEM.Ui.Elements.Element.GetChildren(System.Func(Of MLEM.Ui.Elements.Element, System.Boolean), System.Boolean, System.Boolean)
  name.vb: GetChildren(Func(Of Element, Boolean), Boolean, Boolean)
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.GetChildren(System.Func{MLEM.Ui.Elements.Element,System.Boolean},System.Boolean,System.Boolean)
    name: GetChildren
    nameWithType: Element.GetChildren
    fullName: MLEM.Ui.Elements.Element.GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.GetChildren(System.Func{MLEM.Ui.Elements.Element,System.Boolean},System.Boolean,System.Boolean)
    name: GetChildren
    nameWithType: Element.GetChildren
    fullName: MLEM.Ui.Elements.Element.GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Element.GetParentTree
  commentId: M:MLEM.Ui.Elements.Element.GetParentTree
  parent: MLEM.Ui.Elements.Element
  name: GetParentTree()
  nameWithType: Element.GetParentTree()
  fullName: MLEM.Ui.Elements.Element.GetParentTree()
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.GetParentTree
    name: GetParentTree
    nameWithType: Element.GetParentTree
    fullName: MLEM.Ui.Elements.Element.GetParentTree
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.GetParentTree
    name: GetParentTree
    nameWithType: Element.GetParentTree
    fullName: MLEM.Ui.Elements.Element.GetParentTree
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Element.Update(Microsoft.Xna.Framework.GameTime)
  commentId: M:MLEM.Ui.Elements.Element.Update(Microsoft.Xna.Framework.GameTime)
  parent: MLEM.Ui.Elements.Element
  isExternal: true
  name: Update(GameTime)
  nameWithType: Element.Update(GameTime)
  fullName: MLEM.Ui.Elements.Element.Update(Microsoft.Xna.Framework.GameTime)
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.Update(Microsoft.Xna.Framework.GameTime)
    name: Update
    nameWithType: Element.Update
    fullName: MLEM.Ui.Elements.Element.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: Microsoft.Xna.Framework.GameTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.Update(Microsoft.Xna.Framework.GameTime)
    name: Update
    nameWithType: Element.Update
    fullName: MLEM.Ui.Elements.Element.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: Microsoft.Xna.Framework.GameTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Element.AndChildren(System.Action{MLEM.Ui.Elements.Element})
  commentId: M:MLEM.Ui.Elements.Element.AndChildren(System.Action{MLEM.Ui.Elements.Element})
  parent: MLEM.Ui.Elements.Element
  isExternal: true
  name: AndChildren(Action<Element>)
  nameWithType: Element.AndChildren(Action<Element>)
  fullName: MLEM.Ui.Elements.Element.AndChildren(System.Action<MLEM.Ui.Elements.Element>)
  nameWithType.vb: Element.AndChildren(Action(Of Element))
  fullName.vb: MLEM.Ui.Elements.Element.AndChildren(System.Action(Of MLEM.Ui.Elements.Element))
  name.vb: AndChildren(Action(Of Element))
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.AndChildren(System.Action{MLEM.Ui.Elements.Element})
    name: AndChildren
    nameWithType: Element.AndChildren
    fullName: MLEM.Ui.Elements.Element.AndChildren
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.AndChildren(System.Action{MLEM.Ui.Elements.Element})
    name: AndChildren
    nameWithType: Element.AndChildren
    fullName: MLEM.Ui.Elements.Element.AndChildren
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Element.ReorderChildren(System.Comparison{MLEM.Ui.Elements.Element})
  commentId: M:MLEM.Ui.Elements.Element.ReorderChildren(System.Comparison{MLEM.Ui.Elements.Element})
  parent: MLEM.Ui.Elements.Element
  isExternal: true
  name: ReorderChildren(Comparison<Element>)
  nameWithType: Element.ReorderChildren(Comparison<Element>)
  fullName: MLEM.Ui.Elements.Element.ReorderChildren(System.Comparison<MLEM.Ui.Elements.Element>)
  nameWithType.vb: Element.ReorderChildren(Comparison(Of Element))
  fullName.vb: MLEM.Ui.Elements.Element.ReorderChildren(System.Comparison(Of MLEM.Ui.Elements.Element))
  name.vb: ReorderChildren(Comparison(Of Element))
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.ReorderChildren(System.Comparison{MLEM.Ui.Elements.Element})
    name: ReorderChildren
    nameWithType: Element.ReorderChildren
    fullName: MLEM.Ui.Elements.Element.ReorderChildren
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Comparison`1
    name: Comparison
    nameWithType: Comparison
    fullName: System.Comparison
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.ReorderChildren(System.Comparison{MLEM.Ui.Elements.Element})
    name: ReorderChildren
    nameWithType: Element.ReorderChildren
    fullName: MLEM.Ui.Elements.Element.ReorderChildren
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Comparison`1
    name: Comparison
    nameWithType: Comparison
    fullName: System.Comparison
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Element.ReverseChildren(System.Int32,System.Nullable{System.Int32})
  commentId: M:MLEM.Ui.Elements.Element.ReverseChildren(System.Int32,System.Nullable{System.Int32})
  parent: MLEM.Ui.Elements.Element
  isExternal: true
  name: ReverseChildren(Int32, Nullable<Int32>)
  nameWithType: Element.ReverseChildren(Int32, Nullable<Int32>)
  fullName: MLEM.Ui.Elements.Element.ReverseChildren(System.Int32, System.Nullable<System.Int32>)
  nameWithType.vb: Element.ReverseChildren(Int32, Nullable(Of Int32))
  fullName.vb: MLEM.Ui.Elements.Element.ReverseChildren(System.Int32, System.Nullable(Of System.Int32))
  name.vb: ReverseChildren(Int32, Nullable(Of Int32))
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.ReverseChildren(System.Int32,System.Nullable{System.Int32})
    name: ReverseChildren
    nameWithType: Element.ReverseChildren
    fullName: MLEM.Ui.Elements.Element.ReverseChildren
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.ReverseChildren(System.Int32,System.Nullable{System.Int32})
    name: ReverseChildren
    nameWithType: Element.ReverseChildren
    fullName: MLEM.Ui.Elements.Element.ReverseChildren
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
  commentId: M:MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
  parent: MLEM.Misc.GenericDataHolder
  isExternal: true
  name: SetData(String, Object)
  nameWithType: GenericDataHolder.SetData(String, Object)
  fullName: MLEM.Misc.GenericDataHolder.SetData(System.String, System.Object)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
    name: SetData
    nameWithType: GenericDataHolder.SetData
    fullName: MLEM.Misc.GenericDataHolder.SetData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
    name: SetData
    nameWithType: GenericDataHolder.SetData
    fullName: MLEM.Misc.GenericDataHolder.SetData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  commentId: M:MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  parent: MLEM.Misc.GenericDataHolder
  isExternal: true
  name: GetData<T>(String)
  nameWithType: GenericDataHolder.GetData<T>(String)
  fullName: MLEM.Misc.GenericDataHolder.GetData<T>(System.String)
  nameWithType.vb: GenericDataHolder.GetData(Of T)(String)
  fullName.vb: MLEM.Misc.GenericDataHolder.GetData(Of T)(System.String)
  name.vb: GetData(Of T)(String)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
    name: GetData<T>
    nameWithType: GenericDataHolder.GetData<T>
    fullName: MLEM.Misc.GenericDataHolder.GetData<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
    name: GetData(Of T)
    nameWithType: GenericDataHolder.GetData(Of T)
    fullName: MLEM.Misc.GenericDataHolder.GetData(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Misc.GenericDataHolder.GetDataKeys
  commentId: M:MLEM.Misc.GenericDataHolder.GetDataKeys
  parent: MLEM.Misc.GenericDataHolder
  name: GetDataKeys()
  nameWithType: GenericDataHolder.GetDataKeys()
  fullName: MLEM.Misc.GenericDataHolder.GetDataKeys()
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.GetDataKeys
    name: GetDataKeys
    nameWithType: GenericDataHolder.GetDataKeys
    fullName: MLEM.Misc.GenericDataHolder.GetDataKeys
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.GetDataKeys
    name: GetDataKeys
    nameWithType: GenericDataHolder.GetDataKeys
    fullName: MLEM.Misc.GenericDataHolder.GetDataKeys
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
- uid: MLEM.Ui.Elements.Element.AddChild``1(``0,System.Int32)
  commentId: M:MLEM.Ui.Elements.Element.AddChild``1(``0,System.Int32)
  isExternal: true
  name: AddChild<T>(T, Int32)
  nameWithType: Element.AddChild<T>(T, Int32)
  fullName: MLEM.Ui.Elements.Element.AddChild<T>(T, System.Int32)
  nameWithType.vb: Element.AddChild(Of T)(T, Int32)
  fullName.vb: MLEM.Ui.Elements.Element.AddChild(Of T)(T, System.Int32)
  name.vb: AddChild(Of T)(T, Int32)
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.AddChild``1(``0,System.Int32)
    name: AddChild<T>
    nameWithType: Element.AddChild<T>
    fullName: MLEM.Ui.Elements.Element.AddChild<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.AddChild``1(``0,System.Int32)
    name: AddChild(Of T)
    nameWithType: Element.AddChild(Of T)
    fullName: MLEM.Ui.Elements.Element.AddChild(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Element.GetChildren``1(System.Func{``0,System.Boolean},System.Boolean,System.Boolean)
  commentId: M:MLEM.Ui.Elements.Element.GetChildren``1(System.Func{``0,System.Boolean},System.Boolean,System.Boolean)
  isExternal: true
  name: GetChildren<T>(Func<T, Boolean>, Boolean, Boolean)
  nameWithType: Element.GetChildren<T>(Func<T, Boolean>, Boolean, Boolean)
  fullName: MLEM.Ui.Elements.Element.GetChildren<T>(System.Func<T, System.Boolean>, System.Boolean, System.Boolean)
  nameWithType.vb: Element.GetChildren(Of T)(Func(Of T, Boolean), Boolean, Boolean)
  fullName.vb: MLEM.Ui.Elements.Element.GetChildren(Of T)(System.Func(Of T, System.Boolean), System.Boolean, System.Boolean)
  name.vb: GetChildren(Of T)(Func(Of T, Boolean), Boolean, Boolean)
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.GetChildren``1(System.Func{``0,System.Boolean},System.Boolean,System.Boolean)
    name: GetChildren<T>
    nameWithType: Element.GetChildren<T>
    fullName: MLEM.Ui.Elements.Element.GetChildren<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.GetChildren``1(System.Func{``0,System.Boolean},System.Boolean,System.Boolean)
    name: GetChildren(Of T)
    nameWithType: Element.GetChildren(Of T)
    fullName: MLEM.Ui.Elements.Element.GetChildren(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Style.StyleProp{MLEM.Textures.NinePatch}
  commentId: T:MLEM.Ui.Style.StyleProp{MLEM.Textures.NinePatch}
  parent: MLEM.Ui.Style
  definition: MLEM.Ui.Style.StyleProp`1
  name: StyleProp<NinePatch>
  nameWithType: StyleProp<NinePatch>
  fullName: MLEM.Ui.Style.StyleProp<MLEM.Textures.NinePatch>
  nameWithType.vb: StyleProp(Of NinePatch)
  fullName.vb: MLEM.Ui.Style.StyleProp(Of MLEM.Textures.NinePatch)
  name.vb: StyleProp(Of NinePatch)
  spec.csharp:
  - uid: MLEM.Ui.Style.StyleProp`1
    name: StyleProp
    nameWithType: StyleProp
    fullName: MLEM.Ui.Style.StyleProp
  - name: <
    nameWithType: <
    fullName: <
  - uid: MLEM.Textures.NinePatch
    name: NinePatch
    nameWithType: NinePatch
    fullName: MLEM.Textures.NinePatch
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MLEM.Ui.Style.StyleProp`1
    name: StyleProp
    nameWithType: StyleProp
    fullName: MLEM.Ui.Style.StyleProp
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MLEM.Textures.NinePatch
    name: NinePatch
    nameWithType: NinePatch
    fullName: MLEM.Textures.NinePatch
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Style.StyleProp`1
  commentId: T:MLEM.Ui.Style.StyleProp`1
  parent: MLEM.Ui.Style
  name: StyleProp<T>
  nameWithType: StyleProp<T>
  fullName: MLEM.Ui.Style.StyleProp<T>
  nameWithType.vb: StyleProp(Of T)
  fullName.vb: MLEM.Ui.Style.StyleProp(Of T)
  name.vb: StyleProp(Of T)
  spec.csharp:
  - uid: MLEM.Ui.Style.StyleProp`1
    name: StyleProp
    nameWithType: StyleProp
    fullName: MLEM.Ui.Style.StyleProp
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MLEM.Ui.Style.StyleProp`1
    name: StyleProp
    nameWithType: StyleProp
    fullName: MLEM.Ui.Style.StyleProp
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Style
  commentId: N:MLEM.Ui.Style
  name: MLEM.Ui.Style
  nameWithType: MLEM.Ui.Style
  fullName: MLEM.Ui.Style
- uid: MLEM.Ui.Elements.ScrollBar
  commentId: T:MLEM.Ui.Elements.ScrollBar
  parent: MLEM.Ui.Elements
  name: ScrollBar
  nameWithType: ScrollBar
  fullName: MLEM.Ui.Elements.ScrollBar
- uid: MLEM.Ui.Elements.Panel.#ctor*
  commentId: Overload:MLEM.Ui.Elements.Panel.#ctor
  name: Panel
  nameWithType: Panel.Panel
  fullName: MLEM.Ui.Elements.Panel.Panel
- uid: MLEM.Ui.Anchor
  commentId: T:MLEM.Ui.Anchor
  parent: MLEM.Ui
  name: Anchor
  nameWithType: Anchor
  fullName: MLEM.Ui.Anchor
- uid: Microsoft.Xna.Framework.Vector2
  commentId: T:Microsoft.Xna.Framework.Vector2
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Microsoft.Xna.Framework.Vector2
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Nullable{Microsoft.Xna.Framework.Point}
  commentId: T:System.Nullable{Microsoft.Xna.Framework.Point}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Point>
  nameWithType: Nullable<Point>
  fullName: System.Nullable<Microsoft.Xna.Framework.Point>
  nameWithType.vb: Nullable(Of Point)
  fullName.vb: System.Nullable(Of Microsoft.Xna.Framework.Point)
  name.vb: Nullable(Of Point)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    nameWithType: Point
    fullName: Microsoft.Xna.Framework.Point
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    nameWithType: Point
    fullName: Microsoft.Xna.Framework.Point
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui
  commentId: N:MLEM.Ui
  name: MLEM.Ui
  nameWithType: MLEM.Ui
  fullName: MLEM.Ui
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Element.ForceUpdateArea
  commentId: M:MLEM.Ui.Elements.Element.ForceUpdateArea
  parent: MLEM.Ui.Elements.Element
  name: ForceUpdateArea()
  nameWithType: Element.ForceUpdateArea()
  fullName: MLEM.Ui.Elements.Element.ForceUpdateArea()
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.ForceUpdateArea
    name: ForceUpdateArea
    nameWithType: Element.ForceUpdateArea
    fullName: MLEM.Ui.Elements.Element.ForceUpdateArea
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.ForceUpdateArea
    name: ForceUpdateArea
    nameWithType: Element.ForceUpdateArea
    fullName: MLEM.Ui.Elements.Element.ForceUpdateArea
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Panel.ForceUpdateArea*
  commentId: Overload:MLEM.Ui.Elements.Panel.ForceUpdateArea
  name: ForceUpdateArea
  nameWithType: Panel.ForceUpdateArea
  fullName: MLEM.Ui.Elements.Panel.ForceUpdateArea
- uid: MLEM.Ui.Elements.Element.ForceUpdateSortedChildren
  commentId: M:MLEM.Ui.Elements.Element.ForceUpdateSortedChildren
  parent: MLEM.Ui.Elements.Element
  name: ForceUpdateSortedChildren()
  nameWithType: Element.ForceUpdateSortedChildren()
  fullName: MLEM.Ui.Elements.Element.ForceUpdateSortedChildren()
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.ForceUpdateSortedChildren
    name: ForceUpdateSortedChildren
    nameWithType: Element.ForceUpdateSortedChildren
    fullName: MLEM.Ui.Elements.Element.ForceUpdateSortedChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.ForceUpdateSortedChildren
    name: ForceUpdateSortedChildren
    nameWithType: Element.ForceUpdateSortedChildren
    fullName: MLEM.Ui.Elements.Element.ForceUpdateSortedChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Panel.ForceUpdateSortedChildren*
  commentId: Overload:MLEM.Ui.Elements.Panel.ForceUpdateSortedChildren
  name: ForceUpdateSortedChildren
  nameWithType: Panel.ForceUpdateSortedChildren
  fullName: MLEM.Ui.Elements.Panel.ForceUpdateSortedChildren
- uid: MLEM.Ui.Elements.Element.GetRelevantChildren
  commentId: M:MLEM.Ui.Elements.Element.GetRelevantChildren
  parent: MLEM.Ui.Elements.Element
  name: GetRelevantChildren()
  nameWithType: Element.GetRelevantChildren()
  fullName: MLEM.Ui.Elements.Element.GetRelevantChildren()
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.GetRelevantChildren
    name: GetRelevantChildren
    nameWithType: Element.GetRelevantChildren
    fullName: MLEM.Ui.Elements.Element.GetRelevantChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.GetRelevantChildren
    name: GetRelevantChildren
    nameWithType: Element.GetRelevantChildren
    fullName: MLEM.Ui.Elements.Element.GetRelevantChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Panel.GetRelevantChildren*
  commentId: Overload:MLEM.Ui.Elements.Panel.GetRelevantChildren
  name: GetRelevantChildren
  nameWithType: Panel.GetRelevantChildren
  fullName: MLEM.Ui.Elements.Panel.GetRelevantChildren
- uid: System.Collections.Generic.List{MLEM.Ui.Elements.Element}
  commentId: T:System.Collections.Generic.List{MLEM.Ui.Elements.Element}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Element>
  nameWithType: List<Element>
  fullName: System.Collections.Generic.List<MLEM.Ui.Elements.Element>
  nameWithType.vb: List(Of Element)
  fullName.vb: System.Collections.Generic.List(Of MLEM.Ui.Elements.Element)
  name.vb: List(Of Element)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: MLEM.Ui.Elements.Element.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single,Microsoft.Xna.Framework.Graphics.BlendState,Microsoft.Xna.Framework.Graphics.SamplerState,Microsoft.Xna.Framework.Matrix)
  commentId: M:MLEM.Ui.Elements.Element.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single,Microsoft.Xna.Framework.Graphics.BlendState,Microsoft.Xna.Framework.Graphics.SamplerState,Microsoft.Xna.Framework.Matrix)
  parent: MLEM.Ui.Elements.Element
  isExternal: true
  name: Draw(GameTime, SpriteBatch, Single, BlendState, SamplerState, Matrix)
  nameWithType: Element.Draw(GameTime, SpriteBatch, Single, BlendState, SamplerState, Matrix)
  fullName: MLEM.Ui.Elements.Element.Draw(Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch, System.Single, Microsoft.Xna.Framework.Graphics.BlendState, Microsoft.Xna.Framework.Graphics.SamplerState, Microsoft.Xna.Framework.Matrix)
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single,Microsoft.Xna.Framework.Graphics.BlendState,Microsoft.Xna.Framework.Graphics.SamplerState,Microsoft.Xna.Framework.Matrix)
    name: Draw
    nameWithType: Element.Draw
    fullName: MLEM.Ui.Elements.Element.Draw
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: Microsoft.Xna.Framework.GameTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
    name: SpriteBatch
    nameWithType: SpriteBatch
    fullName: Microsoft.Xna.Framework.Graphics.SpriteBatch
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Graphics.BlendState
    name: BlendState
    nameWithType: BlendState
    fullName: Microsoft.Xna.Framework.Graphics.BlendState
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Graphics.SamplerState
    name: SamplerState
    nameWithType: SamplerState
    fullName: Microsoft.Xna.Framework.Graphics.SamplerState
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Matrix
    name: Matrix
    nameWithType: Matrix
    fullName: Microsoft.Xna.Framework.Matrix
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single,Microsoft.Xna.Framework.Graphics.BlendState,Microsoft.Xna.Framework.Graphics.SamplerState,Microsoft.Xna.Framework.Matrix)
    name: Draw
    nameWithType: Element.Draw
    fullName: MLEM.Ui.Elements.Element.Draw
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: Microsoft.Xna.Framework.GameTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
    name: SpriteBatch
    nameWithType: SpriteBatch
    fullName: Microsoft.Xna.Framework.Graphics.SpriteBatch
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Graphics.BlendState
    name: BlendState
    nameWithType: BlendState
    fullName: Microsoft.Xna.Framework.Graphics.BlendState
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Graphics.SamplerState
    name: SamplerState
    nameWithType: SamplerState
    fullName: Microsoft.Xna.Framework.Graphics.SamplerState
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Matrix
    name: Matrix
    nameWithType: Matrix
    fullName: Microsoft.Xna.Framework.Matrix
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Panel.Draw*
  commentId: Overload:MLEM.Ui.Elements.Panel.Draw
  name: Draw
  nameWithType: Panel.Draw
  fullName: MLEM.Ui.Elements.Panel.Draw
- uid: Microsoft.Xna.Framework.GameTime
  commentId: T:Microsoft.Xna.Framework.GameTime
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: GameTime
  nameWithType: GameTime
  fullName: Microsoft.Xna.Framework.GameTime
- uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
  commentId: T:Microsoft.Xna.Framework.Graphics.SpriteBatch
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: SpriteBatch
  nameWithType: SpriteBatch
  fullName: Microsoft.Xna.Framework.Graphics.SpriteBatch
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Microsoft.Xna.Framework.Graphics.BlendState
  commentId: T:Microsoft.Xna.Framework.Graphics.BlendState
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: BlendState
  nameWithType: BlendState
  fullName: Microsoft.Xna.Framework.Graphics.BlendState
- uid: Microsoft.Xna.Framework.Graphics.SamplerState
  commentId: T:Microsoft.Xna.Framework.Graphics.SamplerState
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: SamplerState
  nameWithType: SamplerState
  fullName: Microsoft.Xna.Framework.Graphics.SamplerState
- uid: Microsoft.Xna.Framework.Matrix
  commentId: T:Microsoft.Xna.Framework.Matrix
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Matrix
  nameWithType: Matrix
  fullName: Microsoft.Xna.Framework.Matrix
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
- uid: MLEM.Ui.Elements.Element.DrawEarly(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single,Microsoft.Xna.Framework.Graphics.BlendState,Microsoft.Xna.Framework.Graphics.SamplerState,Microsoft.Xna.Framework.Matrix)
  commentId: M:MLEM.Ui.Elements.Element.DrawEarly(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single,Microsoft.Xna.Framework.Graphics.BlendState,Microsoft.Xna.Framework.Graphics.SamplerState,Microsoft.Xna.Framework.Matrix)
  parent: MLEM.Ui.Elements.Element
  isExternal: true
  name: DrawEarly(GameTime, SpriteBatch, Single, BlendState, SamplerState, Matrix)
  nameWithType: Element.DrawEarly(GameTime, SpriteBatch, Single, BlendState, SamplerState, Matrix)
  fullName: MLEM.Ui.Elements.Element.DrawEarly(Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch, System.Single, Microsoft.Xna.Framework.Graphics.BlendState, Microsoft.Xna.Framework.Graphics.SamplerState, Microsoft.Xna.Framework.Matrix)
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.DrawEarly(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single,Microsoft.Xna.Framework.Graphics.BlendState,Microsoft.Xna.Framework.Graphics.SamplerState,Microsoft.Xna.Framework.Matrix)
    name: DrawEarly
    nameWithType: Element.DrawEarly
    fullName: MLEM.Ui.Elements.Element.DrawEarly
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: Microsoft.Xna.Framework.GameTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
    name: SpriteBatch
    nameWithType: SpriteBatch
    fullName: Microsoft.Xna.Framework.Graphics.SpriteBatch
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Graphics.BlendState
    name: BlendState
    nameWithType: BlendState
    fullName: Microsoft.Xna.Framework.Graphics.BlendState
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Graphics.SamplerState
    name: SamplerState
    nameWithType: SamplerState
    fullName: Microsoft.Xna.Framework.Graphics.SamplerState
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Matrix
    name: Matrix
    nameWithType: Matrix
    fullName: Microsoft.Xna.Framework.Matrix
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.DrawEarly(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single,Microsoft.Xna.Framework.Graphics.BlendState,Microsoft.Xna.Framework.Graphics.SamplerState,Microsoft.Xna.Framework.Matrix)
    name: DrawEarly
    nameWithType: Element.DrawEarly
    fullName: MLEM.Ui.Elements.Element.DrawEarly
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: Microsoft.Xna.Framework.GameTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
    name: SpriteBatch
    nameWithType: SpriteBatch
    fullName: Microsoft.Xna.Framework.Graphics.SpriteBatch
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Graphics.BlendState
    name: BlendState
    nameWithType: BlendState
    fullName: Microsoft.Xna.Framework.Graphics.BlendState
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Graphics.SamplerState
    name: SamplerState
    nameWithType: SamplerState
    fullName: Microsoft.Xna.Framework.Graphics.SamplerState
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Matrix
    name: Matrix
    nameWithType: Matrix
    fullName: Microsoft.Xna.Framework.Matrix
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Panel.DrawEarly*
  commentId: Overload:MLEM.Ui.Elements.Panel.DrawEarly
  name: DrawEarly
  nameWithType: Panel.DrawEarly
  fullName: MLEM.Ui.Elements.Panel.DrawEarly
- uid: MLEM.Ui.Elements.Element.GetElementUnderPos(Microsoft.Xna.Framework.Vector2)
  commentId: M:MLEM.Ui.Elements.Element.GetElementUnderPos(Microsoft.Xna.Framework.Vector2)
  parent: MLEM.Ui.Elements.Element
  isExternal: true
  name: GetElementUnderPos(Vector2)
  nameWithType: Element.GetElementUnderPos(Vector2)
  fullName: MLEM.Ui.Elements.Element.GetElementUnderPos(Microsoft.Xna.Framework.Vector2)
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.GetElementUnderPos(Microsoft.Xna.Framework.Vector2)
    name: GetElementUnderPos
    nameWithType: Element.GetElementUnderPos
    fullName: MLEM.Ui.Elements.Element.GetElementUnderPos
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: Microsoft.Xna.Framework.Vector2
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.GetElementUnderPos(Microsoft.Xna.Framework.Vector2)
    name: GetElementUnderPos
    nameWithType: Element.GetElementUnderPos
    fullName: MLEM.Ui.Elements.Element.GetElementUnderPos
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: Microsoft.Xna.Framework.Vector2
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Panel.GetElementUnderPos*
  commentId: Overload:MLEM.Ui.Elements.Panel.GetElementUnderPos
  name: GetElementUnderPos
  nameWithType: Panel.GetElementUnderPos
  fullName: MLEM.Ui.Elements.Panel.GetElementUnderPos
- uid: MLEM.Ui.Elements.Element.InitStyle(MLEM.Ui.Style.UiStyle)
  commentId: M:MLEM.Ui.Elements.Element.InitStyle(MLEM.Ui.Style.UiStyle)
  parent: MLEM.Ui.Elements.Element
  name: InitStyle(UiStyle)
  nameWithType: Element.InitStyle(UiStyle)
  fullName: MLEM.Ui.Elements.Element.InitStyle(MLEM.Ui.Style.UiStyle)
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.InitStyle(MLEM.Ui.Style.UiStyle)
    name: InitStyle
    nameWithType: Element.InitStyle
    fullName: MLEM.Ui.Elements.Element.InitStyle
  - name: (
    nameWithType: (
    fullName: (
  - uid: MLEM.Ui.Style.UiStyle
    name: UiStyle
    nameWithType: UiStyle
    fullName: MLEM.Ui.Style.UiStyle
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.InitStyle(MLEM.Ui.Style.UiStyle)
    name: InitStyle
    nameWithType: Element.InitStyle
    fullName: MLEM.Ui.Elements.Element.InitStyle
  - name: (
    nameWithType: (
    fullName: (
  - uid: MLEM.Ui.Style.UiStyle
    name: UiStyle
    nameWithType: UiStyle
    fullName: MLEM.Ui.Style.UiStyle
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Panel.InitStyle*
  commentId: Overload:MLEM.Ui.Elements.Panel.InitStyle
  name: InitStyle
  nameWithType: Panel.InitStyle
  fullName: MLEM.Ui.Elements.Panel.InitStyle
- uid: MLEM.Ui.Style.UiStyle
  commentId: T:MLEM.Ui.Style.UiStyle
  parent: MLEM.Ui.Style
  name: UiStyle
  nameWithType: UiStyle
  fullName: MLEM.Ui.Style.UiStyle
- uid: MLEM.Ui.Elements.Panel.ScrollSetup*
  commentId: Overload:MLEM.Ui.Elements.Panel.ScrollSetup
  name: ScrollSetup
  nameWithType: Panel.ScrollSetup
  fullName: MLEM.Ui.Elements.Panel.ScrollSetup
