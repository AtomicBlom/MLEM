### YamlMime:ManagedReference
items:
- uid: MLEM.Content.RawContentReader
  commentId: T:MLEM.Content.RawContentReader
  id: RawContentReader
  parent: MLEM.Content
  children:
  - MLEM.Content.RawContentReader.CanRead(System.Type)
  - MLEM.Content.RawContentReader.GetFileExtensions
  - MLEM.Content.RawContentReader.Read(MLEM.Content.RawContentManager,System.String,System.IO.Stream,System.Type,System.Object)
  langs:
  - csharp
  - vb
  name: RawContentReader
  nameWithType: RawContentReader
  fullName: MLEM.Content.RawContentReader
  type: Class
  source:
    remote:
      path: MLEM/Content/RawContentReader.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: RawContentReader
    path: ../MLEM/Content/RawContentReader.cs
    startLine: 8
  assemblies:
  - MLEM
  namespace: MLEM.Content
  summary: "\nRepresents a way for any kind of raw content file to be read using a <xref href=\"MLEM.Content.RawContentManager\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public abstract class RawContentReader
    content.vb: Public MustInherit Class RawContentReader
  inheritance:
  - System.Object
  derivedClasses:
  - MLEM.Content.RawContentReader`1
  - MLEM.Content.XmlReader
  - MLEM.Data.Json.RawJsonReader
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: MLEM.Content.RawContentReader.CanRead(System.Type)
  commentId: M:MLEM.Content.RawContentReader.CanRead(System.Type)
  id: CanRead(System.Type)
  parent: MLEM.Content.RawContentReader
  langs:
  - csharp
  - vb
  name: CanRead(Type)
  nameWithType: RawContentReader.CanRead(Type)
  fullName: MLEM.Content.RawContentReader.CanRead(System.Type)
  type: Method
  source:
    remote:
      path: MLEM/Content/RawContentReader.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: CanRead
    path: ../MLEM/Content/RawContentReader.cs
    startLine: 15
  assemblies:
  - MLEM
  namespace: MLEM.Content
  summary: "\nReturns if the given type can be loaded by this content reader\n"
  example: []
  syntax:
    content: public abstract bool CanRead(Type t)
    parameters:
    - id: t
      type: System.Type
      description: The type of asset
    return:
      type: System.Boolean
      description: If the type can be loaded by this content reader
    content.vb: Public MustOverride Function CanRead(t As Type) As Boolean
  overload: MLEM.Content.RawContentReader.CanRead*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: MLEM.Content.RawContentReader.Read(MLEM.Content.RawContentManager,System.String,System.IO.Stream,System.Type,System.Object)
  commentId: M:MLEM.Content.RawContentReader.Read(MLEM.Content.RawContentManager,System.String,System.IO.Stream,System.Type,System.Object)
  id: Read(MLEM.Content.RawContentManager,System.String,System.IO.Stream,System.Type,System.Object)
  parent: MLEM.Content.RawContentReader
  langs:
  - csharp
  - vb
  name: Read(RawContentManager, String, Stream, Type, Object)
  nameWithType: RawContentReader.Read(RawContentManager, String, Stream, Type, Object)
  fullName: MLEM.Content.RawContentReader.Read(MLEM.Content.RawContentManager, System.String, System.IO.Stream, System.Type, System.Object)
  type: Method
  source:
    remote:
      path: MLEM/Content/RawContentReader.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: Read
    path: ../MLEM/Content/RawContentReader.cs
    startLine: 26
  assemblies:
  - MLEM
  namespace: MLEM.Content
  summary: "\nReads the content file from disk and returns it.\n"
  example: []
  syntax:
    content: public abstract object Read(RawContentManager manager, string assetPath, Stream stream, Type t, object existing)
    parameters:
    - id: manager
      type: MLEM.Content.RawContentManager
      description: The <xref href="MLEM.Content.RawContentManager" data-throw-if-not-resolved="false"></xref> that is loading the asset
    - id: assetPath
      type: System.String
      description: The full path to the asset, starting from the <xref href="Microsoft.Xna.Framework.Content.ContentManager.RootDirectory" data-throw-if-not-resolved="false"></xref>
    - id: stream
      type: System.IO.Stream
      description: A stream that leads to this asset
    - id: t
      type: System.Type
      description: The type of asset to load
    - id: existing
      type: System.Object
      description: If this asset is being reloaded, this value contains the previous version of the asset.
    return:
      type: System.Object
      description: The loaded asset
    content.vb: Public MustOverride Function Read(manager As RawContentManager, assetPath As String, stream As Stream, t As Type, existing As Object) As Object
  overload: MLEM.Content.RawContentReader.Read*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: MLEM.Content.RawContentReader.GetFileExtensions
  commentId: M:MLEM.Content.RawContentReader.GetFileExtensions
  id: GetFileExtensions
  parent: MLEM.Content.RawContentReader
  langs:
  - csharp
  - vb
  name: GetFileExtensions()
  nameWithType: RawContentReader.GetFileExtensions()
  fullName: MLEM.Content.RawContentReader.GetFileExtensions()
  type: Method
  source:
    remote:
      path: MLEM/Content/RawContentReader.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: GetFileExtensions
    path: ../MLEM/Content/RawContentReader.cs
    startLine: 32
  assemblies:
  - MLEM
  namespace: MLEM.Content
  summary: "\nRepresents the list of file extensions that this reader can read from.\n"
  example: []
  syntax:
    content: public abstract string[] GetFileExtensions()
    return:
      type: System.String[]
      description: The list of valid extensions
    content.vb: Public MustOverride Function GetFileExtensions As String()
  overload: MLEM.Content.RawContentReader.GetFileExtensions*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
references:
- uid: MLEM.Content.RawContentManager
  commentId: T:MLEM.Content.RawContentManager
  parent: MLEM.Content
  name: RawContentManager
  nameWithType: RawContentManager
  fullName: MLEM.Content.RawContentManager
- uid: MLEM.Content
  commentId: N:MLEM.Content
  name: MLEM.Content
  nameWithType: MLEM.Content
  fullName: MLEM.Content
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Content.RawContentReader.CanRead*
  commentId: Overload:MLEM.Content.RawContentReader.CanRead
  name: CanRead
  nameWithType: RawContentReader.CanRead
  fullName: MLEM.Content.RawContentReader.CanRead
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Xna.Framework.Content.ContentManager.RootDirectory
  commentId: P:Microsoft.Xna.Framework.Content.ContentManager.RootDirectory
  parent: Microsoft.Xna.Framework.Content.ContentManager
  isExternal: true
  name: RootDirectory
  nameWithType: ContentManager.RootDirectory
  fullName: Microsoft.Xna.Framework.Content.ContentManager.RootDirectory
- uid: MLEM.Content.RawContentReader.Read*
  commentId: Overload:MLEM.Content.RawContentReader.Read
  name: Read
  nameWithType: RawContentReader.Read
  fullName: MLEM.Content.RawContentReader.Read
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: Microsoft.Xna.Framework.Content.ContentManager
  commentId: T:Microsoft.Xna.Framework.Content.ContentManager
  parent: Microsoft.Xna.Framework.Content
  isExternal: true
  name: ContentManager
  nameWithType: ContentManager
  fullName: Microsoft.Xna.Framework.Content.ContentManager
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Microsoft.Xna.Framework.Content
  commentId: N:Microsoft.Xna.Framework.Content
  isExternal: true
  name: Microsoft.Xna.Framework.Content
  nameWithType: Microsoft.Xna.Framework.Content
  fullName: Microsoft.Xna.Framework.Content
- uid: MLEM.Content.RawContentReader.GetFileExtensions*
  commentId: Overload:MLEM.Content.RawContentReader.GetFileExtensions
  name: GetFileExtensions
  nameWithType: RawContentReader.GetFileExtensions
  fullName: MLEM.Content.RawContentReader.GetFileExtensions
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
