### YamlMime:ManagedReference
items:
- uid: MLEM.Ui.Elements.Paragraph
  commentId: T:MLEM.Ui.Elements.Paragraph
  id: Paragraph
  parent: MLEM.Ui.Elements
  children:
  - MLEM.Ui.Elements.Paragraph.#ctor(MLEM.Ui.Anchor,System.Single,MLEM.Ui.Elements.Paragraph.TextCallback,System.Boolean)
  - MLEM.Ui.Elements.Paragraph.#ctor(MLEM.Ui.Anchor,System.Single,System.String,System.Boolean)
  - MLEM.Ui.Elements.Paragraph.AutoAdjustWidth
  - MLEM.Ui.Elements.Paragraph.BoldFont
  - MLEM.Ui.Elements.Paragraph.CalcActualSize(MLEM.Misc.RectangleF)
  - MLEM.Ui.Elements.Paragraph.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single,Microsoft.Xna.Framework.Graphics.BlendState,Microsoft.Xna.Framework.Graphics.SamplerState,Microsoft.Xna.Framework.Matrix)
  - MLEM.Ui.Elements.Paragraph.FormatSettings
  - MLEM.Ui.Elements.Paragraph.Formatting
  - MLEM.Ui.Elements.Paragraph.GetTextCallback
  - MLEM.Ui.Elements.Paragraph.InitStyle(MLEM.Ui.Style.UiStyle)
  - MLEM.Ui.Elements.Paragraph.ItalicFont
  - MLEM.Ui.Elements.Paragraph.ParseText(Microsoft.Xna.Framework.Vector2)
  - MLEM.Ui.Elements.Paragraph.RegularFont
  - MLEM.Ui.Elements.Paragraph.RenderedTextModifier
  - MLEM.Ui.Elements.Paragraph.Text
  - MLEM.Ui.Elements.Paragraph.TextColor
  - MLEM.Ui.Elements.Paragraph.TextScale
  - MLEM.Ui.Elements.Paragraph.TimeIntoAnimation
  - MLEM.Ui.Elements.Paragraph.TokenizedText
  - MLEM.Ui.Elements.Paragraph.Update(Microsoft.Xna.Framework.GameTime)
  langs:
  - csharp
  - vb
  name: Paragraph
  nameWithType: Paragraph
  fullName: MLEM.Ui.Elements.Paragraph
  type: Class
  source:
    remote:
      path: MLEM.Ui/Elements/Paragraph.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: Paragraph
    path: ../MLEM.Ui/Elements/Paragraph.cs
    startLine: 17
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: 'public class Paragraph : Element'
    content.vb: >-
      Public Class Paragraph

          Inherits Element
  inheritance:
  - System.Object
  - MLEM.Misc.GenericDataHolder
  - MLEM.Ui.Elements.Element
  inheritedMembers:
  - MLEM.Ui.Elements.Element.Children
  - MLEM.Ui.Elements.Element.SortedChildren
  - MLEM.Ui.Elements.Element.System
  - MLEM.Ui.Elements.Element.Controls
  - MLEM.Ui.Elements.Element.Input
  - MLEM.Ui.Elements.Element.Parent
  - MLEM.Ui.Elements.Element.Root
  - MLEM.Ui.Elements.Element.Scale
  - MLEM.Ui.Elements.Element.Anchor
  - MLEM.Ui.Elements.Element.Size
  - MLEM.Ui.Elements.Element.ScaledSize
  - MLEM.Ui.Elements.Element.PositionOffset
  - MLEM.Ui.Elements.Element.ScaledOffset
  - MLEM.Ui.Elements.Element.Padding
  - MLEM.Ui.Elements.Element.ScaledPadding
  - MLEM.Ui.Elements.Element.ChildPadding
  - MLEM.Ui.Elements.Element.ScaledChildPadding
  - MLEM.Ui.Elements.Element.ChildPaddedArea
  - MLEM.Ui.Elements.Element.UnscrolledArea
  - MLEM.Ui.Elements.Element.Area
  - MLEM.Ui.Elements.Element.DisplayArea
  - MLEM.Ui.Elements.Element.ScrollOffset
  - MLEM.Ui.Elements.Element.ScaledScrollOffset
  - MLEM.Ui.Elements.Element.IsHidden
  - MLEM.Ui.Elements.Element.Priority
  - MLEM.Ui.Elements.Element.CanBeSelected
  - MLEM.Ui.Elements.Element.CanBeMoused
  - MLEM.Ui.Elements.Element.CanBePressed
  - MLEM.Ui.Elements.Element.CanAutoAnchorsAttach
  - MLEM.Ui.Elements.Element.SetHeightBasedOnChildren
  - MLEM.Ui.Elements.Element.SetWidthBasedOnChildren
  - MLEM.Ui.Elements.Element.DrawAlpha
  - MLEM.Ui.Elements.Element.IsMouseOver
  - MLEM.Ui.Elements.Element.IsSelected
  - MLEM.Ui.Elements.Element.OnDrawn
  - MLEM.Ui.Elements.Element.OnUpdated
  - MLEM.Ui.Elements.Element.OnPressed
  - MLEM.Ui.Elements.Element.OnSecondaryPressed
  - MLEM.Ui.Elements.Element.OnSelected
  - MLEM.Ui.Elements.Element.OnDeselected
  - MLEM.Ui.Elements.Element.OnMouseEnter
  - MLEM.Ui.Elements.Element.OnMouseExit
  - MLEM.Ui.Elements.Element.OnTextInput
  - MLEM.Ui.Elements.Element.OnAreaUpdated
  - MLEM.Ui.Elements.Element.OnMousedElementChanged
  - MLEM.Ui.Elements.Element.OnSelectedElementChanged
  - MLEM.Ui.Elements.Element.GetTabNextElement
  - MLEM.Ui.Elements.Element.GetGamepadNextElement
  - MLEM.Ui.Elements.Element.OnChildAdded
  - MLEM.Ui.Elements.Element.OnChildRemoved
  - MLEM.Ui.Elements.Element.SelectionIndicator
  - MLEM.Ui.Elements.Element.ActionSound
  - MLEM.Ui.Elements.Element.SecondActionSound
  - MLEM.Ui.Elements.Element.AddChild``1({T},System.Int32)
  - MLEM.Ui.Elements.Element.RemoveChild(MLEM.Ui.Elements.Element)
  - MLEM.Ui.Elements.Element.RemoveChildren(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  - MLEM.Ui.Elements.Element.SetSortedChildrenDirty
  - MLEM.Ui.Elements.Element.UpdateSortedChildrenIfDirty
  - MLEM.Ui.Elements.Element.ForceUpdateSortedChildren
  - MLEM.Ui.Elements.Element.SetAreaDirty
  - MLEM.Ui.Elements.Element.UpdateAreaIfDirty
  - MLEM.Ui.Elements.Element.ForceUpdateArea
  - MLEM.Ui.Elements.Element.GetAreaForAutoAnchors
  - MLEM.Ui.Elements.Element.GetLowestChild(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  - MLEM.Ui.Elements.Element.GetRightmostChild(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  - MLEM.Ui.Elements.Element.GetLowestOlderSibling(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  - MLEM.Ui.Elements.Element.GetOlderSibling(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  - MLEM.Ui.Elements.Element.GetSiblings(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  - MLEM.Ui.Elements.Element.GetChildren``1(System.Func{{T},System.Boolean},System.Boolean,System.Boolean)
  - MLEM.Ui.Elements.Element.GetChildren(System.Func{MLEM.Ui.Elements.Element,System.Boolean},System.Boolean,System.Boolean)
  - MLEM.Ui.Elements.Element.GetParentTree
  - MLEM.Ui.Elements.Element.GetRelevantChildren
  - MLEM.Ui.Elements.Element.DrawEarly(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single,Microsoft.Xna.Framework.Graphics.BlendState,Microsoft.Xna.Framework.Graphics.SamplerState,Microsoft.Xna.Framework.Matrix)
  - MLEM.Ui.Elements.Element.GetElementUnderPos(Microsoft.Xna.Framework.Vector2)
  - MLEM.Ui.Elements.Element.AndChildren(System.Action{MLEM.Ui.Elements.Element})
  - MLEM.Ui.Elements.Element.ReorderChildren(System.Comparison{MLEM.Ui.Elements.Element})
  - MLEM.Ui.Elements.Element.ReverseChildren(System.Int32,System.Nullable{System.Int32})
  - MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
  - MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  - MLEM.Misc.GenericDataHolder.GetDataKeys
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: MLEM.Ui.Elements.Paragraph.Formatting
  commentId: F:MLEM.Ui.Elements.Paragraph.Formatting
  id: Formatting
  parent: MLEM.Ui.Elements.Paragraph
  langs:
  - csharp
  - vb
  name: Formatting
  nameWithType: Paragraph.Formatting
  fullName: MLEM.Ui.Elements.Paragraph.Formatting
  type: Field
  source:
    remote:
      path: MLEM.Ui/Elements/Paragraph.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: Formatting
    path: ../MLEM.Ui/Elements/Paragraph.cs
    startLine: 22
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: >-
      [Obsolete("Use the new text formatting system in MLEM.Formatting instead")]

      public FormattingCodeCollection Formatting
    return:
      type: MLEM.Formatting.FormattingCodeCollection
    content.vb: >-
      <Obsolete("Use the new text formatting system in MLEM.Formatting instead")>

      Public Formatting As FormattingCodeCollection
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use the new text formatting system in MLEM.Formatting instead
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Paragraph.RegularFont
  commentId: F:MLEM.Ui.Elements.Paragraph.RegularFont
  id: RegularFont
  parent: MLEM.Ui.Elements.Paragraph
  langs:
  - csharp
  - vb
  name: RegularFont
  nameWithType: Paragraph.RegularFont
  fullName: MLEM.Ui.Elements.Paragraph.RegularFont
  type: Field
  source:
    remote:
      path: MLEM.Ui/Elements/Paragraph.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: RegularFont
    path: ../MLEM.Ui/Elements/Paragraph.cs
    startLine: 23
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public StyleProp<GenericFont> RegularFont
    return:
      type: MLEM.Ui.Style.StyleProp{MLEM.Font.GenericFont}
    content.vb: Public RegularFont As StyleProp(Of GenericFont)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Paragraph.BoldFont
  commentId: F:MLEM.Ui.Elements.Paragraph.BoldFont
  id: BoldFont
  parent: MLEM.Ui.Elements.Paragraph
  langs:
  - csharp
  - vb
  name: BoldFont
  nameWithType: Paragraph.BoldFont
  fullName: MLEM.Ui.Elements.Paragraph.BoldFont
  type: Field
  source:
    remote:
      path: MLEM.Ui/Elements/Paragraph.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: BoldFont
    path: ../MLEM.Ui/Elements/Paragraph.cs
    startLine: 25
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: >-
      [Obsolete("Use the new GenericFont.Bold and GenericFont.Italic instead")]

      public StyleProp<GenericFont> BoldFont
    return:
      type: MLEM.Ui.Style.StyleProp{MLEM.Font.GenericFont}
    content.vb: >-
      <Obsolete("Use the new GenericFont.Bold and GenericFont.Italic instead")>

      Public BoldFont As StyleProp(Of GenericFont)
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use the new GenericFont.Bold and GenericFont.Italic instead
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Paragraph.ItalicFont
  commentId: F:MLEM.Ui.Elements.Paragraph.ItalicFont
  id: ItalicFont
  parent: MLEM.Ui.Elements.Paragraph
  langs:
  - csharp
  - vb
  name: ItalicFont
  nameWithType: Paragraph.ItalicFont
  fullName: MLEM.Ui.Elements.Paragraph.ItalicFont
  type: Field
  source:
    remote:
      path: MLEM.Ui/Elements/Paragraph.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: ItalicFont
    path: ../MLEM.Ui/Elements/Paragraph.cs
    startLine: 27
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: >-
      [Obsolete("Use the new GenericFont.Bold and GenericFont.Italic instead")]

      public StyleProp<GenericFont> ItalicFont
    return:
      type: MLEM.Ui.Style.StyleProp{MLEM.Font.GenericFont}
    content.vb: >-
      <Obsolete("Use the new GenericFont.Bold and GenericFont.Italic instead")>

      Public ItalicFont As StyleProp(Of GenericFont)
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use the new GenericFont.Bold and GenericFont.Italic instead
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Paragraph.FormatSettings
  commentId: F:MLEM.Ui.Elements.Paragraph.FormatSettings
  id: FormatSettings
  parent: MLEM.Ui.Elements.Paragraph
  langs:
  - csharp
  - vb
  name: FormatSettings
  nameWithType: Paragraph.FormatSettings
  fullName: MLEM.Ui.Elements.Paragraph.FormatSettings
  type: Field
  source:
    remote:
      path: MLEM.Ui/Elements/Paragraph.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: FormatSettings
    path: ../MLEM.Ui/Elements/Paragraph.cs
    startLine: 29
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: >-
      [Obsolete("Use the new text formatting system in MLEM.Formatting instead")]

      public StyleProp<FormatSettings> FormatSettings
    return:
      type: MLEM.Ui.Style.StyleProp{MLEM.Formatting.FormatSettings}
    content.vb: >-
      <Obsolete("Use the new text formatting system in MLEM.Formatting instead")>

      Public FormatSettings As StyleProp(Of FormatSettings)
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use the new text formatting system in MLEM.Formatting instead
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Paragraph.TokenizedText
  commentId: P:MLEM.Ui.Elements.Paragraph.TokenizedText
  id: TokenizedText
  parent: MLEM.Ui.Elements.Paragraph
  langs:
  - csharp
  - vb
  name: TokenizedText
  nameWithType: Paragraph.TokenizedText
  fullName: MLEM.Ui.Elements.Paragraph.TokenizedText
  type: Property
  source:
    remote:
      path: MLEM.Ui/Elements/Paragraph.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: TokenizedText
    path: ../MLEM.Ui/Elements/Paragraph.cs
    startLine: 30
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public TokenizedString TokenizedText { get; }
    parameters: []
    return:
      type: MLEM.Formatting.TokenizedString
    content.vb: Public ReadOnly Property TokenizedText As TokenizedString
  overload: MLEM.Ui.Elements.Paragraph.TokenizedText*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: MLEM.Ui.Elements.Paragraph.TextColor
  commentId: F:MLEM.Ui.Elements.Paragraph.TextColor
  id: TextColor
  parent: MLEM.Ui.Elements.Paragraph
  langs:
  - csharp
  - vb
  name: TextColor
  nameWithType: Paragraph.TextColor
  fullName: MLEM.Ui.Elements.Paragraph.TextColor
  type: Field
  source:
    remote:
      path: MLEM.Ui/Elements/Paragraph.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: TextColor
    path: ../MLEM.Ui/Elements/Paragraph.cs
    startLine: 32
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public StyleProp<Color> TextColor
    return:
      type: MLEM.Ui.Style.StyleProp{Microsoft.Xna.Framework.Color}
    content.vb: Public TextColor As StyleProp(Of Color)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Paragraph.TextScale
  commentId: F:MLEM.Ui.Elements.Paragraph.TextScale
  id: TextScale
  parent: MLEM.Ui.Elements.Paragraph
  langs:
  - csharp
  - vb
  name: TextScale
  nameWithType: Paragraph.TextScale
  fullName: MLEM.Ui.Elements.Paragraph.TextScale
  type: Field
  source:
    remote:
      path: MLEM.Ui/Elements/Paragraph.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: TextScale
    path: ../MLEM.Ui/Elements/Paragraph.cs
    startLine: 33
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public StyleProp<float> TextScale
    return:
      type: MLEM.Ui.Style.StyleProp{System.Single}
    content.vb: Public TextScale As StyleProp(Of Single)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Paragraph.Text
  commentId: P:MLEM.Ui.Elements.Paragraph.Text
  id: Text
  parent: MLEM.Ui.Elements.Paragraph
  langs:
  - csharp
  - vb
  name: Text
  nameWithType: Paragraph.Text
  fullName: MLEM.Ui.Elements.Paragraph.Text
  type: Property
  source:
    remote:
      path: MLEM.Ui/Elements/Paragraph.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: Text
    path: ../MLEM.Ui/Elements/Paragraph.cs
    startLine: 34
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public string Text { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Text As String
  overload: MLEM.Ui.Elements.Paragraph.Text*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Paragraph.AutoAdjustWidth
  commentId: F:MLEM.Ui.Elements.Paragraph.AutoAdjustWidth
  id: AutoAdjustWidth
  parent: MLEM.Ui.Elements.Paragraph
  langs:
  - csharp
  - vb
  name: AutoAdjustWidth
  nameWithType: Paragraph.AutoAdjustWidth
  fullName: MLEM.Ui.Elements.Paragraph.AutoAdjustWidth
  type: Field
  source:
    remote:
      path: MLEM.Ui/Elements/Paragraph.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: AutoAdjustWidth
    path: ../MLEM.Ui/Elements/Paragraph.cs
    startLine: 49
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public bool AutoAdjustWidth
    return:
      type: System.Boolean
    content.vb: Public AutoAdjustWidth As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Paragraph.GetTextCallback
  commentId: F:MLEM.Ui.Elements.Paragraph.GetTextCallback
  id: GetTextCallback
  parent: MLEM.Ui.Elements.Paragraph
  langs:
  - csharp
  - vb
  name: GetTextCallback
  nameWithType: Paragraph.GetTextCallback
  fullName: MLEM.Ui.Elements.Paragraph.GetTextCallback
  type: Field
  source:
    remote:
      path: MLEM.Ui/Elements/Paragraph.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: GetTextCallback
    path: ../MLEM.Ui/Elements/Paragraph.cs
    startLine: 50
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public Paragraph.TextCallback GetTextCallback
    return:
      type: MLEM.Ui.Elements.Paragraph.TextCallback
    content.vb: Public GetTextCallback As Paragraph.TextCallback
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Paragraph.RenderedTextModifier
  commentId: F:MLEM.Ui.Elements.Paragraph.RenderedTextModifier
  id: RenderedTextModifier
  parent: MLEM.Ui.Elements.Paragraph
  langs:
  - csharp
  - vb
  name: RenderedTextModifier
  nameWithType: Paragraph.RenderedTextModifier
  fullName: MLEM.Ui.Elements.Paragraph.RenderedTextModifier
  type: Field
  source:
    remote:
      path: MLEM.Ui/Elements/Paragraph.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: RenderedTextModifier
    path: ../MLEM.Ui/Elements/Paragraph.cs
    startLine: 52
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: >-
      [Obsolete("Use the new text formatting system in MLEM.Formatting instead")]

      public Paragraph.TextModifier RenderedTextModifier
    return:
      type: MLEM.Ui.Elements.Paragraph.TextModifier
    content.vb: >-
      <Obsolete("Use the new text formatting system in MLEM.Formatting instead")>

      Public RenderedTextModifier As Paragraph.TextModifier
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use the new text formatting system in MLEM.Formatting instead
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Paragraph.TimeIntoAnimation
  commentId: F:MLEM.Ui.Elements.Paragraph.TimeIntoAnimation
  id: TimeIntoAnimation
  parent: MLEM.Ui.Elements.Paragraph
  langs:
  - csharp
  - vb
  name: TimeIntoAnimation
  nameWithType: Paragraph.TimeIntoAnimation
  fullName: MLEM.Ui.Elements.Paragraph.TimeIntoAnimation
  type: Field
  source:
    remote:
      path: MLEM.Ui/Elements/Paragraph.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: TimeIntoAnimation
    path: ../MLEM.Ui/Elements/Paragraph.cs
    startLine: 54
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: >-
      [Obsolete("Use the new text formatting system in MLEM.Formatting instead")]

      public TimeSpan TimeIntoAnimation
    return:
      type: System.TimeSpan
    content.vb: >-
      <Obsolete("Use the new text formatting system in MLEM.Formatting instead")>

      Public TimeIntoAnimation As TimeSpan
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use the new text formatting system in MLEM.Formatting instead
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Paragraph.#ctor(MLEM.Ui.Anchor,System.Single,MLEM.Ui.Elements.Paragraph.TextCallback,System.Boolean)
  commentId: M:MLEM.Ui.Elements.Paragraph.#ctor(MLEM.Ui.Anchor,System.Single,MLEM.Ui.Elements.Paragraph.TextCallback,System.Boolean)
  id: '#ctor(MLEM.Ui.Anchor,System.Single,MLEM.Ui.Elements.Paragraph.TextCallback,System.Boolean)'
  parent: MLEM.Ui.Elements.Paragraph
  langs:
  - csharp
  - vb
  name: Paragraph(Anchor, Single, Paragraph.TextCallback, Boolean)
  nameWithType: Paragraph.Paragraph(Anchor, Single, Paragraph.TextCallback, Boolean)
  fullName: MLEM.Ui.Elements.Paragraph.Paragraph(MLEM.Ui.Anchor, System.Single, MLEM.Ui.Elements.Paragraph.TextCallback, System.Boolean)
  type: Constructor
  source:
    remote:
      path: MLEM.Ui/Elements/Paragraph.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: .ctor
    path: ../MLEM.Ui/Elements/Paragraph.cs
    startLine: 56
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public Paragraph(Anchor anchor, float width, Paragraph.TextCallback textCallback, bool centerText = false)
    parameters:
    - id: anchor
      type: MLEM.Ui.Anchor
    - id: width
      type: System.Single
    - id: textCallback
      type: MLEM.Ui.Elements.Paragraph.TextCallback
    - id: centerText
      type: System.Boolean
    content.vb: Public Sub New(anchor As Anchor, width As Single, textCallback As Paragraph.TextCallback, centerText As Boolean = False)
  overload: MLEM.Ui.Elements.Paragraph.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Paragraph.#ctor(MLEM.Ui.Anchor,System.Single,System.String,System.Boolean)
  commentId: M:MLEM.Ui.Elements.Paragraph.#ctor(MLEM.Ui.Anchor,System.Single,System.String,System.Boolean)
  id: '#ctor(MLEM.Ui.Anchor,System.Single,System.String,System.Boolean)'
  parent: MLEM.Ui.Elements.Paragraph
  langs:
  - csharp
  - vb
  name: Paragraph(Anchor, Single, String, Boolean)
  nameWithType: Paragraph.Paragraph(Anchor, Single, String, Boolean)
  fullName: MLEM.Ui.Elements.Paragraph.Paragraph(MLEM.Ui.Anchor, System.Single, System.String, System.Boolean)
  type: Constructor
  source:
    remote:
      path: MLEM.Ui/Elements/Paragraph.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: .ctor
    path: ../MLEM.Ui/Elements/Paragraph.cs
    startLine: 64
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public Paragraph(Anchor anchor, float width, string text, bool centerText = false)
    parameters:
    - id: anchor
      type: MLEM.Ui.Anchor
    - id: width
      type: System.Single
    - id: text
      type: System.String
    - id: centerText
      type: System.Boolean
    content.vb: Public Sub New(anchor As Anchor, width As Single, text As String, centerText As Boolean = False)
  overload: MLEM.Ui.Elements.Paragraph.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Paragraph.CalcActualSize(MLEM.Misc.RectangleF)
  commentId: M:MLEM.Ui.Elements.Paragraph.CalcActualSize(MLEM.Misc.RectangleF)
  id: CalcActualSize(MLEM.Misc.RectangleF)
  parent: MLEM.Ui.Elements.Paragraph
  langs:
  - csharp
  - vb
  name: CalcActualSize(RectangleF)
  nameWithType: Paragraph.CalcActualSize(RectangleF)
  fullName: MLEM.Ui.Elements.Paragraph.CalcActualSize(MLEM.Misc.RectangleF)
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/Paragraph.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: CalcActualSize
    path: ../MLEM.Ui/Elements/Paragraph.cs
    startLine: 73
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: protected override Vector2 CalcActualSize(RectangleF parentArea)
    parameters:
    - id: parentArea
      type: MLEM.Misc.RectangleF
    return:
      type: Microsoft.Xna.Framework.Vector2
    content.vb: Protected Overrides Function CalcActualSize(parentArea As RectangleF) As Vector2
  overridden: MLEM.Ui.Elements.Element.CalcActualSize(MLEM.Misc.RectangleF)
  overload: MLEM.Ui.Elements.Paragraph.CalcActualSize*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: MLEM.Ui.Elements.Paragraph.Update(Microsoft.Xna.Framework.GameTime)
  commentId: M:MLEM.Ui.Elements.Paragraph.Update(Microsoft.Xna.Framework.GameTime)
  id: Update(Microsoft.Xna.Framework.GameTime)
  parent: MLEM.Ui.Elements.Paragraph
  langs:
  - csharp
  - vb
  name: Update(GameTime)
  nameWithType: Paragraph.Update(GameTime)
  fullName: MLEM.Ui.Elements.Paragraph.Update(Microsoft.Xna.Framework.GameTime)
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/Paragraph.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: Update
    path: ../MLEM.Ui/Elements/Paragraph.cs
    startLine: 87
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public override void Update(GameTime time)
    parameters:
    - id: time
      type: Microsoft.Xna.Framework.GameTime
    content.vb: Public Overrides Sub Update(time As GameTime)
  overridden: MLEM.Ui.Elements.Element.Update(Microsoft.Xna.Framework.GameTime)
  overload: MLEM.Ui.Elements.Paragraph.Update*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: MLEM.Ui.Elements.Paragraph.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single,Microsoft.Xna.Framework.Graphics.BlendState,Microsoft.Xna.Framework.Graphics.SamplerState,Microsoft.Xna.Framework.Matrix)
  commentId: M:MLEM.Ui.Elements.Paragraph.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single,Microsoft.Xna.Framework.Graphics.BlendState,Microsoft.Xna.Framework.Graphics.SamplerState,Microsoft.Xna.Framework.Matrix)
  id: Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single,Microsoft.Xna.Framework.Graphics.BlendState,Microsoft.Xna.Framework.Graphics.SamplerState,Microsoft.Xna.Framework.Matrix)
  parent: MLEM.Ui.Elements.Paragraph
  langs:
  - csharp
  - vb
  name: Draw(GameTime, SpriteBatch, Single, BlendState, SamplerState, Matrix)
  nameWithType: Paragraph.Draw(GameTime, SpriteBatch, Single, BlendState, SamplerState, Matrix)
  fullName: MLEM.Ui.Elements.Paragraph.Draw(Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch, System.Single, Microsoft.Xna.Framework.Graphics.BlendState, Microsoft.Xna.Framework.Graphics.SamplerState, Microsoft.Xna.Framework.Matrix)
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/Paragraph.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: Draw
    path: ../MLEM.Ui/Elements/Paragraph.cs
    startLine: 97
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public override void Draw(GameTime time, SpriteBatch batch, float alpha, BlendState blendState, SamplerState samplerState, Matrix matrix)
    parameters:
    - id: time
      type: Microsoft.Xna.Framework.GameTime
    - id: batch
      type: Microsoft.Xna.Framework.Graphics.SpriteBatch
    - id: alpha
      type: System.Single
    - id: blendState
      type: Microsoft.Xna.Framework.Graphics.BlendState
    - id: samplerState
      type: Microsoft.Xna.Framework.Graphics.SamplerState
    - id: matrix
      type: Microsoft.Xna.Framework.Matrix
    content.vb: Public Overrides Sub Draw(time As GameTime, batch As SpriteBatch, alpha As Single, blendState As BlendState, samplerState As SamplerState, matrix As Matrix)
  overridden: MLEM.Ui.Elements.Element.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single,Microsoft.Xna.Framework.Graphics.BlendState,Microsoft.Xna.Framework.Graphics.SamplerState,Microsoft.Xna.Framework.Matrix)
  overload: MLEM.Ui.Elements.Paragraph.Draw*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: MLEM.Ui.Elements.Paragraph.InitStyle(MLEM.Ui.Style.UiStyle)
  commentId: M:MLEM.Ui.Elements.Paragraph.InitStyle(MLEM.Ui.Style.UiStyle)
  id: InitStyle(MLEM.Ui.Style.UiStyle)
  parent: MLEM.Ui.Elements.Paragraph
  langs:
  - csharp
  - vb
  name: InitStyle(UiStyle)
  nameWithType: Paragraph.InitStyle(UiStyle)
  fullName: MLEM.Ui.Elements.Paragraph.InitStyle(MLEM.Ui.Style.UiStyle)
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/Paragraph.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: InitStyle
    path: ../MLEM.Ui/Elements/Paragraph.cs
    startLine: 112
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: protected override void InitStyle(UiStyle style)
    parameters:
    - id: style
      type: MLEM.Ui.Style.UiStyle
    content.vb: Protected Overrides Sub InitStyle(style As UiStyle)
  overridden: MLEM.Ui.Elements.Element.InitStyle(MLEM.Ui.Style.UiStyle)
  overload: MLEM.Ui.Elements.Paragraph.InitStyle*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: MLEM.Ui.Elements.Paragraph.ParseText(Microsoft.Xna.Framework.Vector2)
  commentId: M:MLEM.Ui.Elements.Paragraph.ParseText(Microsoft.Xna.Framework.Vector2)
  id: ParseText(Microsoft.Xna.Framework.Vector2)
  parent: MLEM.Ui.Elements.Paragraph
  langs:
  - csharp
  - vb
  name: ParseText(Vector2)
  nameWithType: Paragraph.ParseText(Vector2)
  fullName: MLEM.Ui.Elements.Paragraph.ParseText(Microsoft.Xna.Framework.Vector2)
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/Paragraph.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: ParseText
    path: ../MLEM.Ui/Elements/Paragraph.cs
    startLine: 121
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: protected virtual void ParseText(Vector2 size)
    parameters:
    - id: size
      type: Microsoft.Xna.Framework.Vector2
    content.vb: Protected Overridable Sub ParseText(size As Vector2)
  overload: MLEM.Ui.Elements.Paragraph.ParseText*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: MLEM.Ui.Elements
  commentId: N:MLEM.Ui.Elements
  name: MLEM.Ui.Elements
  nameWithType: MLEM.Ui.Elements
  fullName: MLEM.Ui.Elements
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: MLEM.Misc.GenericDataHolder
  commentId: T:MLEM.Misc.GenericDataHolder
  parent: MLEM.Misc
  name: GenericDataHolder
  nameWithType: GenericDataHolder
  fullName: MLEM.Misc.GenericDataHolder
- uid: MLEM.Ui.Elements.Element
  commentId: T:MLEM.Ui.Elements.Element
  parent: MLEM.Ui.Elements
  name: Element
  nameWithType: Element
  fullName: MLEM.Ui.Elements.Element
- uid: MLEM.Ui.Elements.Element.Children
  commentId: F:MLEM.Ui.Elements.Element.Children
  parent: MLEM.Ui.Elements.Element
  name: Children
  nameWithType: Element.Children
  fullName: MLEM.Ui.Elements.Element.Children
- uid: MLEM.Ui.Elements.Element.SortedChildren
  commentId: P:MLEM.Ui.Elements.Element.SortedChildren
  parent: MLEM.Ui.Elements.Element
  name: SortedChildren
  nameWithType: Element.SortedChildren
  fullName: MLEM.Ui.Elements.Element.SortedChildren
- uid: MLEM.Ui.Elements.Element.System
  commentId: P:MLEM.Ui.Elements.Element.System
  parent: MLEM.Ui.Elements.Element
  name: System
  nameWithType: Element.System
  fullName: MLEM.Ui.Elements.Element.System
- uid: MLEM.Ui.Elements.Element.Controls
  commentId: F:MLEM.Ui.Elements.Element.Controls
  parent: MLEM.Ui.Elements.Element
  name: Controls
  nameWithType: Element.Controls
  fullName: MLEM.Ui.Elements.Element.Controls
- uid: MLEM.Ui.Elements.Element.Input
  commentId: P:MLEM.Ui.Elements.Element.Input
  parent: MLEM.Ui.Elements.Element
  name: Input
  nameWithType: Element.Input
  fullName: MLEM.Ui.Elements.Element.Input
- uid: MLEM.Ui.Elements.Element.Parent
  commentId: P:MLEM.Ui.Elements.Element.Parent
  parent: MLEM.Ui.Elements.Element
  name: Parent
  nameWithType: Element.Parent
  fullName: MLEM.Ui.Elements.Element.Parent
- uid: MLEM.Ui.Elements.Element.Root
  commentId: P:MLEM.Ui.Elements.Element.Root
  parent: MLEM.Ui.Elements.Element
  name: Root
  nameWithType: Element.Root
  fullName: MLEM.Ui.Elements.Element.Root
- uid: MLEM.Ui.Elements.Element.Scale
  commentId: P:MLEM.Ui.Elements.Element.Scale
  parent: MLEM.Ui.Elements.Element
  name: Scale
  nameWithType: Element.Scale
  fullName: MLEM.Ui.Elements.Element.Scale
- uid: MLEM.Ui.Elements.Element.Anchor
  commentId: P:MLEM.Ui.Elements.Element.Anchor
  parent: MLEM.Ui.Elements.Element
  name: Anchor
  nameWithType: Element.Anchor
  fullName: MLEM.Ui.Elements.Element.Anchor
- uid: MLEM.Ui.Elements.Element.Size
  commentId: P:MLEM.Ui.Elements.Element.Size
  parent: MLEM.Ui.Elements.Element
  name: Size
  nameWithType: Element.Size
  fullName: MLEM.Ui.Elements.Element.Size
- uid: MLEM.Ui.Elements.Element.ScaledSize
  commentId: P:MLEM.Ui.Elements.Element.ScaledSize
  parent: MLEM.Ui.Elements.Element
  name: ScaledSize
  nameWithType: Element.ScaledSize
  fullName: MLEM.Ui.Elements.Element.ScaledSize
- uid: MLEM.Ui.Elements.Element.PositionOffset
  commentId: P:MLEM.Ui.Elements.Element.PositionOffset
  parent: MLEM.Ui.Elements.Element
  name: PositionOffset
  nameWithType: Element.PositionOffset
  fullName: MLEM.Ui.Elements.Element.PositionOffset
- uid: MLEM.Ui.Elements.Element.ScaledOffset
  commentId: P:MLEM.Ui.Elements.Element.ScaledOffset
  parent: MLEM.Ui.Elements.Element
  name: ScaledOffset
  nameWithType: Element.ScaledOffset
  fullName: MLEM.Ui.Elements.Element.ScaledOffset
- uid: MLEM.Ui.Elements.Element.Padding
  commentId: F:MLEM.Ui.Elements.Element.Padding
  parent: MLEM.Ui.Elements.Element
  name: Padding
  nameWithType: Element.Padding
  fullName: MLEM.Ui.Elements.Element.Padding
- uid: MLEM.Ui.Elements.Element.ScaledPadding
  commentId: P:MLEM.Ui.Elements.Element.ScaledPadding
  parent: MLEM.Ui.Elements.Element
  name: ScaledPadding
  nameWithType: Element.ScaledPadding
  fullName: MLEM.Ui.Elements.Element.ScaledPadding
- uid: MLEM.Ui.Elements.Element.ChildPadding
  commentId: P:MLEM.Ui.Elements.Element.ChildPadding
  parent: MLEM.Ui.Elements.Element
  name: ChildPadding
  nameWithType: Element.ChildPadding
  fullName: MLEM.Ui.Elements.Element.ChildPadding
- uid: MLEM.Ui.Elements.Element.ScaledChildPadding
  commentId: P:MLEM.Ui.Elements.Element.ScaledChildPadding
  parent: MLEM.Ui.Elements.Element
  name: ScaledChildPadding
  nameWithType: Element.ScaledChildPadding
  fullName: MLEM.Ui.Elements.Element.ScaledChildPadding
- uid: MLEM.Ui.Elements.Element.ChildPaddedArea
  commentId: P:MLEM.Ui.Elements.Element.ChildPaddedArea
  parent: MLEM.Ui.Elements.Element
  name: ChildPaddedArea
  nameWithType: Element.ChildPaddedArea
  fullName: MLEM.Ui.Elements.Element.ChildPaddedArea
- uid: MLEM.Ui.Elements.Element.UnscrolledArea
  commentId: P:MLEM.Ui.Elements.Element.UnscrolledArea
  parent: MLEM.Ui.Elements.Element
  name: UnscrolledArea
  nameWithType: Element.UnscrolledArea
  fullName: MLEM.Ui.Elements.Element.UnscrolledArea
- uid: MLEM.Ui.Elements.Element.Area
  commentId: P:MLEM.Ui.Elements.Element.Area
  parent: MLEM.Ui.Elements.Element
  name: Area
  nameWithType: Element.Area
  fullName: MLEM.Ui.Elements.Element.Area
- uid: MLEM.Ui.Elements.Element.DisplayArea
  commentId: P:MLEM.Ui.Elements.Element.DisplayArea
  parent: MLEM.Ui.Elements.Element
  name: DisplayArea
  nameWithType: Element.DisplayArea
  fullName: MLEM.Ui.Elements.Element.DisplayArea
- uid: MLEM.Ui.Elements.Element.ScrollOffset
  commentId: F:MLEM.Ui.Elements.Element.ScrollOffset
  parent: MLEM.Ui.Elements.Element
  name: ScrollOffset
  nameWithType: Element.ScrollOffset
  fullName: MLEM.Ui.Elements.Element.ScrollOffset
- uid: MLEM.Ui.Elements.Element.ScaledScrollOffset
  commentId: P:MLEM.Ui.Elements.Element.ScaledScrollOffset
  parent: MLEM.Ui.Elements.Element
  name: ScaledScrollOffset
  nameWithType: Element.ScaledScrollOffset
  fullName: MLEM.Ui.Elements.Element.ScaledScrollOffset
- uid: MLEM.Ui.Elements.Element.IsHidden
  commentId: P:MLEM.Ui.Elements.Element.IsHidden
  parent: MLEM.Ui.Elements.Element
  name: IsHidden
  nameWithType: Element.IsHidden
  fullName: MLEM.Ui.Elements.Element.IsHidden
- uid: MLEM.Ui.Elements.Element.Priority
  commentId: P:MLEM.Ui.Elements.Element.Priority
  parent: MLEM.Ui.Elements.Element
  name: Priority
  nameWithType: Element.Priority
  fullName: MLEM.Ui.Elements.Element.Priority
- uid: MLEM.Ui.Elements.Element.CanBeSelected
  commentId: F:MLEM.Ui.Elements.Element.CanBeSelected
  parent: MLEM.Ui.Elements.Element
  name: CanBeSelected
  nameWithType: Element.CanBeSelected
  fullName: MLEM.Ui.Elements.Element.CanBeSelected
- uid: MLEM.Ui.Elements.Element.CanBeMoused
  commentId: F:MLEM.Ui.Elements.Element.CanBeMoused
  parent: MLEM.Ui.Elements.Element
  name: CanBeMoused
  nameWithType: Element.CanBeMoused
  fullName: MLEM.Ui.Elements.Element.CanBeMoused
- uid: MLEM.Ui.Elements.Element.CanBePressed
  commentId: F:MLEM.Ui.Elements.Element.CanBePressed
  parent: MLEM.Ui.Elements.Element
  name: CanBePressed
  nameWithType: Element.CanBePressed
  fullName: MLEM.Ui.Elements.Element.CanBePressed
- uid: MLEM.Ui.Elements.Element.CanAutoAnchorsAttach
  commentId: F:MLEM.Ui.Elements.Element.CanAutoAnchorsAttach
  parent: MLEM.Ui.Elements.Element
  name: CanAutoAnchorsAttach
  nameWithType: Element.CanAutoAnchorsAttach
  fullName: MLEM.Ui.Elements.Element.CanAutoAnchorsAttach
- uid: MLEM.Ui.Elements.Element.SetHeightBasedOnChildren
  commentId: F:MLEM.Ui.Elements.Element.SetHeightBasedOnChildren
  parent: MLEM.Ui.Elements.Element
  name: SetHeightBasedOnChildren
  nameWithType: Element.SetHeightBasedOnChildren
  fullName: MLEM.Ui.Elements.Element.SetHeightBasedOnChildren
- uid: MLEM.Ui.Elements.Element.SetWidthBasedOnChildren
  commentId: F:MLEM.Ui.Elements.Element.SetWidthBasedOnChildren
  parent: MLEM.Ui.Elements.Element
  name: SetWidthBasedOnChildren
  nameWithType: Element.SetWidthBasedOnChildren
  fullName: MLEM.Ui.Elements.Element.SetWidthBasedOnChildren
- uid: MLEM.Ui.Elements.Element.DrawAlpha
  commentId: F:MLEM.Ui.Elements.Element.DrawAlpha
  parent: MLEM.Ui.Elements.Element
  name: DrawAlpha
  nameWithType: Element.DrawAlpha
  fullName: MLEM.Ui.Elements.Element.DrawAlpha
- uid: MLEM.Ui.Elements.Element.IsMouseOver
  commentId: P:MLEM.Ui.Elements.Element.IsMouseOver
  parent: MLEM.Ui.Elements.Element
  name: IsMouseOver
  nameWithType: Element.IsMouseOver
  fullName: MLEM.Ui.Elements.Element.IsMouseOver
- uid: MLEM.Ui.Elements.Element.IsSelected
  commentId: P:MLEM.Ui.Elements.Element.IsSelected
  parent: MLEM.Ui.Elements.Element
  name: IsSelected
  nameWithType: Element.IsSelected
  fullName: MLEM.Ui.Elements.Element.IsSelected
- uid: MLEM.Ui.Elements.Element.OnDrawn
  commentId: F:MLEM.Ui.Elements.Element.OnDrawn
  parent: MLEM.Ui.Elements.Element
  name: OnDrawn
  nameWithType: Element.OnDrawn
  fullName: MLEM.Ui.Elements.Element.OnDrawn
- uid: MLEM.Ui.Elements.Element.OnUpdated
  commentId: F:MLEM.Ui.Elements.Element.OnUpdated
  parent: MLEM.Ui.Elements.Element
  name: OnUpdated
  nameWithType: Element.OnUpdated
  fullName: MLEM.Ui.Elements.Element.OnUpdated
- uid: MLEM.Ui.Elements.Element.OnPressed
  commentId: F:MLEM.Ui.Elements.Element.OnPressed
  parent: MLEM.Ui.Elements.Element
  name: OnPressed
  nameWithType: Element.OnPressed
  fullName: MLEM.Ui.Elements.Element.OnPressed
- uid: MLEM.Ui.Elements.Element.OnSecondaryPressed
  commentId: F:MLEM.Ui.Elements.Element.OnSecondaryPressed
  parent: MLEM.Ui.Elements.Element
  name: OnSecondaryPressed
  nameWithType: Element.OnSecondaryPressed
  fullName: MLEM.Ui.Elements.Element.OnSecondaryPressed
- uid: MLEM.Ui.Elements.Element.OnSelected
  commentId: F:MLEM.Ui.Elements.Element.OnSelected
  parent: MLEM.Ui.Elements.Element
  name: OnSelected
  nameWithType: Element.OnSelected
  fullName: MLEM.Ui.Elements.Element.OnSelected
- uid: MLEM.Ui.Elements.Element.OnDeselected
  commentId: F:MLEM.Ui.Elements.Element.OnDeselected
  parent: MLEM.Ui.Elements.Element
  name: OnDeselected
  nameWithType: Element.OnDeselected
  fullName: MLEM.Ui.Elements.Element.OnDeselected
- uid: MLEM.Ui.Elements.Element.OnMouseEnter
  commentId: F:MLEM.Ui.Elements.Element.OnMouseEnter
  parent: MLEM.Ui.Elements.Element
  name: OnMouseEnter
  nameWithType: Element.OnMouseEnter
  fullName: MLEM.Ui.Elements.Element.OnMouseEnter
- uid: MLEM.Ui.Elements.Element.OnMouseExit
  commentId: F:MLEM.Ui.Elements.Element.OnMouseExit
  parent: MLEM.Ui.Elements.Element
  name: OnMouseExit
  nameWithType: Element.OnMouseExit
  fullName: MLEM.Ui.Elements.Element.OnMouseExit
- uid: MLEM.Ui.Elements.Element.OnTextInput
  commentId: F:MLEM.Ui.Elements.Element.OnTextInput
  parent: MLEM.Ui.Elements.Element
  name: OnTextInput
  nameWithType: Element.OnTextInput
  fullName: MLEM.Ui.Elements.Element.OnTextInput
- uid: MLEM.Ui.Elements.Element.OnAreaUpdated
  commentId: F:MLEM.Ui.Elements.Element.OnAreaUpdated
  parent: MLEM.Ui.Elements.Element
  name: OnAreaUpdated
  nameWithType: Element.OnAreaUpdated
  fullName: MLEM.Ui.Elements.Element.OnAreaUpdated
- uid: MLEM.Ui.Elements.Element.OnMousedElementChanged
  commentId: F:MLEM.Ui.Elements.Element.OnMousedElementChanged
  parent: MLEM.Ui.Elements.Element
  name: OnMousedElementChanged
  nameWithType: Element.OnMousedElementChanged
  fullName: MLEM.Ui.Elements.Element.OnMousedElementChanged
- uid: MLEM.Ui.Elements.Element.OnSelectedElementChanged
  commentId: F:MLEM.Ui.Elements.Element.OnSelectedElementChanged
  parent: MLEM.Ui.Elements.Element
  name: OnSelectedElementChanged
  nameWithType: Element.OnSelectedElementChanged
  fullName: MLEM.Ui.Elements.Element.OnSelectedElementChanged
- uid: MLEM.Ui.Elements.Element.GetTabNextElement
  commentId: F:MLEM.Ui.Elements.Element.GetTabNextElement
  parent: MLEM.Ui.Elements.Element
  name: GetTabNextElement
  nameWithType: Element.GetTabNextElement
  fullName: MLEM.Ui.Elements.Element.GetTabNextElement
- uid: MLEM.Ui.Elements.Element.GetGamepadNextElement
  commentId: F:MLEM.Ui.Elements.Element.GetGamepadNextElement
  parent: MLEM.Ui.Elements.Element
  name: GetGamepadNextElement
  nameWithType: Element.GetGamepadNextElement
  fullName: MLEM.Ui.Elements.Element.GetGamepadNextElement
- uid: MLEM.Ui.Elements.Element.OnChildAdded
  commentId: F:MLEM.Ui.Elements.Element.OnChildAdded
  parent: MLEM.Ui.Elements.Element
  name: OnChildAdded
  nameWithType: Element.OnChildAdded
  fullName: MLEM.Ui.Elements.Element.OnChildAdded
- uid: MLEM.Ui.Elements.Element.OnChildRemoved
  commentId: F:MLEM.Ui.Elements.Element.OnChildRemoved
  parent: MLEM.Ui.Elements.Element
  name: OnChildRemoved
  nameWithType: Element.OnChildRemoved
  fullName: MLEM.Ui.Elements.Element.OnChildRemoved
- uid: MLEM.Ui.Elements.Element.SelectionIndicator
  commentId: F:MLEM.Ui.Elements.Element.SelectionIndicator
  parent: MLEM.Ui.Elements.Element
  name: SelectionIndicator
  nameWithType: Element.SelectionIndicator
  fullName: MLEM.Ui.Elements.Element.SelectionIndicator
- uid: MLEM.Ui.Elements.Element.ActionSound
  commentId: F:MLEM.Ui.Elements.Element.ActionSound
  parent: MLEM.Ui.Elements.Element
  name: ActionSound
  nameWithType: Element.ActionSound
  fullName: MLEM.Ui.Elements.Element.ActionSound
- uid: MLEM.Ui.Elements.Element.SecondActionSound
  commentId: F:MLEM.Ui.Elements.Element.SecondActionSound
  parent: MLEM.Ui.Elements.Element
  name: SecondActionSound
  nameWithType: Element.SecondActionSound
  fullName: MLEM.Ui.Elements.Element.SecondActionSound
- uid: MLEM.Ui.Elements.Element.AddChild``1({T},System.Int32)
  commentId: M:MLEM.Ui.Elements.Element.AddChild``1(``0,System.Int32)
  parent: MLEM.Ui.Elements.Element
  definition: MLEM.Ui.Elements.Element.AddChild``1(``0,System.Int32)
  name: AddChild<T>(T, Int32)
  nameWithType: Element.AddChild<T>(T, Int32)
  fullName: MLEM.Ui.Elements.Element.AddChild<T>(T, System.Int32)
  nameWithType.vb: Element.AddChild(Of T)(T, Int32)
  fullName.vb: MLEM.Ui.Elements.Element.AddChild(Of T)(T, System.Int32)
  name.vb: AddChild(Of T)(T, Int32)
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.AddChild``1(``0,System.Int32)
    name: AddChild<T>
    nameWithType: Element.AddChild<T>
    fullName: MLEM.Ui.Elements.Element.AddChild<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.AddChild``1(``0,System.Int32)
    name: AddChild(Of T)
    nameWithType: Element.AddChild(Of T)
    fullName: MLEM.Ui.Elements.Element.AddChild(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Element.RemoveChild(MLEM.Ui.Elements.Element)
  commentId: M:MLEM.Ui.Elements.Element.RemoveChild(MLEM.Ui.Elements.Element)
  parent: MLEM.Ui.Elements.Element
  name: RemoveChild(Element)
  nameWithType: Element.RemoveChild(Element)
  fullName: MLEM.Ui.Elements.Element.RemoveChild(MLEM.Ui.Elements.Element)
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.RemoveChild(MLEM.Ui.Elements.Element)
    name: RemoveChild
    nameWithType: Element.RemoveChild
    fullName: MLEM.Ui.Elements.Element.RemoveChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.RemoveChild(MLEM.Ui.Elements.Element)
    name: RemoveChild
    nameWithType: Element.RemoveChild
    fullName: MLEM.Ui.Elements.Element.RemoveChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Element.RemoveChildren(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  commentId: M:MLEM.Ui.Elements.Element.RemoveChildren(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  parent: MLEM.Ui.Elements.Element
  isExternal: true
  name: RemoveChildren(Func<Element, Boolean>)
  nameWithType: Element.RemoveChildren(Func<Element, Boolean>)
  fullName: MLEM.Ui.Elements.Element.RemoveChildren(System.Func<MLEM.Ui.Elements.Element, System.Boolean>)
  nameWithType.vb: Element.RemoveChildren(Func(Of Element, Boolean))
  fullName.vb: MLEM.Ui.Elements.Element.RemoveChildren(System.Func(Of MLEM.Ui.Elements.Element, System.Boolean))
  name.vb: RemoveChildren(Func(Of Element, Boolean))
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.RemoveChildren(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
    name: RemoveChildren
    nameWithType: Element.RemoveChildren
    fullName: MLEM.Ui.Elements.Element.RemoveChildren
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.RemoveChildren(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
    name: RemoveChildren
    nameWithType: Element.RemoveChildren
    fullName: MLEM.Ui.Elements.Element.RemoveChildren
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Element.SetSortedChildrenDirty
  commentId: M:MLEM.Ui.Elements.Element.SetSortedChildrenDirty
  parent: MLEM.Ui.Elements.Element
  name: SetSortedChildrenDirty()
  nameWithType: Element.SetSortedChildrenDirty()
  fullName: MLEM.Ui.Elements.Element.SetSortedChildrenDirty()
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.SetSortedChildrenDirty
    name: SetSortedChildrenDirty
    nameWithType: Element.SetSortedChildrenDirty
    fullName: MLEM.Ui.Elements.Element.SetSortedChildrenDirty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.SetSortedChildrenDirty
    name: SetSortedChildrenDirty
    nameWithType: Element.SetSortedChildrenDirty
    fullName: MLEM.Ui.Elements.Element.SetSortedChildrenDirty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Element.UpdateSortedChildrenIfDirty
  commentId: M:MLEM.Ui.Elements.Element.UpdateSortedChildrenIfDirty
  parent: MLEM.Ui.Elements.Element
  name: UpdateSortedChildrenIfDirty()
  nameWithType: Element.UpdateSortedChildrenIfDirty()
  fullName: MLEM.Ui.Elements.Element.UpdateSortedChildrenIfDirty()
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.UpdateSortedChildrenIfDirty
    name: UpdateSortedChildrenIfDirty
    nameWithType: Element.UpdateSortedChildrenIfDirty
    fullName: MLEM.Ui.Elements.Element.UpdateSortedChildrenIfDirty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.UpdateSortedChildrenIfDirty
    name: UpdateSortedChildrenIfDirty
    nameWithType: Element.UpdateSortedChildrenIfDirty
    fullName: MLEM.Ui.Elements.Element.UpdateSortedChildrenIfDirty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Element.ForceUpdateSortedChildren
  commentId: M:MLEM.Ui.Elements.Element.ForceUpdateSortedChildren
  parent: MLEM.Ui.Elements.Element
  name: ForceUpdateSortedChildren()
  nameWithType: Element.ForceUpdateSortedChildren()
  fullName: MLEM.Ui.Elements.Element.ForceUpdateSortedChildren()
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.ForceUpdateSortedChildren
    name: ForceUpdateSortedChildren
    nameWithType: Element.ForceUpdateSortedChildren
    fullName: MLEM.Ui.Elements.Element.ForceUpdateSortedChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.ForceUpdateSortedChildren
    name: ForceUpdateSortedChildren
    nameWithType: Element.ForceUpdateSortedChildren
    fullName: MLEM.Ui.Elements.Element.ForceUpdateSortedChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Element.SetAreaDirty
  commentId: M:MLEM.Ui.Elements.Element.SetAreaDirty
  parent: MLEM.Ui.Elements.Element
  name: SetAreaDirty()
  nameWithType: Element.SetAreaDirty()
  fullName: MLEM.Ui.Elements.Element.SetAreaDirty()
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.SetAreaDirty
    name: SetAreaDirty
    nameWithType: Element.SetAreaDirty
    fullName: MLEM.Ui.Elements.Element.SetAreaDirty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.SetAreaDirty
    name: SetAreaDirty
    nameWithType: Element.SetAreaDirty
    fullName: MLEM.Ui.Elements.Element.SetAreaDirty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Element.UpdateAreaIfDirty
  commentId: M:MLEM.Ui.Elements.Element.UpdateAreaIfDirty
  parent: MLEM.Ui.Elements.Element
  name: UpdateAreaIfDirty()
  nameWithType: Element.UpdateAreaIfDirty()
  fullName: MLEM.Ui.Elements.Element.UpdateAreaIfDirty()
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.UpdateAreaIfDirty
    name: UpdateAreaIfDirty
    nameWithType: Element.UpdateAreaIfDirty
    fullName: MLEM.Ui.Elements.Element.UpdateAreaIfDirty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.UpdateAreaIfDirty
    name: UpdateAreaIfDirty
    nameWithType: Element.UpdateAreaIfDirty
    fullName: MLEM.Ui.Elements.Element.UpdateAreaIfDirty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Element.ForceUpdateArea
  commentId: M:MLEM.Ui.Elements.Element.ForceUpdateArea
  parent: MLEM.Ui.Elements.Element
  name: ForceUpdateArea()
  nameWithType: Element.ForceUpdateArea()
  fullName: MLEM.Ui.Elements.Element.ForceUpdateArea()
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.ForceUpdateArea
    name: ForceUpdateArea
    nameWithType: Element.ForceUpdateArea
    fullName: MLEM.Ui.Elements.Element.ForceUpdateArea
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.ForceUpdateArea
    name: ForceUpdateArea
    nameWithType: Element.ForceUpdateArea
    fullName: MLEM.Ui.Elements.Element.ForceUpdateArea
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Element.GetAreaForAutoAnchors
  commentId: M:MLEM.Ui.Elements.Element.GetAreaForAutoAnchors
  parent: MLEM.Ui.Elements.Element
  name: GetAreaForAutoAnchors()
  nameWithType: Element.GetAreaForAutoAnchors()
  fullName: MLEM.Ui.Elements.Element.GetAreaForAutoAnchors()
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.GetAreaForAutoAnchors
    name: GetAreaForAutoAnchors
    nameWithType: Element.GetAreaForAutoAnchors
    fullName: MLEM.Ui.Elements.Element.GetAreaForAutoAnchors
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.GetAreaForAutoAnchors
    name: GetAreaForAutoAnchors
    nameWithType: Element.GetAreaForAutoAnchors
    fullName: MLEM.Ui.Elements.Element.GetAreaForAutoAnchors
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Element.GetLowestChild(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  commentId: M:MLEM.Ui.Elements.Element.GetLowestChild(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  parent: MLEM.Ui.Elements.Element
  isExternal: true
  name: GetLowestChild(Func<Element, Boolean>)
  nameWithType: Element.GetLowestChild(Func<Element, Boolean>)
  fullName: MLEM.Ui.Elements.Element.GetLowestChild(System.Func<MLEM.Ui.Elements.Element, System.Boolean>)
  nameWithType.vb: Element.GetLowestChild(Func(Of Element, Boolean))
  fullName.vb: MLEM.Ui.Elements.Element.GetLowestChild(System.Func(Of MLEM.Ui.Elements.Element, System.Boolean))
  name.vb: GetLowestChild(Func(Of Element, Boolean))
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.GetLowestChild(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
    name: GetLowestChild
    nameWithType: Element.GetLowestChild
    fullName: MLEM.Ui.Elements.Element.GetLowestChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.GetLowestChild(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
    name: GetLowestChild
    nameWithType: Element.GetLowestChild
    fullName: MLEM.Ui.Elements.Element.GetLowestChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Element.GetRightmostChild(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  commentId: M:MLEM.Ui.Elements.Element.GetRightmostChild(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  parent: MLEM.Ui.Elements.Element
  isExternal: true
  name: GetRightmostChild(Func<Element, Boolean>)
  nameWithType: Element.GetRightmostChild(Func<Element, Boolean>)
  fullName: MLEM.Ui.Elements.Element.GetRightmostChild(System.Func<MLEM.Ui.Elements.Element, System.Boolean>)
  nameWithType.vb: Element.GetRightmostChild(Func(Of Element, Boolean))
  fullName.vb: MLEM.Ui.Elements.Element.GetRightmostChild(System.Func(Of MLEM.Ui.Elements.Element, System.Boolean))
  name.vb: GetRightmostChild(Func(Of Element, Boolean))
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.GetRightmostChild(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
    name: GetRightmostChild
    nameWithType: Element.GetRightmostChild
    fullName: MLEM.Ui.Elements.Element.GetRightmostChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.GetRightmostChild(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
    name: GetRightmostChild
    nameWithType: Element.GetRightmostChild
    fullName: MLEM.Ui.Elements.Element.GetRightmostChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Element.GetLowestOlderSibling(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  commentId: M:MLEM.Ui.Elements.Element.GetLowestOlderSibling(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  parent: MLEM.Ui.Elements.Element
  isExternal: true
  name: GetLowestOlderSibling(Func<Element, Boolean>)
  nameWithType: Element.GetLowestOlderSibling(Func<Element, Boolean>)
  fullName: MLEM.Ui.Elements.Element.GetLowestOlderSibling(System.Func<MLEM.Ui.Elements.Element, System.Boolean>)
  nameWithType.vb: Element.GetLowestOlderSibling(Func(Of Element, Boolean))
  fullName.vb: MLEM.Ui.Elements.Element.GetLowestOlderSibling(System.Func(Of MLEM.Ui.Elements.Element, System.Boolean))
  name.vb: GetLowestOlderSibling(Func(Of Element, Boolean))
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.GetLowestOlderSibling(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
    name: GetLowestOlderSibling
    nameWithType: Element.GetLowestOlderSibling
    fullName: MLEM.Ui.Elements.Element.GetLowestOlderSibling
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.GetLowestOlderSibling(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
    name: GetLowestOlderSibling
    nameWithType: Element.GetLowestOlderSibling
    fullName: MLEM.Ui.Elements.Element.GetLowestOlderSibling
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Element.GetOlderSibling(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  commentId: M:MLEM.Ui.Elements.Element.GetOlderSibling(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  parent: MLEM.Ui.Elements.Element
  isExternal: true
  name: GetOlderSibling(Func<Element, Boolean>)
  nameWithType: Element.GetOlderSibling(Func<Element, Boolean>)
  fullName: MLEM.Ui.Elements.Element.GetOlderSibling(System.Func<MLEM.Ui.Elements.Element, System.Boolean>)
  nameWithType.vb: Element.GetOlderSibling(Func(Of Element, Boolean))
  fullName.vb: MLEM.Ui.Elements.Element.GetOlderSibling(System.Func(Of MLEM.Ui.Elements.Element, System.Boolean))
  name.vb: GetOlderSibling(Func(Of Element, Boolean))
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.GetOlderSibling(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
    name: GetOlderSibling
    nameWithType: Element.GetOlderSibling
    fullName: MLEM.Ui.Elements.Element.GetOlderSibling
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.GetOlderSibling(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
    name: GetOlderSibling
    nameWithType: Element.GetOlderSibling
    fullName: MLEM.Ui.Elements.Element.GetOlderSibling
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Element.GetSiblings(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  commentId: M:MLEM.Ui.Elements.Element.GetSiblings(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  parent: MLEM.Ui.Elements.Element
  isExternal: true
  name: GetSiblings(Func<Element, Boolean>)
  nameWithType: Element.GetSiblings(Func<Element, Boolean>)
  fullName: MLEM.Ui.Elements.Element.GetSiblings(System.Func<MLEM.Ui.Elements.Element, System.Boolean>)
  nameWithType.vb: Element.GetSiblings(Func(Of Element, Boolean))
  fullName.vb: MLEM.Ui.Elements.Element.GetSiblings(System.Func(Of MLEM.Ui.Elements.Element, System.Boolean))
  name.vb: GetSiblings(Func(Of Element, Boolean))
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.GetSiblings(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
    name: GetSiblings
    nameWithType: Element.GetSiblings
    fullName: MLEM.Ui.Elements.Element.GetSiblings
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.GetSiblings(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
    name: GetSiblings
    nameWithType: Element.GetSiblings
    fullName: MLEM.Ui.Elements.Element.GetSiblings
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Element.GetChildren``1(System.Func{{T},System.Boolean},System.Boolean,System.Boolean)
  commentId: M:MLEM.Ui.Elements.Element.GetChildren``1(System.Func{``0,System.Boolean},System.Boolean,System.Boolean)
  parent: MLEM.Ui.Elements.Element
  definition: MLEM.Ui.Elements.Element.GetChildren``1(System.Func{``0,System.Boolean},System.Boolean,System.Boolean)
  name: GetChildren<T>(Func<T, Boolean>, Boolean, Boolean)
  nameWithType: Element.GetChildren<T>(Func<T, Boolean>, Boolean, Boolean)
  fullName: MLEM.Ui.Elements.Element.GetChildren<T>(System.Func<T, System.Boolean>, System.Boolean, System.Boolean)
  nameWithType.vb: Element.GetChildren(Of T)(Func(Of T, Boolean), Boolean, Boolean)
  fullName.vb: MLEM.Ui.Elements.Element.GetChildren(Of T)(System.Func(Of T, System.Boolean), System.Boolean, System.Boolean)
  name.vb: GetChildren(Of T)(Func(Of T, Boolean), Boolean, Boolean)
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.GetChildren``1(System.Func{``0,System.Boolean},System.Boolean,System.Boolean)
    name: GetChildren<T>
    nameWithType: Element.GetChildren<T>
    fullName: MLEM.Ui.Elements.Element.GetChildren<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.GetChildren``1(System.Func{``0,System.Boolean},System.Boolean,System.Boolean)
    name: GetChildren(Of T)
    nameWithType: Element.GetChildren(Of T)
    fullName: MLEM.Ui.Elements.Element.GetChildren(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Element.GetChildren(System.Func{MLEM.Ui.Elements.Element,System.Boolean},System.Boolean,System.Boolean)
  commentId: M:MLEM.Ui.Elements.Element.GetChildren(System.Func{MLEM.Ui.Elements.Element,System.Boolean},System.Boolean,System.Boolean)
  parent: MLEM.Ui.Elements.Element
  isExternal: true
  name: GetChildren(Func<Element, Boolean>, Boolean, Boolean)
  nameWithType: Element.GetChildren(Func<Element, Boolean>, Boolean, Boolean)
  fullName: MLEM.Ui.Elements.Element.GetChildren(System.Func<MLEM.Ui.Elements.Element, System.Boolean>, System.Boolean, System.Boolean)
  nameWithType.vb: Element.GetChildren(Func(Of Element, Boolean), Boolean, Boolean)
  fullName.vb: MLEM.Ui.Elements.Element.GetChildren(System.Func(Of MLEM.Ui.Elements.Element, System.Boolean), System.Boolean, System.Boolean)
  name.vb: GetChildren(Func(Of Element, Boolean), Boolean, Boolean)
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.GetChildren(System.Func{MLEM.Ui.Elements.Element,System.Boolean},System.Boolean,System.Boolean)
    name: GetChildren
    nameWithType: Element.GetChildren
    fullName: MLEM.Ui.Elements.Element.GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.GetChildren(System.Func{MLEM.Ui.Elements.Element,System.Boolean},System.Boolean,System.Boolean)
    name: GetChildren
    nameWithType: Element.GetChildren
    fullName: MLEM.Ui.Elements.Element.GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Element.GetParentTree
  commentId: M:MLEM.Ui.Elements.Element.GetParentTree
  parent: MLEM.Ui.Elements.Element
  name: GetParentTree()
  nameWithType: Element.GetParentTree()
  fullName: MLEM.Ui.Elements.Element.GetParentTree()
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.GetParentTree
    name: GetParentTree
    nameWithType: Element.GetParentTree
    fullName: MLEM.Ui.Elements.Element.GetParentTree
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.GetParentTree
    name: GetParentTree
    nameWithType: Element.GetParentTree
    fullName: MLEM.Ui.Elements.Element.GetParentTree
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Element.GetRelevantChildren
  commentId: M:MLEM.Ui.Elements.Element.GetRelevantChildren
  parent: MLEM.Ui.Elements.Element
  name: GetRelevantChildren()
  nameWithType: Element.GetRelevantChildren()
  fullName: MLEM.Ui.Elements.Element.GetRelevantChildren()
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.GetRelevantChildren
    name: GetRelevantChildren
    nameWithType: Element.GetRelevantChildren
    fullName: MLEM.Ui.Elements.Element.GetRelevantChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.GetRelevantChildren
    name: GetRelevantChildren
    nameWithType: Element.GetRelevantChildren
    fullName: MLEM.Ui.Elements.Element.GetRelevantChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Element.DrawEarly(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single,Microsoft.Xna.Framework.Graphics.BlendState,Microsoft.Xna.Framework.Graphics.SamplerState,Microsoft.Xna.Framework.Matrix)
  commentId: M:MLEM.Ui.Elements.Element.DrawEarly(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single,Microsoft.Xna.Framework.Graphics.BlendState,Microsoft.Xna.Framework.Graphics.SamplerState,Microsoft.Xna.Framework.Matrix)
  parent: MLEM.Ui.Elements.Element
  isExternal: true
  name: DrawEarly(GameTime, SpriteBatch, Single, BlendState, SamplerState, Matrix)
  nameWithType: Element.DrawEarly(GameTime, SpriteBatch, Single, BlendState, SamplerState, Matrix)
  fullName: MLEM.Ui.Elements.Element.DrawEarly(Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch, System.Single, Microsoft.Xna.Framework.Graphics.BlendState, Microsoft.Xna.Framework.Graphics.SamplerState, Microsoft.Xna.Framework.Matrix)
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.DrawEarly(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single,Microsoft.Xna.Framework.Graphics.BlendState,Microsoft.Xna.Framework.Graphics.SamplerState,Microsoft.Xna.Framework.Matrix)
    name: DrawEarly
    nameWithType: Element.DrawEarly
    fullName: MLEM.Ui.Elements.Element.DrawEarly
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: Microsoft.Xna.Framework.GameTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
    name: SpriteBatch
    nameWithType: SpriteBatch
    fullName: Microsoft.Xna.Framework.Graphics.SpriteBatch
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Graphics.BlendState
    name: BlendState
    nameWithType: BlendState
    fullName: Microsoft.Xna.Framework.Graphics.BlendState
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Graphics.SamplerState
    name: SamplerState
    nameWithType: SamplerState
    fullName: Microsoft.Xna.Framework.Graphics.SamplerState
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Matrix
    name: Matrix
    nameWithType: Matrix
    fullName: Microsoft.Xna.Framework.Matrix
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.DrawEarly(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single,Microsoft.Xna.Framework.Graphics.BlendState,Microsoft.Xna.Framework.Graphics.SamplerState,Microsoft.Xna.Framework.Matrix)
    name: DrawEarly
    nameWithType: Element.DrawEarly
    fullName: MLEM.Ui.Elements.Element.DrawEarly
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: Microsoft.Xna.Framework.GameTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
    name: SpriteBatch
    nameWithType: SpriteBatch
    fullName: Microsoft.Xna.Framework.Graphics.SpriteBatch
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Graphics.BlendState
    name: BlendState
    nameWithType: BlendState
    fullName: Microsoft.Xna.Framework.Graphics.BlendState
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Graphics.SamplerState
    name: SamplerState
    nameWithType: SamplerState
    fullName: Microsoft.Xna.Framework.Graphics.SamplerState
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Matrix
    name: Matrix
    nameWithType: Matrix
    fullName: Microsoft.Xna.Framework.Matrix
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Element.GetElementUnderPos(Microsoft.Xna.Framework.Vector2)
  commentId: M:MLEM.Ui.Elements.Element.GetElementUnderPos(Microsoft.Xna.Framework.Vector2)
  parent: MLEM.Ui.Elements.Element
  isExternal: true
  name: GetElementUnderPos(Vector2)
  nameWithType: Element.GetElementUnderPos(Vector2)
  fullName: MLEM.Ui.Elements.Element.GetElementUnderPos(Microsoft.Xna.Framework.Vector2)
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.GetElementUnderPos(Microsoft.Xna.Framework.Vector2)
    name: GetElementUnderPos
    nameWithType: Element.GetElementUnderPos
    fullName: MLEM.Ui.Elements.Element.GetElementUnderPos
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: Microsoft.Xna.Framework.Vector2
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.GetElementUnderPos(Microsoft.Xna.Framework.Vector2)
    name: GetElementUnderPos
    nameWithType: Element.GetElementUnderPos
    fullName: MLEM.Ui.Elements.Element.GetElementUnderPos
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: Microsoft.Xna.Framework.Vector2
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Element.AndChildren(System.Action{MLEM.Ui.Elements.Element})
  commentId: M:MLEM.Ui.Elements.Element.AndChildren(System.Action{MLEM.Ui.Elements.Element})
  parent: MLEM.Ui.Elements.Element
  isExternal: true
  name: AndChildren(Action<Element>)
  nameWithType: Element.AndChildren(Action<Element>)
  fullName: MLEM.Ui.Elements.Element.AndChildren(System.Action<MLEM.Ui.Elements.Element>)
  nameWithType.vb: Element.AndChildren(Action(Of Element))
  fullName.vb: MLEM.Ui.Elements.Element.AndChildren(System.Action(Of MLEM.Ui.Elements.Element))
  name.vb: AndChildren(Action(Of Element))
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.AndChildren(System.Action{MLEM.Ui.Elements.Element})
    name: AndChildren
    nameWithType: Element.AndChildren
    fullName: MLEM.Ui.Elements.Element.AndChildren
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.AndChildren(System.Action{MLEM.Ui.Elements.Element})
    name: AndChildren
    nameWithType: Element.AndChildren
    fullName: MLEM.Ui.Elements.Element.AndChildren
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Element.ReorderChildren(System.Comparison{MLEM.Ui.Elements.Element})
  commentId: M:MLEM.Ui.Elements.Element.ReorderChildren(System.Comparison{MLEM.Ui.Elements.Element})
  parent: MLEM.Ui.Elements.Element
  isExternal: true
  name: ReorderChildren(Comparison<Element>)
  nameWithType: Element.ReorderChildren(Comparison<Element>)
  fullName: MLEM.Ui.Elements.Element.ReorderChildren(System.Comparison<MLEM.Ui.Elements.Element>)
  nameWithType.vb: Element.ReorderChildren(Comparison(Of Element))
  fullName.vb: MLEM.Ui.Elements.Element.ReorderChildren(System.Comparison(Of MLEM.Ui.Elements.Element))
  name.vb: ReorderChildren(Comparison(Of Element))
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.ReorderChildren(System.Comparison{MLEM.Ui.Elements.Element})
    name: ReorderChildren
    nameWithType: Element.ReorderChildren
    fullName: MLEM.Ui.Elements.Element.ReorderChildren
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Comparison`1
    name: Comparison
    nameWithType: Comparison
    fullName: System.Comparison
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.ReorderChildren(System.Comparison{MLEM.Ui.Elements.Element})
    name: ReorderChildren
    nameWithType: Element.ReorderChildren
    fullName: MLEM.Ui.Elements.Element.ReorderChildren
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Comparison`1
    name: Comparison
    nameWithType: Comparison
    fullName: System.Comparison
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Element.ReverseChildren(System.Int32,System.Nullable{System.Int32})
  commentId: M:MLEM.Ui.Elements.Element.ReverseChildren(System.Int32,System.Nullable{System.Int32})
  parent: MLEM.Ui.Elements.Element
  isExternal: true
  name: ReverseChildren(Int32, Nullable<Int32>)
  nameWithType: Element.ReverseChildren(Int32, Nullable<Int32>)
  fullName: MLEM.Ui.Elements.Element.ReverseChildren(System.Int32, System.Nullable<System.Int32>)
  nameWithType.vb: Element.ReverseChildren(Int32, Nullable(Of Int32))
  fullName.vb: MLEM.Ui.Elements.Element.ReverseChildren(System.Int32, System.Nullable(Of System.Int32))
  name.vb: ReverseChildren(Int32, Nullable(Of Int32))
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.ReverseChildren(System.Int32,System.Nullable{System.Int32})
    name: ReverseChildren
    nameWithType: Element.ReverseChildren
    fullName: MLEM.Ui.Elements.Element.ReverseChildren
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.ReverseChildren(System.Int32,System.Nullable{System.Int32})
    name: ReverseChildren
    nameWithType: Element.ReverseChildren
    fullName: MLEM.Ui.Elements.Element.ReverseChildren
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
  commentId: M:MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
  parent: MLEM.Misc.GenericDataHolder
  isExternal: true
  name: SetData(String, Object)
  nameWithType: GenericDataHolder.SetData(String, Object)
  fullName: MLEM.Misc.GenericDataHolder.SetData(System.String, System.Object)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
    name: SetData
    nameWithType: GenericDataHolder.SetData
    fullName: MLEM.Misc.GenericDataHolder.SetData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
    name: SetData
    nameWithType: GenericDataHolder.SetData
    fullName: MLEM.Misc.GenericDataHolder.SetData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  commentId: M:MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  parent: MLEM.Misc.GenericDataHolder
  isExternal: true
  name: GetData<T>(String)
  nameWithType: GenericDataHolder.GetData<T>(String)
  fullName: MLEM.Misc.GenericDataHolder.GetData<T>(System.String)
  nameWithType.vb: GenericDataHolder.GetData(Of T)(String)
  fullName.vb: MLEM.Misc.GenericDataHolder.GetData(Of T)(System.String)
  name.vb: GetData(Of T)(String)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
    name: GetData<T>
    nameWithType: GenericDataHolder.GetData<T>
    fullName: MLEM.Misc.GenericDataHolder.GetData<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
    name: GetData(Of T)
    nameWithType: GenericDataHolder.GetData(Of T)
    fullName: MLEM.Misc.GenericDataHolder.GetData(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Misc.GenericDataHolder.GetDataKeys
  commentId: M:MLEM.Misc.GenericDataHolder.GetDataKeys
  parent: MLEM.Misc.GenericDataHolder
  name: GetDataKeys()
  nameWithType: GenericDataHolder.GetDataKeys()
  fullName: MLEM.Misc.GenericDataHolder.GetDataKeys()
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.GetDataKeys
    name: GetDataKeys
    nameWithType: GenericDataHolder.GetDataKeys
    fullName: MLEM.Misc.GenericDataHolder.GetDataKeys
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.GetDataKeys
    name: GetDataKeys
    nameWithType: GenericDataHolder.GetDataKeys
    fullName: MLEM.Misc.GenericDataHolder.GetDataKeys
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
- uid: MLEM.Ui.Elements.Element.AddChild``1(``0,System.Int32)
  commentId: M:MLEM.Ui.Elements.Element.AddChild``1(``0,System.Int32)
  isExternal: true
  name: AddChild<T>(T, Int32)
  nameWithType: Element.AddChild<T>(T, Int32)
  fullName: MLEM.Ui.Elements.Element.AddChild<T>(T, System.Int32)
  nameWithType.vb: Element.AddChild(Of T)(T, Int32)
  fullName.vb: MLEM.Ui.Elements.Element.AddChild(Of T)(T, System.Int32)
  name.vb: AddChild(Of T)(T, Int32)
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.AddChild``1(``0,System.Int32)
    name: AddChild<T>
    nameWithType: Element.AddChild<T>
    fullName: MLEM.Ui.Elements.Element.AddChild<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.AddChild``1(``0,System.Int32)
    name: AddChild(Of T)
    nameWithType: Element.AddChild(Of T)
    fullName: MLEM.Ui.Elements.Element.AddChild(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Element.GetChildren``1(System.Func{``0,System.Boolean},System.Boolean,System.Boolean)
  commentId: M:MLEM.Ui.Elements.Element.GetChildren``1(System.Func{``0,System.Boolean},System.Boolean,System.Boolean)
  isExternal: true
  name: GetChildren<T>(Func<T, Boolean>, Boolean, Boolean)
  nameWithType: Element.GetChildren<T>(Func<T, Boolean>, Boolean, Boolean)
  fullName: MLEM.Ui.Elements.Element.GetChildren<T>(System.Func<T, System.Boolean>, System.Boolean, System.Boolean)
  nameWithType.vb: Element.GetChildren(Of T)(Func(Of T, Boolean), Boolean, Boolean)
  fullName.vb: MLEM.Ui.Elements.Element.GetChildren(Of T)(System.Func(Of T, System.Boolean), System.Boolean, System.Boolean)
  name.vb: GetChildren(Of T)(Func(Of T, Boolean), Boolean, Boolean)
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.GetChildren``1(System.Func{``0,System.Boolean},System.Boolean,System.Boolean)
    name: GetChildren<T>
    nameWithType: Element.GetChildren<T>
    fullName: MLEM.Ui.Elements.Element.GetChildren<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.GetChildren``1(System.Func{``0,System.Boolean},System.Boolean,System.Boolean)
    name: GetChildren(Of T)
    nameWithType: Element.GetChildren(Of T)
    fullName: MLEM.Ui.Elements.Element.GetChildren(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Formatting.FormattingCodeCollection
  commentId: T:MLEM.Formatting.FormattingCodeCollection
  parent: MLEM.Formatting
  name: FormattingCodeCollection
  nameWithType: FormattingCodeCollection
  fullName: MLEM.Formatting.FormattingCodeCollection
- uid: MLEM.Formatting
  commentId: N:MLEM.Formatting
  name: MLEM.Formatting
  nameWithType: MLEM.Formatting
  fullName: MLEM.Formatting
- uid: MLEM.Ui.Style.StyleProp{MLEM.Font.GenericFont}
  commentId: T:MLEM.Ui.Style.StyleProp{MLEM.Font.GenericFont}
  parent: MLEM.Ui.Style
  definition: MLEM.Ui.Style.StyleProp`1
  name: StyleProp<GenericFont>
  nameWithType: StyleProp<GenericFont>
  fullName: MLEM.Ui.Style.StyleProp<MLEM.Font.GenericFont>
  nameWithType.vb: StyleProp(Of GenericFont)
  fullName.vb: MLEM.Ui.Style.StyleProp(Of MLEM.Font.GenericFont)
  name.vb: StyleProp(Of GenericFont)
  spec.csharp:
  - uid: MLEM.Ui.Style.StyleProp`1
    name: StyleProp
    nameWithType: StyleProp
    fullName: MLEM.Ui.Style.StyleProp
  - name: <
    nameWithType: <
    fullName: <
  - uid: MLEM.Font.GenericFont
    name: GenericFont
    nameWithType: GenericFont
    fullName: MLEM.Font.GenericFont
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MLEM.Ui.Style.StyleProp`1
    name: StyleProp
    nameWithType: StyleProp
    fullName: MLEM.Ui.Style.StyleProp
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MLEM.Font.GenericFont
    name: GenericFont
    nameWithType: GenericFont
    fullName: MLEM.Font.GenericFont
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Style.StyleProp`1
  commentId: T:MLEM.Ui.Style.StyleProp`1
  parent: MLEM.Ui.Style
  name: StyleProp<T>
  nameWithType: StyleProp<T>
  fullName: MLEM.Ui.Style.StyleProp<T>
  nameWithType.vb: StyleProp(Of T)
  fullName.vb: MLEM.Ui.Style.StyleProp(Of T)
  name.vb: StyleProp(Of T)
  spec.csharp:
  - uid: MLEM.Ui.Style.StyleProp`1
    name: StyleProp
    nameWithType: StyleProp
    fullName: MLEM.Ui.Style.StyleProp
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MLEM.Ui.Style.StyleProp`1
    name: StyleProp
    nameWithType: StyleProp
    fullName: MLEM.Ui.Style.StyleProp
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Style
  commentId: N:MLEM.Ui.Style
  name: MLEM.Ui.Style
  nameWithType: MLEM.Ui.Style
  fullName: MLEM.Ui.Style
- uid: MLEM.Ui.Style.StyleProp{MLEM.Formatting.FormatSettings}
  commentId: T:MLEM.Ui.Style.StyleProp{MLEM.Formatting.FormatSettings}
  parent: MLEM.Ui.Style
  definition: MLEM.Ui.Style.StyleProp`1
  name: StyleProp<FormatSettings>
  nameWithType: StyleProp<FormatSettings>
  fullName: MLEM.Ui.Style.StyleProp<MLEM.Formatting.FormatSettings>
  nameWithType.vb: StyleProp(Of FormatSettings)
  fullName.vb: MLEM.Ui.Style.StyleProp(Of MLEM.Formatting.FormatSettings)
  name.vb: StyleProp(Of FormatSettings)
  spec.csharp:
  - uid: MLEM.Ui.Style.StyleProp`1
    name: StyleProp
    nameWithType: StyleProp
    fullName: MLEM.Ui.Style.StyleProp
  - name: <
    nameWithType: <
    fullName: <
  - uid: MLEM.Formatting.FormatSettings
    name: FormatSettings
    nameWithType: FormatSettings
    fullName: MLEM.Formatting.FormatSettings
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MLEM.Ui.Style.StyleProp`1
    name: StyleProp
    nameWithType: StyleProp
    fullName: MLEM.Ui.Style.StyleProp
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MLEM.Formatting.FormatSettings
    name: FormatSettings
    nameWithType: FormatSettings
    fullName: MLEM.Formatting.FormatSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Paragraph.TokenizedText*
  commentId: Overload:MLEM.Ui.Elements.Paragraph.TokenizedText
  name: TokenizedText
  nameWithType: Paragraph.TokenizedText
  fullName: MLEM.Ui.Elements.Paragraph.TokenizedText
- uid: MLEM.Formatting.TokenizedString
  commentId: T:MLEM.Formatting.TokenizedString
  parent: MLEM.Formatting
  name: TokenizedString
  nameWithType: TokenizedString
  fullName: MLEM.Formatting.TokenizedString
- uid: MLEM.Ui.Style.StyleProp{Microsoft.Xna.Framework.Color}
  commentId: T:MLEM.Ui.Style.StyleProp{Microsoft.Xna.Framework.Color}
  parent: MLEM.Ui.Style
  definition: MLEM.Ui.Style.StyleProp`1
  name: StyleProp<Color>
  nameWithType: StyleProp<Color>
  fullName: MLEM.Ui.Style.StyleProp<Microsoft.Xna.Framework.Color>
  nameWithType.vb: StyleProp(Of Color)
  fullName.vb: MLEM.Ui.Style.StyleProp(Of Microsoft.Xna.Framework.Color)
  name.vb: StyleProp(Of Color)
  spec.csharp:
  - uid: MLEM.Ui.Style.StyleProp`1
    name: StyleProp
    nameWithType: StyleProp
    fullName: MLEM.Ui.Style.StyleProp
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    nameWithType: Color
    fullName: Microsoft.Xna.Framework.Color
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MLEM.Ui.Style.StyleProp`1
    name: StyleProp
    nameWithType: StyleProp
    fullName: MLEM.Ui.Style.StyleProp
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    nameWithType: Color
    fullName: Microsoft.Xna.Framework.Color
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Style.StyleProp{System.Single}
  commentId: T:MLEM.Ui.Style.StyleProp{System.Single}
  parent: MLEM.Ui.Style
  definition: MLEM.Ui.Style.StyleProp`1
  name: StyleProp<Single>
  nameWithType: StyleProp<Single>
  fullName: MLEM.Ui.Style.StyleProp<System.Single>
  nameWithType.vb: StyleProp(Of Single)
  fullName.vb: MLEM.Ui.Style.StyleProp(Of System.Single)
  name.vb: StyleProp(Of Single)
  spec.csharp:
  - uid: MLEM.Ui.Style.StyleProp`1
    name: StyleProp
    nameWithType: StyleProp
    fullName: MLEM.Ui.Style.StyleProp
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MLEM.Ui.Style.StyleProp`1
    name: StyleProp
    nameWithType: StyleProp
    fullName: MLEM.Ui.Style.StyleProp
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Paragraph.Text*
  commentId: Overload:MLEM.Ui.Elements.Paragraph.Text
  name: Text
  nameWithType: Paragraph.Text
  fullName: MLEM.Ui.Elements.Paragraph.Text
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: MLEM.Ui.Elements.Paragraph.TextCallback
  commentId: T:MLEM.Ui.Elements.Paragraph.TextCallback
  parent: MLEM.Ui.Elements
  name: Paragraph.TextCallback
  nameWithType: Paragraph.TextCallback
  fullName: MLEM.Ui.Elements.Paragraph.TextCallback
- uid: MLEM.Ui.Elements.Paragraph.TextModifier
  commentId: T:MLEM.Ui.Elements.Paragraph.TextModifier
  parent: MLEM.Ui.Elements
  name: Paragraph.TextModifier
  nameWithType: Paragraph.TextModifier
  fullName: MLEM.Ui.Elements.Paragraph.TextModifier
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: MLEM.Ui.Elements.Paragraph.#ctor*
  commentId: Overload:MLEM.Ui.Elements.Paragraph.#ctor
  name: Paragraph
  nameWithType: Paragraph.Paragraph
  fullName: MLEM.Ui.Elements.Paragraph.Paragraph
- uid: MLEM.Ui.Anchor
  commentId: T:MLEM.Ui.Anchor
  parent: MLEM.Ui
  name: Anchor
  nameWithType: Anchor
  fullName: MLEM.Ui.Anchor
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: MLEM.Ui
  commentId: N:MLEM.Ui
  name: MLEM.Ui
  nameWithType: MLEM.Ui
  fullName: MLEM.Ui
- uid: MLEM.Ui.Elements.Element.CalcActualSize(MLEM.Misc.RectangleF)
  commentId: M:MLEM.Ui.Elements.Element.CalcActualSize(MLEM.Misc.RectangleF)
  parent: MLEM.Ui.Elements.Element
  name: CalcActualSize(RectangleF)
  nameWithType: Element.CalcActualSize(RectangleF)
  fullName: MLEM.Ui.Elements.Element.CalcActualSize(MLEM.Misc.RectangleF)
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.CalcActualSize(MLEM.Misc.RectangleF)
    name: CalcActualSize
    nameWithType: Element.CalcActualSize
    fullName: MLEM.Ui.Elements.Element.CalcActualSize
  - name: (
    nameWithType: (
    fullName: (
  - uid: MLEM.Misc.RectangleF
    name: RectangleF
    nameWithType: RectangleF
    fullName: MLEM.Misc.RectangleF
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.CalcActualSize(MLEM.Misc.RectangleF)
    name: CalcActualSize
    nameWithType: Element.CalcActualSize
    fullName: MLEM.Ui.Elements.Element.CalcActualSize
  - name: (
    nameWithType: (
    fullName: (
  - uid: MLEM.Misc.RectangleF
    name: RectangleF
    nameWithType: RectangleF
    fullName: MLEM.Misc.RectangleF
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Paragraph.CalcActualSize*
  commentId: Overload:MLEM.Ui.Elements.Paragraph.CalcActualSize
  name: CalcActualSize
  nameWithType: Paragraph.CalcActualSize
  fullName: MLEM.Ui.Elements.Paragraph.CalcActualSize
- uid: MLEM.Misc.RectangleF
  commentId: T:MLEM.Misc.RectangleF
  parent: MLEM.Misc
  name: RectangleF
  nameWithType: RectangleF
  fullName: MLEM.Misc.RectangleF
- uid: Microsoft.Xna.Framework.Vector2
  commentId: T:Microsoft.Xna.Framework.Vector2
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Microsoft.Xna.Framework.Vector2
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
- uid: MLEM.Ui.Elements.Element.Update(Microsoft.Xna.Framework.GameTime)
  commentId: M:MLEM.Ui.Elements.Element.Update(Microsoft.Xna.Framework.GameTime)
  parent: MLEM.Ui.Elements.Element
  isExternal: true
  name: Update(GameTime)
  nameWithType: Element.Update(GameTime)
  fullName: MLEM.Ui.Elements.Element.Update(Microsoft.Xna.Framework.GameTime)
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.Update(Microsoft.Xna.Framework.GameTime)
    name: Update
    nameWithType: Element.Update
    fullName: MLEM.Ui.Elements.Element.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: Microsoft.Xna.Framework.GameTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.Update(Microsoft.Xna.Framework.GameTime)
    name: Update
    nameWithType: Element.Update
    fullName: MLEM.Ui.Elements.Element.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: Microsoft.Xna.Framework.GameTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Paragraph.Update*
  commentId: Overload:MLEM.Ui.Elements.Paragraph.Update
  name: Update
  nameWithType: Paragraph.Update
  fullName: MLEM.Ui.Elements.Paragraph.Update
- uid: Microsoft.Xna.Framework.GameTime
  commentId: T:Microsoft.Xna.Framework.GameTime
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: GameTime
  nameWithType: GameTime
  fullName: Microsoft.Xna.Framework.GameTime
- uid: MLEM.Ui.Elements.Element.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single,Microsoft.Xna.Framework.Graphics.BlendState,Microsoft.Xna.Framework.Graphics.SamplerState,Microsoft.Xna.Framework.Matrix)
  commentId: M:MLEM.Ui.Elements.Element.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single,Microsoft.Xna.Framework.Graphics.BlendState,Microsoft.Xna.Framework.Graphics.SamplerState,Microsoft.Xna.Framework.Matrix)
  parent: MLEM.Ui.Elements.Element
  isExternal: true
  name: Draw(GameTime, SpriteBatch, Single, BlendState, SamplerState, Matrix)
  nameWithType: Element.Draw(GameTime, SpriteBatch, Single, BlendState, SamplerState, Matrix)
  fullName: MLEM.Ui.Elements.Element.Draw(Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch, System.Single, Microsoft.Xna.Framework.Graphics.BlendState, Microsoft.Xna.Framework.Graphics.SamplerState, Microsoft.Xna.Framework.Matrix)
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single,Microsoft.Xna.Framework.Graphics.BlendState,Microsoft.Xna.Framework.Graphics.SamplerState,Microsoft.Xna.Framework.Matrix)
    name: Draw
    nameWithType: Element.Draw
    fullName: MLEM.Ui.Elements.Element.Draw
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: Microsoft.Xna.Framework.GameTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
    name: SpriteBatch
    nameWithType: SpriteBatch
    fullName: Microsoft.Xna.Framework.Graphics.SpriteBatch
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Graphics.BlendState
    name: BlendState
    nameWithType: BlendState
    fullName: Microsoft.Xna.Framework.Graphics.BlendState
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Graphics.SamplerState
    name: SamplerState
    nameWithType: SamplerState
    fullName: Microsoft.Xna.Framework.Graphics.SamplerState
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Matrix
    name: Matrix
    nameWithType: Matrix
    fullName: Microsoft.Xna.Framework.Matrix
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single,Microsoft.Xna.Framework.Graphics.BlendState,Microsoft.Xna.Framework.Graphics.SamplerState,Microsoft.Xna.Framework.Matrix)
    name: Draw
    nameWithType: Element.Draw
    fullName: MLEM.Ui.Elements.Element.Draw
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: Microsoft.Xna.Framework.GameTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
    name: SpriteBatch
    nameWithType: SpriteBatch
    fullName: Microsoft.Xna.Framework.Graphics.SpriteBatch
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Graphics.BlendState
    name: BlendState
    nameWithType: BlendState
    fullName: Microsoft.Xna.Framework.Graphics.BlendState
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Graphics.SamplerState
    name: SamplerState
    nameWithType: SamplerState
    fullName: Microsoft.Xna.Framework.Graphics.SamplerState
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Matrix
    name: Matrix
    nameWithType: Matrix
    fullName: Microsoft.Xna.Framework.Matrix
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Paragraph.Draw*
  commentId: Overload:MLEM.Ui.Elements.Paragraph.Draw
  name: Draw
  nameWithType: Paragraph.Draw
  fullName: MLEM.Ui.Elements.Paragraph.Draw
- uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
  commentId: T:Microsoft.Xna.Framework.Graphics.SpriteBatch
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: SpriteBatch
  nameWithType: SpriteBatch
  fullName: Microsoft.Xna.Framework.Graphics.SpriteBatch
- uid: Microsoft.Xna.Framework.Graphics.BlendState
  commentId: T:Microsoft.Xna.Framework.Graphics.BlendState
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: BlendState
  nameWithType: BlendState
  fullName: Microsoft.Xna.Framework.Graphics.BlendState
- uid: Microsoft.Xna.Framework.Graphics.SamplerState
  commentId: T:Microsoft.Xna.Framework.Graphics.SamplerState
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: SamplerState
  nameWithType: SamplerState
  fullName: Microsoft.Xna.Framework.Graphics.SamplerState
- uid: Microsoft.Xna.Framework.Matrix
  commentId: T:Microsoft.Xna.Framework.Matrix
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Matrix
  nameWithType: Matrix
  fullName: Microsoft.Xna.Framework.Matrix
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
- uid: MLEM.Ui.Elements.Element.InitStyle(MLEM.Ui.Style.UiStyle)
  commentId: M:MLEM.Ui.Elements.Element.InitStyle(MLEM.Ui.Style.UiStyle)
  parent: MLEM.Ui.Elements.Element
  name: InitStyle(UiStyle)
  nameWithType: Element.InitStyle(UiStyle)
  fullName: MLEM.Ui.Elements.Element.InitStyle(MLEM.Ui.Style.UiStyle)
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.InitStyle(MLEM.Ui.Style.UiStyle)
    name: InitStyle
    nameWithType: Element.InitStyle
    fullName: MLEM.Ui.Elements.Element.InitStyle
  - name: (
    nameWithType: (
    fullName: (
  - uid: MLEM.Ui.Style.UiStyle
    name: UiStyle
    nameWithType: UiStyle
    fullName: MLEM.Ui.Style.UiStyle
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.InitStyle(MLEM.Ui.Style.UiStyle)
    name: InitStyle
    nameWithType: Element.InitStyle
    fullName: MLEM.Ui.Elements.Element.InitStyle
  - name: (
    nameWithType: (
    fullName: (
  - uid: MLEM.Ui.Style.UiStyle
    name: UiStyle
    nameWithType: UiStyle
    fullName: MLEM.Ui.Style.UiStyle
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Paragraph.InitStyle*
  commentId: Overload:MLEM.Ui.Elements.Paragraph.InitStyle
  name: InitStyle
  nameWithType: Paragraph.InitStyle
  fullName: MLEM.Ui.Elements.Paragraph.InitStyle
- uid: MLEM.Ui.Style.UiStyle
  commentId: T:MLEM.Ui.Style.UiStyle
  parent: MLEM.Ui.Style
  name: UiStyle
  nameWithType: UiStyle
  fullName: MLEM.Ui.Style.UiStyle
- uid: MLEM.Ui.Elements.Paragraph.ParseText*
  commentId: Overload:MLEM.Ui.Elements.Paragraph.ParseText
  name: ParseText
  nameWithType: Paragraph.ParseText
  fullName: MLEM.Ui.Elements.Paragraph.ParseText
