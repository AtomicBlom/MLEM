### YamlMime:ManagedReference
items:
- uid: MLEM.Extended.Extensions.NumberExtensions
  commentId: T:MLEM.Extended.Extensions.NumberExtensions
  id: NumberExtensions
  parent: MLEM.Extended.Extensions
  children:
  - MLEM.Extended.Extensions.NumberExtensions.ToExtended(MLEM.Misc.RectangleF)
  - MLEM.Extended.Extensions.NumberExtensions.ToMlem(MonoGame.Extended.RectangleF)
  langs:
  - csharp
  - vb
  name: NumberExtensions
  nameWithType: NumberExtensions
  fullName: MLEM.Extended.Extensions.NumberExtensions
  type: Class
  source:
    remote:
      path: MLEM.Extended/Extensions/NumberExtensions.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: NumberExtensions
    path: ../MLEM.Extended/Extensions/NumberExtensions.cs
    startLine: 3
  assemblies:
  - MLEM.Extended
  namespace: MLEM.Extended.Extensions
  syntax:
    content: public static class NumberExtensions
    content.vb: Public Module NumberExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: MLEM.Extended.Extensions.NumberExtensions.ToExtended(MLEM.Misc.RectangleF)
  commentId: M:MLEM.Extended.Extensions.NumberExtensions.ToExtended(MLEM.Misc.RectangleF)
  id: ToExtended(MLEM.Misc.RectangleF)
  isExtensionMethod: true
  parent: MLEM.Extended.Extensions.NumberExtensions
  langs:
  - csharp
  - vb
  name: ToExtended(RectangleF)
  nameWithType: NumberExtensions.ToExtended(RectangleF)
  fullName: MLEM.Extended.Extensions.NumberExtensions.ToExtended(MLEM.Misc.RectangleF)
  type: Method
  source:
    remote:
      path: MLEM.Extended/Extensions/NumberExtensions.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: ToExtended
    path: ../MLEM.Extended/Extensions/NumberExtensions.cs
    startLine: 5
  assemblies:
  - MLEM.Extended
  namespace: MLEM.Extended.Extensions
  syntax:
    content: public static RectangleF ToExtended(this RectangleF rect)
    parameters:
    - id: rect
      type: MLEM.Misc.RectangleF
    return:
      type: MonoGame.Extended.RectangleF
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToExtended(rect As RectangleF) As RectangleF
  overload: MLEM.Extended.Extensions.NumberExtensions.ToExtended*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MLEM.Extended.Extensions.NumberExtensions.ToMlem(MonoGame.Extended.RectangleF)
  commentId: M:MLEM.Extended.Extensions.NumberExtensions.ToMlem(MonoGame.Extended.RectangleF)
  id: ToMlem(MonoGame.Extended.RectangleF)
  isExtensionMethod: true
  parent: MLEM.Extended.Extensions.NumberExtensions
  langs:
  - csharp
  - vb
  name: ToMlem(RectangleF)
  nameWithType: NumberExtensions.ToMlem(RectangleF)
  fullName: MLEM.Extended.Extensions.NumberExtensions.ToMlem(MonoGame.Extended.RectangleF)
  type: Method
  source:
    remote:
      path: MLEM.Extended/Extensions/NumberExtensions.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: ToMlem
    path: ../MLEM.Extended/Extensions/NumberExtensions.cs
    startLine: 9
  assemblies:
  - MLEM.Extended
  namespace: MLEM.Extended.Extensions
  syntax:
    content: public static RectangleF ToMlem(this RectangleF rect)
    parameters:
    - id: rect
      type: MonoGame.Extended.RectangleF
    return:
      type: MLEM.Misc.RectangleF
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToMlem(rect As RectangleF) As RectangleF
  overload: MLEM.Extended.Extensions.NumberExtensions.ToMlem*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: MLEM.Extended.Extensions
  commentId: N:MLEM.Extended.Extensions
  name: MLEM.Extended.Extensions
  nameWithType: MLEM.Extended.Extensions
  fullName: MLEM.Extended.Extensions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Extended.Extensions.NumberExtensions.ToExtended*
  commentId: Overload:MLEM.Extended.Extensions.NumberExtensions.ToExtended
  name: ToExtended
  nameWithType: NumberExtensions.ToExtended
  fullName: MLEM.Extended.Extensions.NumberExtensions.ToExtended
- uid: MLEM.Misc.RectangleF
  commentId: T:MLEM.Misc.RectangleF
  parent: MLEM.Misc
  name: RectangleF
  nameWithType: RectangleF
  fullName: MLEM.Misc.RectangleF
- uid: MonoGame.Extended.RectangleF
  commentId: T:MonoGame.Extended.RectangleF
  parent: MonoGame.Extended
  isExternal: true
  name: RectangleF
  nameWithType: RectangleF
  fullName: MonoGame.Extended.RectangleF
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
- uid: MonoGame.Extended
  commentId: N:MonoGame.Extended
  isExternal: true
  name: MonoGame.Extended
  nameWithType: MonoGame.Extended
  fullName: MonoGame.Extended
- uid: MLEM.Extended.Extensions.NumberExtensions.ToMlem*
  commentId: Overload:MLEM.Extended.Extensions.NumberExtensions.ToMlem
  name: ToMlem
  nameWithType: NumberExtensions.ToMlem
  fullName: MLEM.Extended.Extensions.NumberExtensions.ToMlem
