### YamlMime:ManagedReference
items:
- uid: MLEM.Input.MouseExtensions
  commentId: T:MLEM.Input.MouseExtensions
  id: MouseExtensions
  parent: MLEM.Input
  children:
  - MLEM.Input.MouseExtensions.GetState(Microsoft.Xna.Framework.Input.MouseState,MLEM.Input.MouseButton)
  - MLEM.Input.MouseExtensions.MouseButtons
  langs:
  - csharp
  - vb
  name: MouseExtensions
  nameWithType: MouseExtensions
  fullName: MLEM.Input.MouseExtensions
  type: Class
  source:
    remote:
      path: MLEM/Input/MouseExtensions.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: MouseExtensions
    path: ../MLEM/Input/MouseExtensions.cs
    startLine: 9
  assemblies:
  - MLEM
  namespace: MLEM.Input
  summary: "\nA set of extension methods for dealing with <xref href=\"MLEM.Input.MouseButton\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Microsoft.Xna.Framework.Input.Mouse\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public static class MouseExtensions
    content.vb: Public Module MouseExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: MLEM.Input.MouseExtensions.MouseButtons
  commentId: F:MLEM.Input.MouseExtensions.MouseButtons
  id: MouseButtons
  parent: MLEM.Input.MouseExtensions
  langs:
  - csharp
  - vb
  name: MouseButtons
  nameWithType: MouseExtensions.MouseButtons
  fullName: MLEM.Input.MouseExtensions.MouseButtons
  type: Field
  source:
    remote:
      path: MLEM/Input/MouseExtensions.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: MouseButtons
    path: ../MLEM/Input/MouseExtensions.cs
    startLine: 14
  assemblies:
  - MLEM
  namespace: MLEM.Input
  summary: "\nAll enum values of <xref href=\"MLEM.Input.MouseButton\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public static readonly MouseButton[] MouseButtons
    return:
      type: MLEM.Input.MouseButton[]
    content.vb: Public Shared ReadOnly MouseButtons As MouseButton()
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: MLEM.Input.MouseExtensions.GetState(Microsoft.Xna.Framework.Input.MouseState,MLEM.Input.MouseButton)
  commentId: M:MLEM.Input.MouseExtensions.GetState(Microsoft.Xna.Framework.Input.MouseState,MLEM.Input.MouseButton)
  id: GetState(Microsoft.Xna.Framework.Input.MouseState,MLEM.Input.MouseButton)
  isExtensionMethod: true
  parent: MLEM.Input.MouseExtensions
  langs:
  - csharp
  - vb
  name: GetState(MouseState, MouseButton)
  nameWithType: MouseExtensions.GetState(MouseState, MouseButton)
  fullName: MLEM.Input.MouseExtensions.GetState(Microsoft.Xna.Framework.Input.MouseState, MLEM.Input.MouseButton)
  type: Method
  source:
    remote:
      path: MLEM/Input/MouseExtensions.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: GetState
    path: ../MLEM/Input/MouseExtensions.cs
    startLine: 23
  assemblies:
  - MLEM
  namespace: MLEM.Input
  summary: "\nReturns the <xref href=\"Microsoft.Xna.Framework.Input.ButtonState\" data-throw-if-not-resolved=\"false\"></xref> of the given mouse button.\n"
  example: []
  syntax:
    content: public static ButtonState GetState(this MouseState state, MouseButton button)
    parameters:
    - id: state
      type: Microsoft.Xna.Framework.Input.MouseState
      description: The mouse&apos;s current state
    - id: button
      type: MLEM.Input.MouseButton
      description: The button whose state to query
    return:
      type: Microsoft.Xna.Framework.Input.ButtonState
      description: The state of the button
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetState(state As MouseState, button As MouseButton) As ButtonState
  overload: MLEM.Input.MouseExtensions.GetState*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: If a mouse button out of range is passed
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: MLEM.Input.MouseButton
  commentId: T:MLEM.Input.MouseButton
  parent: MLEM.Input
  name: MouseButton
  nameWithType: MouseButton
  fullName: MLEM.Input.MouseButton
- uid: Microsoft.Xna.Framework.Input.Mouse
  commentId: T:Microsoft.Xna.Framework.Input.Mouse
  isExternal: true
- uid: MLEM.Input
  commentId: N:MLEM.Input
  name: MLEM.Input
  nameWithType: MLEM.Input
  fullName: MLEM.Input
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Input.MouseButton[]
  isExternal: true
  name: MouseButton[]
  nameWithType: MouseButton[]
  fullName: MLEM.Input.MouseButton[]
  nameWithType.vb: MouseButton()
  fullName.vb: MLEM.Input.MouseButton()
  name.vb: MouseButton()
  spec.csharp:
  - uid: MLEM.Input.MouseButton
    name: MouseButton
    nameWithType: MouseButton
    fullName: MLEM.Input.MouseButton
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: MLEM.Input.MouseButton
    name: MouseButton
    nameWithType: MouseButton
    fullName: MLEM.Input.MouseButton
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.Xna.Framework.Input.ButtonState
  commentId: T:Microsoft.Xna.Framework.Input.ButtonState
  parent: Microsoft.Xna.Framework.Input
  isExternal: true
  name: ButtonState
  nameWithType: ButtonState
  fullName: Microsoft.Xna.Framework.Input.ButtonState
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: MLEM.Input.MouseExtensions.GetState*
  commentId: Overload:MLEM.Input.MouseExtensions.GetState
  name: GetState
  nameWithType: MouseExtensions.GetState
  fullName: MLEM.Input.MouseExtensions.GetState
- uid: Microsoft.Xna.Framework.Input.MouseState
  commentId: T:Microsoft.Xna.Framework.Input.MouseState
  parent: Microsoft.Xna.Framework.Input
  isExternal: true
  name: MouseState
  nameWithType: MouseState
  fullName: Microsoft.Xna.Framework.Input.MouseState
- uid: Microsoft.Xna.Framework.Input
  commentId: N:Microsoft.Xna.Framework.Input
  isExternal: true
  name: Microsoft.Xna.Framework.Input
  nameWithType: Microsoft.Xna.Framework.Input
  fullName: Microsoft.Xna.Framework.Input
