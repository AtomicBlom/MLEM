### YamlMime:ManagedReference
items:
- uid: MLEM.Ui.Elements.Element
  commentId: T:MLEM.Ui.Elements.Element
  id: Element
  parent: MLEM.Ui.Elements
  children:
  - MLEM.Ui.Elements.Element.#ctor(MLEM.Ui.Anchor,Microsoft.Xna.Framework.Vector2)
  - MLEM.Ui.Elements.Element.ActionSound
  - MLEM.Ui.Elements.Element.AddChild``1(``0,System.Int32)
  - MLEM.Ui.Elements.Element.Anchor
  - MLEM.Ui.Elements.Element.AndChildren(System.Action{MLEM.Ui.Elements.Element})
  - MLEM.Ui.Elements.Element.Area
  - MLEM.Ui.Elements.Element.CalcActualSize(MLEM.Misc.RectangleF)
  - MLEM.Ui.Elements.Element.CanAutoAnchorsAttach
  - MLEM.Ui.Elements.Element.CanBeMoused
  - MLEM.Ui.Elements.Element.CanBePressed
  - MLEM.Ui.Elements.Element.CanBeSelected
  - MLEM.Ui.Elements.Element.ChildPaddedArea
  - MLEM.Ui.Elements.Element.ChildPadding
  - MLEM.Ui.Elements.Element.Children
  - MLEM.Ui.Elements.Element.Controls
  - MLEM.Ui.Elements.Element.DisplayArea
  - MLEM.Ui.Elements.Element.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single,Microsoft.Xna.Framework.Graphics.BlendState,Microsoft.Xna.Framework.Graphics.SamplerState,Microsoft.Xna.Framework.Matrix)
  - MLEM.Ui.Elements.Element.DrawAlpha
  - MLEM.Ui.Elements.Element.DrawEarly(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single,Microsoft.Xna.Framework.Graphics.BlendState,Microsoft.Xna.Framework.Graphics.SamplerState,Microsoft.Xna.Framework.Matrix)
  - MLEM.Ui.Elements.Element.ForceUpdateArea
  - MLEM.Ui.Elements.Element.ForceUpdateSortedChildren
  - MLEM.Ui.Elements.Element.GetAreaForAutoAnchors
  - MLEM.Ui.Elements.Element.GetChildren(System.Func{MLEM.Ui.Elements.Element,System.Boolean},System.Boolean,System.Boolean)
  - MLEM.Ui.Elements.Element.GetChildren``1(System.Func{``0,System.Boolean},System.Boolean,System.Boolean)
  - MLEM.Ui.Elements.Element.GetElementUnderPos(Microsoft.Xna.Framework.Vector2)
  - MLEM.Ui.Elements.Element.GetGamepadNextElement
  - MLEM.Ui.Elements.Element.GetLowestChild(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  - MLEM.Ui.Elements.Element.GetLowestOlderSibling(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  - MLEM.Ui.Elements.Element.GetOlderSibling(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  - MLEM.Ui.Elements.Element.GetParentTree
  - MLEM.Ui.Elements.Element.GetRelevantChildren
  - MLEM.Ui.Elements.Element.GetRightmostChild(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  - MLEM.Ui.Elements.Element.GetSiblings(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  - MLEM.Ui.Elements.Element.GetTabNextElement
  - MLEM.Ui.Elements.Element.InitStyle(MLEM.Ui.Style.UiStyle)
  - MLEM.Ui.Elements.Element.Input
  - MLEM.Ui.Elements.Element.IsHidden
  - MLEM.Ui.Elements.Element.IsMouseOver
  - MLEM.Ui.Elements.Element.IsSelected
  - MLEM.Ui.Elements.Element.OnAreaUpdated
  - MLEM.Ui.Elements.Element.OnChildAdded
  - MLEM.Ui.Elements.Element.OnChildRemoved
  - MLEM.Ui.Elements.Element.OnDeselected
  - MLEM.Ui.Elements.Element.OnDrawn
  - MLEM.Ui.Elements.Element.OnMousedElementChanged
  - MLEM.Ui.Elements.Element.OnMouseEnter
  - MLEM.Ui.Elements.Element.OnMouseExit
  - MLEM.Ui.Elements.Element.OnPressed
  - MLEM.Ui.Elements.Element.OnSecondaryPressed
  - MLEM.Ui.Elements.Element.OnSelected
  - MLEM.Ui.Elements.Element.OnSelectedElementChanged
  - MLEM.Ui.Elements.Element.OnTextInput
  - MLEM.Ui.Elements.Element.OnUpdated
  - MLEM.Ui.Elements.Element.Padding
  - MLEM.Ui.Elements.Element.Parent
  - MLEM.Ui.Elements.Element.PositionOffset
  - MLEM.Ui.Elements.Element.Priority
  - MLEM.Ui.Elements.Element.RemoveChild(MLEM.Ui.Elements.Element)
  - MLEM.Ui.Elements.Element.RemoveChildren(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  - MLEM.Ui.Elements.Element.ReorderChildren(System.Comparison{MLEM.Ui.Elements.Element})
  - MLEM.Ui.Elements.Element.ReverseChildren(System.Int32,System.Nullable{System.Int32})
  - MLEM.Ui.Elements.Element.Root
  - MLEM.Ui.Elements.Element.Scale
  - MLEM.Ui.Elements.Element.ScaledChildPadding
  - MLEM.Ui.Elements.Element.ScaledOffset
  - MLEM.Ui.Elements.Element.ScaledPadding
  - MLEM.Ui.Elements.Element.ScaledScrollOffset
  - MLEM.Ui.Elements.Element.ScaledSize
  - MLEM.Ui.Elements.Element.ScrollOffset
  - MLEM.Ui.Elements.Element.SecondActionSound
  - MLEM.Ui.Elements.Element.SelectionIndicator
  - MLEM.Ui.Elements.Element.SetAreaDirty
  - MLEM.Ui.Elements.Element.SetHeightBasedOnChildren
  - MLEM.Ui.Elements.Element.SetSortedChildrenDirty
  - MLEM.Ui.Elements.Element.SetWidthBasedOnChildren
  - MLEM.Ui.Elements.Element.Size
  - MLEM.Ui.Elements.Element.SortedChildren
  - MLEM.Ui.Elements.Element.System
  - MLEM.Ui.Elements.Element.UnscrolledArea
  - MLEM.Ui.Elements.Element.Update(Microsoft.Xna.Framework.GameTime)
  - MLEM.Ui.Elements.Element.UpdateAreaIfDirty
  - MLEM.Ui.Elements.Element.UpdateSortedChildrenIfDirty
  langs:
  - csharp
  - vb
  name: Element
  nameWithType: Element
  fullName: MLEM.Ui.Elements.Element
  type: Class
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: Element
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 15
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: 'public abstract class Element : GenericDataHolder'
    content.vb: >-
      Public MustInherit Class Element

          Inherits GenericDataHolder
  inheritance:
  - System.Object
  - MLEM.Misc.GenericDataHolder
  derivedClasses:
  - MLEM.Ui.Elements.Button
  - MLEM.Ui.Elements.Checkbox
  - MLEM.Ui.Elements.Group
  - MLEM.Ui.Elements.Image
  - MLEM.Ui.Elements.Panel
  - MLEM.Ui.Elements.Paragraph
  - MLEM.Ui.Elements.Paragraph.Link
  - MLEM.Ui.Elements.ProgressBar
  - MLEM.Ui.Elements.ScrollBar
  - MLEM.Ui.Elements.TextField
  - MLEM.Ui.Elements.VerticalSpace
  inheritedMembers:
  - MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
  - MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  - MLEM.Misc.GenericDataHolder.GetDataKeys
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: MLEM.Ui.Elements.Element.Children
  commentId: F:MLEM.Ui.Elements.Element.Children
  id: Children
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: Children
  nameWithType: Element.Children
  fullName: MLEM.Ui.Elements.Element.Children
  type: Field
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: Children
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 17
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: protected readonly List<Element> Children
    return:
      type: System.Collections.Generic.List{MLEM.Ui.Elements.Element}
    content.vb: Protected ReadOnly Children As List(Of Element)
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: MLEM.Ui.Elements.Element.SortedChildren
  commentId: P:MLEM.Ui.Elements.Element.SortedChildren
  id: SortedChildren
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: SortedChildren
  nameWithType: Element.SortedChildren
  fullName: MLEM.Ui.Elements.Element.SortedChildren
  type: Property
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: SortedChildren
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 19
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: protected List<Element> SortedChildren { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{MLEM.Ui.Elements.Element}
    content.vb: Protected ReadOnly Property SortedChildren As List(Of Element)
  overload: MLEM.Ui.Elements.Element.SortedChildren*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: MLEM.Ui.Elements.Element.System
  commentId: P:MLEM.Ui.Elements.Element.System
  id: System
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: System
  nameWithType: Element.System
  fullName: MLEM.Ui.Elements.Element.System
  type: Property
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: System
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 28
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public UiSystem System { get; }
    parameters: []
    return:
      type: MLEM.Ui.UiSystem
    content.vb: Public ReadOnly Property System As UiSystem
  overload: MLEM.Ui.Elements.Element.System*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: MLEM.Ui.Elements.Element.Controls
  commentId: F:MLEM.Ui.Elements.Element.Controls
  id: Controls
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: Controls
  nameWithType: Element.Controls
  fullName: MLEM.Ui.Elements.Element.Controls
  type: Field
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: Controls
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 37
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public UiControls Controls
    return:
      type: MLEM.Ui.UiControls
    content.vb: Public Controls As UiControls
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Element.Input
  commentId: P:MLEM.Ui.Elements.Element.Input
  id: Input
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: Input
  nameWithType: Element.Input
  fullName: MLEM.Ui.Elements.Element.Input
  type: Property
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: Input
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 38
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: protected InputHandler Input { get; }
    parameters: []
    return:
      type: MLEM.Input.InputHandler
    content.vb: Protected ReadOnly Property Input As InputHandler
  overload: MLEM.Ui.Elements.Element.Input*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: MLEM.Ui.Elements.Element.Parent
  commentId: P:MLEM.Ui.Elements.Element.Parent
  id: Parent
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: Parent
  nameWithType: Element.Parent
  fullName: MLEM.Ui.Elements.Element.Parent
  type: Property
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: Parent
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 39
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public Element Parent { get; }
    parameters: []
    return:
      type: MLEM.Ui.Elements.Element
    content.vb: Public ReadOnly Property Parent As Element
  overload: MLEM.Ui.Elements.Element.Parent*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: MLEM.Ui.Elements.Element.Root
  commentId: P:MLEM.Ui.Elements.Element.Root
  id: Root
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: Root
  nameWithType: Element.Root
  fullName: MLEM.Ui.Elements.Element.Root
  type: Property
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: Root
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 40
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public RootElement Root { get; }
    parameters: []
    return:
      type: MLEM.Ui.RootElement
    content.vb: Public ReadOnly Property Root As RootElement
  overload: MLEM.Ui.Elements.Element.Root*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: MLEM.Ui.Elements.Element.Scale
  commentId: P:MLEM.Ui.Elements.Element.Scale
  id: Scale
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: Scale
  nameWithType: Element.Scale
  fullName: MLEM.Ui.Elements.Element.Scale
  type: Property
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: Scale
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 41
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public float Scale { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Scale As Single
  overload: MLEM.Ui.Elements.Element.Scale*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: MLEM.Ui.Elements.Element.Anchor
  commentId: P:MLEM.Ui.Elements.Element.Anchor
  id: Anchor
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: Anchor
  nameWithType: Element.Anchor
  fullName: MLEM.Ui.Elements.Element.Anchor
  type: Property
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: Anchor
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 44
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public Anchor Anchor { get; set; }
    parameters: []
    return:
      type: MLEM.Ui.Anchor
    content.vb: Public Property Anchor As Anchor
  overload: MLEM.Ui.Elements.Element.Anchor*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Element.Size
  commentId: P:MLEM.Ui.Elements.Element.Size
  id: Size
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: Size
  nameWithType: Element.Size
  fullName: MLEM.Ui.Elements.Element.Size
  type: Property
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: Size
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 55
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public Vector2 Size { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Vector2
    content.vb: Public Property Size As Vector2
  overload: MLEM.Ui.Elements.Element.Size*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Element.ScaledSize
  commentId: P:MLEM.Ui.Elements.Element.ScaledSize
  id: ScaledSize
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: ScaledSize
  nameWithType: Element.ScaledSize
  fullName: MLEM.Ui.Elements.Element.ScaledSize
  type: Property
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: ScaledSize
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 64
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public Vector2 ScaledSize { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Vector2
    content.vb: Public ReadOnly Property ScaledSize As Vector2
  overload: MLEM.Ui.Elements.Element.ScaledSize*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: MLEM.Ui.Elements.Element.PositionOffset
  commentId: P:MLEM.Ui.Elements.Element.PositionOffset
  id: PositionOffset
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: PositionOffset
  nameWithType: Element.PositionOffset
  fullName: MLEM.Ui.Elements.Element.PositionOffset
  type: Property
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: PositionOffset
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 67
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public Vector2 PositionOffset { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Vector2
    content.vb: Public Property PositionOffset As Vector2
  overload: MLEM.Ui.Elements.Element.PositionOffset*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Element.ScaledOffset
  commentId: P:MLEM.Ui.Elements.Element.ScaledOffset
  id: ScaledOffset
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: ScaledOffset
  nameWithType: Element.ScaledOffset
  fullName: MLEM.Ui.Elements.Element.ScaledOffset
  type: Property
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: ScaledOffset
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 76
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public Vector2 ScaledOffset { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Vector2
    content.vb: Public ReadOnly Property ScaledOffset As Vector2
  overload: MLEM.Ui.Elements.Element.ScaledOffset*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: MLEM.Ui.Elements.Element.Padding
  commentId: F:MLEM.Ui.Elements.Element.Padding
  id: Padding
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: Padding
  nameWithType: Element.Padding
  fullName: MLEM.Ui.Elements.Element.Padding
  type: Field
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: Padding
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 78
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public Padding Padding
    return:
      type: MLEM.Misc.Padding
    content.vb: Public Padding As Padding
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Element.ScaledPadding
  commentId: P:MLEM.Ui.Elements.Element.ScaledPadding
  id: ScaledPadding
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: ScaledPadding
  nameWithType: Element.ScaledPadding
  fullName: MLEM.Ui.Elements.Element.ScaledPadding
  type: Property
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: ScaledPadding
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 79
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public Padding ScaledPadding { get; }
    parameters: []
    return:
      type: MLEM.Misc.Padding
    content.vb: Public ReadOnly Property ScaledPadding As Padding
  overload: MLEM.Ui.Elements.Element.ScaledPadding*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: MLEM.Ui.Elements.Element.ChildPadding
  commentId: P:MLEM.Ui.Elements.Element.ChildPadding
  id: ChildPadding
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: ChildPadding
  nameWithType: Element.ChildPadding
  fullName: MLEM.Ui.Elements.Element.ChildPadding
  type: Property
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: ChildPadding
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 82
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public Padding ChildPadding { get; set; }
    parameters: []
    return:
      type: MLEM.Misc.Padding
    content.vb: Public Property ChildPadding As Padding
  overload: MLEM.Ui.Elements.Element.ChildPadding*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Element.ScaledChildPadding
  commentId: P:MLEM.Ui.Elements.Element.ScaledChildPadding
  id: ScaledChildPadding
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: ScaledChildPadding
  nameWithType: Element.ScaledChildPadding
  fullName: MLEM.Ui.Elements.Element.ScaledChildPadding
  type: Property
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: ScaledChildPadding
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 91
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public Padding ScaledChildPadding { get; }
    parameters: []
    return:
      type: MLEM.Misc.Padding
    content.vb: Public ReadOnly Property ScaledChildPadding As Padding
  overload: MLEM.Ui.Elements.Element.ScaledChildPadding*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: MLEM.Ui.Elements.Element.ChildPaddedArea
  commentId: P:MLEM.Ui.Elements.Element.ChildPaddedArea
  id: ChildPaddedArea
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: ChildPaddedArea
  nameWithType: Element.ChildPaddedArea
  fullName: MLEM.Ui.Elements.Element.ChildPaddedArea
  type: Property
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: ChildPaddedArea
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 92
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public RectangleF ChildPaddedArea { get; }
    parameters: []
    return:
      type: MLEM.Misc.RectangleF
    content.vb: Public ReadOnly Property ChildPaddedArea As RectangleF
  overload: MLEM.Ui.Elements.Element.ChildPaddedArea*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: MLEM.Ui.Elements.Element.UnscrolledArea
  commentId: P:MLEM.Ui.Elements.Element.UnscrolledArea
  id: UnscrolledArea
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: UnscrolledArea
  nameWithType: Element.UnscrolledArea
  fullName: MLEM.Ui.Elements.Element.UnscrolledArea
  type: Property
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: UnscrolledArea
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 95
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public RectangleF UnscrolledArea { get; }
    parameters: []
    return:
      type: MLEM.Misc.RectangleF
    content.vb: Public ReadOnly Property UnscrolledArea As RectangleF
  overload: MLEM.Ui.Elements.Element.UnscrolledArea*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: MLEM.Ui.Elements.Element.Area
  commentId: P:MLEM.Ui.Elements.Element.Area
  id: Area
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: Area
  nameWithType: Element.Area
  fullName: MLEM.Ui.Elements.Element.Area
  type: Property
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: Area
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 102
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public RectangleF Area { get; }
    parameters: []
    return:
      type: MLEM.Misc.RectangleF
    content.vb: Public ReadOnly Property Area As RectangleF
  overload: MLEM.Ui.Elements.Element.Area*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: MLEM.Ui.Elements.Element.DisplayArea
  commentId: P:MLEM.Ui.Elements.Element.DisplayArea
  id: DisplayArea
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: DisplayArea
  nameWithType: Element.DisplayArea
  fullName: MLEM.Ui.Elements.Element.DisplayArea
  type: Property
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: DisplayArea
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 103
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public RectangleF DisplayArea { get; }
    parameters: []
    return:
      type: MLEM.Misc.RectangleF
    content.vb: Public ReadOnly Property DisplayArea As RectangleF
  overload: MLEM.Ui.Elements.Element.DisplayArea*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: MLEM.Ui.Elements.Element.ScrollOffset
  commentId: F:MLEM.Ui.Elements.Element.ScrollOffset
  id: ScrollOffset
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: ScrollOffset
  nameWithType: Element.ScrollOffset
  fullName: MLEM.Ui.Elements.Element.ScrollOffset
  type: Field
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: ScrollOffset
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 105
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public Vector2 ScrollOffset
    return:
      type: Microsoft.Xna.Framework.Vector2
    content.vb: Public ScrollOffset As Vector2
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Element.ScaledScrollOffset
  commentId: P:MLEM.Ui.Elements.Element.ScaledScrollOffset
  id: ScaledScrollOffset
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: ScaledScrollOffset
  nameWithType: Element.ScaledScrollOffset
  fullName: MLEM.Ui.Elements.Element.ScaledScrollOffset
  type: Property
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: ScaledScrollOffset
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 106
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public Vector2 ScaledScrollOffset { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Vector2
    content.vb: Public ReadOnly Property ScaledScrollOffset As Vector2
  overload: MLEM.Ui.Elements.Element.ScaledScrollOffset*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: MLEM.Ui.Elements.Element.IsHidden
  commentId: P:MLEM.Ui.Elements.Element.IsHidden
  id: IsHidden
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: IsHidden
  nameWithType: Element.IsHidden
  fullName: MLEM.Ui.Elements.Element.IsHidden
  type: Property
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: IsHidden
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 109
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public bool IsHidden { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsHidden As Boolean
  overload: MLEM.Ui.Elements.Element.IsHidden*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Element.Priority
  commentId: P:MLEM.Ui.Elements.Element.Priority
  id: Priority
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: Priority
  nameWithType: Element.Priority
  fullName: MLEM.Ui.Elements.Element.Priority
  type: Property
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: Priority
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 120
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public int Priority { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Priority As Integer
  overload: MLEM.Ui.Elements.Element.Priority*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Element.CanBeSelected
  commentId: F:MLEM.Ui.Elements.Element.CanBeSelected
  id: CanBeSelected
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: CanBeSelected
  nameWithType: Element.CanBeSelected
  fullName: MLEM.Ui.Elements.Element.CanBeSelected
  type: Field
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: CanBeSelected
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 129
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public bool CanBeSelected
    return:
      type: System.Boolean
    content.vb: Public CanBeSelected As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Element.CanBeMoused
  commentId: F:MLEM.Ui.Elements.Element.CanBeMoused
  id: CanBeMoused
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: CanBeMoused
  nameWithType: Element.CanBeMoused
  fullName: MLEM.Ui.Elements.Element.CanBeMoused
  type: Field
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: CanBeMoused
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 130
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public bool CanBeMoused
    return:
      type: System.Boolean
    content.vb: Public CanBeMoused As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Element.CanBePressed
  commentId: F:MLEM.Ui.Elements.Element.CanBePressed
  id: CanBePressed
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: CanBePressed
  nameWithType: Element.CanBePressed
  fullName: MLEM.Ui.Elements.Element.CanBePressed
  type: Field
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: CanBePressed
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 131
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public bool CanBePressed
    return:
      type: System.Boolean
    content.vb: Public CanBePressed As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Element.CanAutoAnchorsAttach
  commentId: F:MLEM.Ui.Elements.Element.CanAutoAnchorsAttach
  id: CanAutoAnchorsAttach
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: CanAutoAnchorsAttach
  nameWithType: Element.CanAutoAnchorsAttach
  fullName: MLEM.Ui.Elements.Element.CanAutoAnchorsAttach
  type: Field
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: CanAutoAnchorsAttach
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 132
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public bool CanAutoAnchorsAttach
    return:
      type: System.Boolean
    content.vb: Public CanAutoAnchorsAttach As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Element.SetHeightBasedOnChildren
  commentId: F:MLEM.Ui.Elements.Element.SetHeightBasedOnChildren
  id: SetHeightBasedOnChildren
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: SetHeightBasedOnChildren
  nameWithType: Element.SetHeightBasedOnChildren
  fullName: MLEM.Ui.Elements.Element.SetHeightBasedOnChildren
  type: Field
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: SetHeightBasedOnChildren
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 133
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public bool SetHeightBasedOnChildren
    return:
      type: System.Boolean
    content.vb: Public SetHeightBasedOnChildren As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Element.SetWidthBasedOnChildren
  commentId: F:MLEM.Ui.Elements.Element.SetWidthBasedOnChildren
  id: SetWidthBasedOnChildren
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: SetWidthBasedOnChildren
  nameWithType: Element.SetWidthBasedOnChildren
  fullName: MLEM.Ui.Elements.Element.SetWidthBasedOnChildren
  type: Field
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: SetWidthBasedOnChildren
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 134
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public bool SetWidthBasedOnChildren
    return:
      type: System.Boolean
    content.vb: Public SetWidthBasedOnChildren As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Element.DrawAlpha
  commentId: F:MLEM.Ui.Elements.Element.DrawAlpha
  id: DrawAlpha
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: DrawAlpha
  nameWithType: Element.DrawAlpha
  fullName: MLEM.Ui.Elements.Element.DrawAlpha
  type: Field
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: DrawAlpha
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 135
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public float DrawAlpha
    return:
      type: System.Single
    content.vb: Public DrawAlpha As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Element.IsMouseOver
  commentId: P:MLEM.Ui.Elements.Element.IsMouseOver
  id: IsMouseOver
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: IsMouseOver
  nameWithType: Element.IsMouseOver
  fullName: MLEM.Ui.Elements.Element.IsMouseOver
  type: Property
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: IsMouseOver
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 137
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public bool IsMouseOver { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsMouseOver As Boolean
  overload: MLEM.Ui.Elements.Element.IsMouseOver*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: MLEM.Ui.Elements.Element.IsSelected
  commentId: P:MLEM.Ui.Elements.Element.IsSelected
  id: IsSelected
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: IsSelected
  nameWithType: Element.IsSelected
  fullName: MLEM.Ui.Elements.Element.IsSelected
  type: Property
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: IsSelected
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 138
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public bool IsSelected { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsSelected As Boolean
  overload: MLEM.Ui.Elements.Element.IsSelected*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: MLEM.Ui.Elements.Element.OnDrawn
  commentId: F:MLEM.Ui.Elements.Element.OnDrawn
  id: OnDrawn
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: OnDrawn
  nameWithType: Element.OnDrawn
  fullName: MLEM.Ui.Elements.Element.OnDrawn
  type: Field
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: OnDrawn
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 140
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public Element.DrawCallback OnDrawn
    return:
      type: MLEM.Ui.Elements.Element.DrawCallback
    content.vb: Public OnDrawn As Element.DrawCallback
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Element.OnUpdated
  commentId: F:MLEM.Ui.Elements.Element.OnUpdated
  id: OnUpdated
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: OnUpdated
  nameWithType: Element.OnUpdated
  fullName: MLEM.Ui.Elements.Element.OnUpdated
  type: Field
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: OnUpdated
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 141
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public Element.TimeCallback OnUpdated
    return:
      type: MLEM.Ui.Elements.Element.TimeCallback
    content.vb: Public OnUpdated As Element.TimeCallback
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Element.OnPressed
  commentId: F:MLEM.Ui.Elements.Element.OnPressed
  id: OnPressed
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: OnPressed
  nameWithType: Element.OnPressed
  fullName: MLEM.Ui.Elements.Element.OnPressed
  type: Field
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: OnPressed
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 142
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public Element.GenericCallback OnPressed
    return:
      type: MLEM.Ui.Elements.Element.GenericCallback
    content.vb: Public OnPressed As Element.GenericCallback
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Element.OnSecondaryPressed
  commentId: F:MLEM.Ui.Elements.Element.OnSecondaryPressed
  id: OnSecondaryPressed
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: OnSecondaryPressed
  nameWithType: Element.OnSecondaryPressed
  fullName: MLEM.Ui.Elements.Element.OnSecondaryPressed
  type: Field
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: OnSecondaryPressed
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 143
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public Element.GenericCallback OnSecondaryPressed
    return:
      type: MLEM.Ui.Elements.Element.GenericCallback
    content.vb: Public OnSecondaryPressed As Element.GenericCallback
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Element.OnSelected
  commentId: F:MLEM.Ui.Elements.Element.OnSelected
  id: OnSelected
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: OnSelected
  nameWithType: Element.OnSelected
  fullName: MLEM.Ui.Elements.Element.OnSelected
  type: Field
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: OnSelected
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 144
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public Element.GenericCallback OnSelected
    return:
      type: MLEM.Ui.Elements.Element.GenericCallback
    content.vb: Public OnSelected As Element.GenericCallback
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Element.OnDeselected
  commentId: F:MLEM.Ui.Elements.Element.OnDeselected
  id: OnDeselected
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: OnDeselected
  nameWithType: Element.OnDeselected
  fullName: MLEM.Ui.Elements.Element.OnDeselected
  type: Field
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: OnDeselected
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 145
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public Element.GenericCallback OnDeselected
    return:
      type: MLEM.Ui.Elements.Element.GenericCallback
    content.vb: Public OnDeselected As Element.GenericCallback
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Element.OnMouseEnter
  commentId: F:MLEM.Ui.Elements.Element.OnMouseEnter
  id: OnMouseEnter
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: OnMouseEnter
  nameWithType: Element.OnMouseEnter
  fullName: MLEM.Ui.Elements.Element.OnMouseEnter
  type: Field
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: OnMouseEnter
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 146
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public Element.GenericCallback OnMouseEnter
    return:
      type: MLEM.Ui.Elements.Element.GenericCallback
    content.vb: Public OnMouseEnter As Element.GenericCallback
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Element.OnMouseExit
  commentId: F:MLEM.Ui.Elements.Element.OnMouseExit
  id: OnMouseExit
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: OnMouseExit
  nameWithType: Element.OnMouseExit
  fullName: MLEM.Ui.Elements.Element.OnMouseExit
  type: Field
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: OnMouseExit
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 147
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public Element.GenericCallback OnMouseExit
    return:
      type: MLEM.Ui.Elements.Element.GenericCallback
    content.vb: Public OnMouseExit As Element.GenericCallback
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Element.OnTextInput
  commentId: F:MLEM.Ui.Elements.Element.OnTextInput
  id: OnTextInput
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: OnTextInput
  nameWithType: Element.OnTextInput
  fullName: MLEM.Ui.Elements.Element.OnTextInput
  type: Field
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: OnTextInput
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 148
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public Element.TextInputCallback OnTextInput
    return:
      type: MLEM.Ui.Elements.Element.TextInputCallback
    content.vb: Public OnTextInput As Element.TextInputCallback
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Element.OnAreaUpdated
  commentId: F:MLEM.Ui.Elements.Element.OnAreaUpdated
  id: OnAreaUpdated
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: OnAreaUpdated
  nameWithType: Element.OnAreaUpdated
  fullName: MLEM.Ui.Elements.Element.OnAreaUpdated
  type: Field
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: OnAreaUpdated
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 149
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public Element.GenericCallback OnAreaUpdated
    return:
      type: MLEM.Ui.Elements.Element.GenericCallback
    content.vb: Public OnAreaUpdated As Element.GenericCallback
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Element.OnMousedElementChanged
  commentId: F:MLEM.Ui.Elements.Element.OnMousedElementChanged
  id: OnMousedElementChanged
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: OnMousedElementChanged
  nameWithType: Element.OnMousedElementChanged
  fullName: MLEM.Ui.Elements.Element.OnMousedElementChanged
  type: Field
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: OnMousedElementChanged
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 150
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public Element.OtherElementCallback OnMousedElementChanged
    return:
      type: MLEM.Ui.Elements.Element.OtherElementCallback
    content.vb: Public OnMousedElementChanged As Element.OtherElementCallback
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Element.OnSelectedElementChanged
  commentId: F:MLEM.Ui.Elements.Element.OnSelectedElementChanged
  id: OnSelectedElementChanged
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: OnSelectedElementChanged
  nameWithType: Element.OnSelectedElementChanged
  fullName: MLEM.Ui.Elements.Element.OnSelectedElementChanged
  type: Field
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: OnSelectedElementChanged
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 151
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public Element.OtherElementCallback OnSelectedElementChanged
    return:
      type: MLEM.Ui.Elements.Element.OtherElementCallback
    content.vb: Public OnSelectedElementChanged As Element.OtherElementCallback
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Element.GetTabNextElement
  commentId: F:MLEM.Ui.Elements.Element.GetTabNextElement
  id: GetTabNextElement
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: GetTabNextElement
  nameWithType: Element.GetTabNextElement
  fullName: MLEM.Ui.Elements.Element.GetTabNextElement
  type: Field
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: GetTabNextElement
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 152
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public Element.TabNextElementCallback GetTabNextElement
    return:
      type: MLEM.Ui.Elements.Element.TabNextElementCallback
    content.vb: Public GetTabNextElement As Element.TabNextElementCallback
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Element.GetGamepadNextElement
  commentId: F:MLEM.Ui.Elements.Element.GetGamepadNextElement
  id: GetGamepadNextElement
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: GetGamepadNextElement
  nameWithType: Element.GetGamepadNextElement
  fullName: MLEM.Ui.Elements.Element.GetGamepadNextElement
  type: Field
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: GetGamepadNextElement
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 153
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public Element.GamepadNextElementCallback GetGamepadNextElement
    return:
      type: MLEM.Ui.Elements.Element.GamepadNextElementCallback
    content.vb: Public GetGamepadNextElement As Element.GamepadNextElementCallback
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Element.OnChildAdded
  commentId: F:MLEM.Ui.Elements.Element.OnChildAdded
  id: OnChildAdded
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: OnChildAdded
  nameWithType: Element.OnChildAdded
  fullName: MLEM.Ui.Elements.Element.OnChildAdded
  type: Field
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: OnChildAdded
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 154
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public Element.OtherElementCallback OnChildAdded
    return:
      type: MLEM.Ui.Elements.Element.OtherElementCallback
    content.vb: Public OnChildAdded As Element.OtherElementCallback
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Element.OnChildRemoved
  commentId: F:MLEM.Ui.Elements.Element.OnChildRemoved
  id: OnChildRemoved
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: OnChildRemoved
  nameWithType: Element.OnChildRemoved
  fullName: MLEM.Ui.Elements.Element.OnChildRemoved
  type: Field
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: OnChildRemoved
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 155
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public Element.OtherElementCallback OnChildRemoved
    return:
      type: MLEM.Ui.Elements.Element.OtherElementCallback
    content.vb: Public OnChildRemoved As Element.OtherElementCallback
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Element.SelectionIndicator
  commentId: F:MLEM.Ui.Elements.Element.SelectionIndicator
  id: SelectionIndicator
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: SelectionIndicator
  nameWithType: Element.SelectionIndicator
  fullName: MLEM.Ui.Elements.Element.SelectionIndicator
  type: Field
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: SelectionIndicator
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 157
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public StyleProp<NinePatch> SelectionIndicator
    return:
      type: MLEM.Ui.Style.StyleProp{MLEM.Textures.NinePatch}
    content.vb: Public SelectionIndicator As StyleProp(Of NinePatch)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Element.ActionSound
  commentId: F:MLEM.Ui.Elements.Element.ActionSound
  id: ActionSound
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: ActionSound
  nameWithType: Element.ActionSound
  fullName: MLEM.Ui.Elements.Element.ActionSound
  type: Field
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: ActionSound
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 158
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public StyleProp<SoundEffectInstance> ActionSound
    return:
      type: MLEM.Ui.Style.StyleProp{Microsoft.Xna.Framework.Audio.SoundEffectInstance}
    content.vb: Public ActionSound As StyleProp(Of SoundEffectInstance)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Element.SecondActionSound
  commentId: F:MLEM.Ui.Elements.Element.SecondActionSound
  id: SecondActionSound
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: SecondActionSound
  nameWithType: Element.SecondActionSound
  fullName: MLEM.Ui.Elements.Element.SecondActionSound
  type: Field
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: SecondActionSound
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 159
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public StyleProp<SoundEffectInstance> SecondActionSound
    return:
      type: MLEM.Ui.Style.StyleProp{Microsoft.Xna.Framework.Audio.SoundEffectInstance}
    content.vb: Public SecondActionSound As StyleProp(Of SoundEffectInstance)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Element.#ctor(MLEM.Ui.Anchor,Microsoft.Xna.Framework.Vector2)
  commentId: M:MLEM.Ui.Elements.Element.#ctor(MLEM.Ui.Anchor,Microsoft.Xna.Framework.Vector2)
  id: '#ctor(MLEM.Ui.Anchor,Microsoft.Xna.Framework.Vector2)'
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: Element(Anchor, Vector2)
  nameWithType: Element.Element(Anchor, Vector2)
  fullName: MLEM.Ui.Elements.Element.Element(MLEM.Ui.Anchor, Microsoft.Xna.Framework.Vector2)
  type: Constructor
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: .ctor
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 161
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public Element(Anchor anchor, Vector2 size)
    parameters:
    - id: anchor
      type: MLEM.Ui.Anchor
    - id: size
      type: Microsoft.Xna.Framework.Vector2
    content.vb: Public Sub New(anchor As Anchor, size As Vector2)
  overload: MLEM.Ui.Elements.Element.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Element.AddChild``1(``0,System.Int32)
  commentId: M:MLEM.Ui.Elements.Element.AddChild``1(``0,System.Int32)
  id: AddChild``1(``0,System.Int32)
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: AddChild<T>(T, Int32)
  nameWithType: Element.AddChild<T>(T, Int32)
  fullName: MLEM.Ui.Elements.Element.AddChild<T>(T, System.Int32)
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: AddChild
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 175
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: >-
      public T AddChild<T>(T element, int index = -1)

          where T : Element
    parameters:
    - id: element
      type: '{T}'
    - id: index
      type: System.Int32
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function AddChild(Of T As Element)(element As T, index As Integer = -1) As T
  overload: MLEM.Ui.Elements.Element.AddChild*
  nameWithType.vb: Element.AddChild(Of T)(T, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: MLEM.Ui.Elements.Element.AddChild(Of T)(T, System.Int32)
  name.vb: AddChild(Of T)(T, Int32)
- uid: MLEM.Ui.Elements.Element.RemoveChild(MLEM.Ui.Elements.Element)
  commentId: M:MLEM.Ui.Elements.Element.RemoveChild(MLEM.Ui.Elements.Element)
  id: RemoveChild(MLEM.Ui.Elements.Element)
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: RemoveChild(Element)
  nameWithType: Element.RemoveChild(Element)
  fullName: MLEM.Ui.Elements.Element.RemoveChild(MLEM.Ui.Elements.Element)
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: RemoveChild
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 191
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public void RemoveChild(Element element)
    parameters:
    - id: element
      type: MLEM.Ui.Elements.Element
    content.vb: Public Sub RemoveChild(element As Element)
  overload: MLEM.Ui.Elements.Element.RemoveChild*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Element.RemoveChildren(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  commentId: M:MLEM.Ui.Elements.Element.RemoveChildren(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  id: RemoveChildren(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: RemoveChildren(Func<Element, Boolean>)
  nameWithType: Element.RemoveChildren(Func<Element, Boolean>)
  fullName: MLEM.Ui.Elements.Element.RemoveChildren(System.Func<MLEM.Ui.Elements.Element, System.Boolean>)
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: RemoveChildren
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 206
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public void RemoveChildren(Func<Element, bool> condition = null)
    parameters:
    - id: condition
      type: System.Func{MLEM.Ui.Elements.Element,System.Boolean}
    content.vb: Public Sub RemoveChildren(condition As Func(Of Element, Boolean) = Nothing)
  overload: MLEM.Ui.Elements.Element.RemoveChildren*
  nameWithType.vb: Element.RemoveChildren(Func(Of Element, Boolean))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: MLEM.Ui.Elements.Element.RemoveChildren(System.Func(Of MLEM.Ui.Elements.Element, System.Boolean))
  name.vb: RemoveChildren(Func(Of Element, Boolean))
- uid: MLEM.Ui.Elements.Element.SetSortedChildrenDirty
  commentId: M:MLEM.Ui.Elements.Element.SetSortedChildrenDirty
  id: SetSortedChildrenDirty
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: SetSortedChildrenDirty()
  nameWithType: Element.SetSortedChildrenDirty()
  fullName: MLEM.Ui.Elements.Element.SetSortedChildrenDirty()
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: SetSortedChildrenDirty
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 215
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public void SetSortedChildrenDirty()
    content.vb: Public Sub SetSortedChildrenDirty
  overload: MLEM.Ui.Elements.Element.SetSortedChildrenDirty*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Element.UpdateSortedChildrenIfDirty
  commentId: M:MLEM.Ui.Elements.Element.UpdateSortedChildrenIfDirty
  id: UpdateSortedChildrenIfDirty
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: UpdateSortedChildrenIfDirty()
  nameWithType: Element.UpdateSortedChildrenIfDirty()
  fullName: MLEM.Ui.Elements.Element.UpdateSortedChildrenIfDirty()
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: UpdateSortedChildrenIfDirty
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 219
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public void UpdateSortedChildrenIfDirty()
    content.vb: Public Sub UpdateSortedChildrenIfDirty
  overload: MLEM.Ui.Elements.Element.UpdateSortedChildrenIfDirty*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Element.ForceUpdateSortedChildren
  commentId: M:MLEM.Ui.Elements.Element.ForceUpdateSortedChildren
  id: ForceUpdateSortedChildren
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: ForceUpdateSortedChildren()
  nameWithType: Element.ForceUpdateSortedChildren()
  fullName: MLEM.Ui.Elements.Element.ForceUpdateSortedChildren()
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: ForceUpdateSortedChildren
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 224
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public virtual void ForceUpdateSortedChildren()
    content.vb: Public Overridable Sub ForceUpdateSortedChildren
  overload: MLEM.Ui.Elements.Element.ForceUpdateSortedChildren*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: MLEM.Ui.Elements.Element.SetAreaDirty
  commentId: M:MLEM.Ui.Elements.Element.SetAreaDirty
  id: SetAreaDirty
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: SetAreaDirty()
  nameWithType: Element.SetAreaDirty()
  fullName: MLEM.Ui.Elements.Element.SetAreaDirty()
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: SetAreaDirty
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 232
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public void SetAreaDirty()
    content.vb: Public Sub SetAreaDirty
  overload: MLEM.Ui.Elements.Element.SetAreaDirty*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Element.UpdateAreaIfDirty
  commentId: M:MLEM.Ui.Elements.Element.UpdateAreaIfDirty
  id: UpdateAreaIfDirty
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: UpdateAreaIfDirty()
  nameWithType: Element.UpdateAreaIfDirty()
  fullName: MLEM.Ui.Elements.Element.UpdateAreaIfDirty()
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: UpdateAreaIfDirty
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 238
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public void UpdateAreaIfDirty()
    content.vb: Public Sub UpdateAreaIfDirty
  overload: MLEM.Ui.Elements.Element.UpdateAreaIfDirty*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Element.ForceUpdateArea
  commentId: M:MLEM.Ui.Elements.Element.ForceUpdateArea
  id: ForceUpdateArea
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: ForceUpdateArea()
  nameWithType: Element.ForceUpdateArea()
  fullName: MLEM.Ui.Elements.Element.ForceUpdateArea()
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: ForceUpdateArea
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 243
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public virtual void ForceUpdateArea()
    content.vb: Public Overridable Sub ForceUpdateArea
  overload: MLEM.Ui.Elements.Element.ForceUpdateArea*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: MLEM.Ui.Elements.Element.CalcActualSize(MLEM.Misc.RectangleF)
  commentId: M:MLEM.Ui.Elements.Element.CalcActualSize(MLEM.Misc.RectangleF)
  id: CalcActualSize(MLEM.Misc.RectangleF)
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: CalcActualSize(RectangleF)
  nameWithType: Element.CalcActualSize(RectangleF)
  fullName: MLEM.Ui.Elements.Element.CalcActualSize(MLEM.Misc.RectangleF)
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: CalcActualSize
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 364
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: protected virtual Vector2 CalcActualSize(RectangleF parentArea)
    parameters:
    - id: parentArea
      type: MLEM.Misc.RectangleF
    return:
      type: Microsoft.Xna.Framework.Vector2
    content.vb: Protected Overridable Function CalcActualSize(parentArea As RectangleF) As Vector2
  overload: MLEM.Ui.Elements.Element.CalcActualSize*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: MLEM.Ui.Elements.Element.GetAreaForAutoAnchors
  commentId: M:MLEM.Ui.Elements.Element.GetAreaForAutoAnchors
  id: GetAreaForAutoAnchors
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: GetAreaForAutoAnchors()
  nameWithType: Element.GetAreaForAutoAnchors()
  fullName: MLEM.Ui.Elements.Element.GetAreaForAutoAnchors()
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: GetAreaForAutoAnchors
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 370
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: protected virtual RectangleF GetAreaForAutoAnchors()
    return:
      type: MLEM.Misc.RectangleF
    content.vb: Protected Overridable Function GetAreaForAutoAnchors As RectangleF
  overload: MLEM.Ui.Elements.Element.GetAreaForAutoAnchors*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: MLEM.Ui.Elements.Element.GetLowestChild(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  commentId: M:MLEM.Ui.Elements.Element.GetLowestChild(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  id: GetLowestChild(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: GetLowestChild(Func<Element, Boolean>)
  nameWithType: Element.GetLowestChild(Func<Element, Boolean>)
  fullName: MLEM.Ui.Elements.Element.GetLowestChild(System.Func<MLEM.Ui.Elements.Element, System.Boolean>)
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: GetLowestChild
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 374
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public Element GetLowestChild(Func<Element, bool> condition = null)
    parameters:
    - id: condition
      type: System.Func{MLEM.Ui.Elements.Element,System.Boolean}
    return:
      type: MLEM.Ui.Elements.Element
    content.vb: Public Function GetLowestChild(condition As Func(Of Element, Boolean) = Nothing) As Element
  overload: MLEM.Ui.Elements.Element.GetLowestChild*
  nameWithType.vb: Element.GetLowestChild(Func(Of Element, Boolean))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: MLEM.Ui.Elements.Element.GetLowestChild(System.Func(Of MLEM.Ui.Elements.Element, System.Boolean))
  name.vb: GetLowestChild(Func(Of Element, Boolean))
- uid: MLEM.Ui.Elements.Element.GetRightmostChild(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  commentId: M:MLEM.Ui.Elements.Element.GetRightmostChild(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  id: GetRightmostChild(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: GetRightmostChild(Func<Element, Boolean>)
  nameWithType: Element.GetRightmostChild(Func<Element, Boolean>)
  fullName: MLEM.Ui.Elements.Element.GetRightmostChild(System.Func<MLEM.Ui.Elements.Element, System.Boolean>)
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: GetRightmostChild
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 387
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public Element GetRightmostChild(Func<Element, bool> condition = null)
    parameters:
    - id: condition
      type: System.Func{MLEM.Ui.Elements.Element,System.Boolean}
    return:
      type: MLEM.Ui.Elements.Element
    content.vb: Public Function GetRightmostChild(condition As Func(Of Element, Boolean) = Nothing) As Element
  overload: MLEM.Ui.Elements.Element.GetRightmostChild*
  nameWithType.vb: Element.GetRightmostChild(Func(Of Element, Boolean))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: MLEM.Ui.Elements.Element.GetRightmostChild(System.Func(Of MLEM.Ui.Elements.Element, System.Boolean))
  name.vb: GetRightmostChild(Func(Of Element, Boolean))
- uid: MLEM.Ui.Elements.Element.GetLowestOlderSibling(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  commentId: M:MLEM.Ui.Elements.Element.GetLowestOlderSibling(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  id: GetLowestOlderSibling(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: GetLowestOlderSibling(Func<Element, Boolean>)
  nameWithType: Element.GetLowestOlderSibling(Func<Element, Boolean>)
  fullName: MLEM.Ui.Elements.Element.GetLowestOlderSibling(System.Func<MLEM.Ui.Elements.Element, System.Boolean>)
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: GetLowestOlderSibling
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 400
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public Element GetLowestOlderSibling(Func<Element, bool> condition = null)
    parameters:
    - id: condition
      type: System.Func{MLEM.Ui.Elements.Element,System.Boolean}
    return:
      type: MLEM.Ui.Elements.Element
    content.vb: Public Function GetLowestOlderSibling(condition As Func(Of Element, Boolean) = Nothing) As Element
  overload: MLEM.Ui.Elements.Element.GetLowestOlderSibling*
  nameWithType.vb: Element.GetLowestOlderSibling(Func(Of Element, Boolean))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: MLEM.Ui.Elements.Element.GetLowestOlderSibling(System.Func(Of MLEM.Ui.Elements.Element, System.Boolean))
  name.vb: GetLowestOlderSibling(Func(Of Element, Boolean))
- uid: MLEM.Ui.Elements.Element.GetOlderSibling(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  commentId: M:MLEM.Ui.Elements.Element.GetOlderSibling(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  id: GetOlderSibling(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: GetOlderSibling(Func<Element, Boolean>)
  nameWithType: Element.GetOlderSibling(Func<Element, Boolean>)
  fullName: MLEM.Ui.Elements.Element.GetOlderSibling(System.Func<MLEM.Ui.Elements.Element, System.Boolean>)
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: GetOlderSibling
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 415
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public Element GetOlderSibling(Func<Element, bool> condition = null)
    parameters:
    - id: condition
      type: System.Func{MLEM.Ui.Elements.Element,System.Boolean}
    return:
      type: MLEM.Ui.Elements.Element
    content.vb: Public Function GetOlderSibling(condition As Func(Of Element, Boolean) = Nothing) As Element
  overload: MLEM.Ui.Elements.Element.GetOlderSibling*
  nameWithType.vb: Element.GetOlderSibling(Func(Of Element, Boolean))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: MLEM.Ui.Elements.Element.GetOlderSibling(System.Func(Of MLEM.Ui.Elements.Element, System.Boolean))
  name.vb: GetOlderSibling(Func(Of Element, Boolean))
- uid: MLEM.Ui.Elements.Element.GetSiblings(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  commentId: M:MLEM.Ui.Elements.Element.GetSiblings(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  id: GetSiblings(System.Func{MLEM.Ui.Elements.Element,System.Boolean})
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: GetSiblings(Func<Element, Boolean>)
  nameWithType: Element.GetSiblings(Func<Element, Boolean>)
  fullName: MLEM.Ui.Elements.Element.GetSiblings(System.Func<MLEM.Ui.Elements.Element, System.Boolean>)
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: GetSiblings
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 429
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public IEnumerable<Element> GetSiblings(Func<Element, bool> condition = null)
    parameters:
    - id: condition
      type: System.Func{MLEM.Ui.Elements.Element,System.Boolean}
    return:
      type: System.Collections.Generic.IEnumerable{MLEM.Ui.Elements.Element}
    content.vb: Public Function GetSiblings(condition As Func(Of Element, Boolean) = Nothing) As IEnumerable(Of Element)
  overload: MLEM.Ui.Elements.Element.GetSiblings*
  nameWithType.vb: Element.GetSiblings(Func(Of Element, Boolean))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: MLEM.Ui.Elements.Element.GetSiblings(System.Func(Of MLEM.Ui.Elements.Element, System.Boolean))
  name.vb: GetSiblings(Func(Of Element, Boolean))
- uid: MLEM.Ui.Elements.Element.GetChildren``1(System.Func{``0,System.Boolean},System.Boolean,System.Boolean)
  commentId: M:MLEM.Ui.Elements.Element.GetChildren``1(System.Func{``0,System.Boolean},System.Boolean,System.Boolean)
  id: GetChildren``1(System.Func{``0,System.Boolean},System.Boolean,System.Boolean)
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: GetChildren<T>(Func<T, Boolean>, Boolean, Boolean)
  nameWithType: Element.GetChildren<T>(Func<T, Boolean>, Boolean, Boolean)
  fullName: MLEM.Ui.Elements.Element.GetChildren<T>(System.Func<T, System.Boolean>, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: GetChildren
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 440
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: >-
      public IEnumerable<T> GetChildren<T>(Func<T, bool> condition = null, bool regardGrandchildren = false, bool ignoreFalseGrandchildren = false)

          where T : Element
    parameters:
    - id: condition
      type: System.Func{{T},System.Boolean}
    - id: regardGrandchildren
      type: System.Boolean
    - id: ignoreFalseGrandchildren
      type: System.Boolean
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
    content.vb: Public Function GetChildren(Of T As Element)(condition As Func(Of T, Boolean) = Nothing, regardGrandchildren As Boolean = False, ignoreFalseGrandchildren As Boolean = False) As IEnumerable(Of T)
  overload: MLEM.Ui.Elements.Element.GetChildren*
  nameWithType.vb: Element.GetChildren(Of T)(Func(Of T, Boolean), Boolean, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: MLEM.Ui.Elements.Element.GetChildren(Of T)(System.Func(Of T, System.Boolean), System.Boolean, System.Boolean)
  name.vb: GetChildren(Of T)(Func(Of T, Boolean), Boolean, Boolean)
- uid: MLEM.Ui.Elements.Element.GetChildren(System.Func{MLEM.Ui.Elements.Element,System.Boolean},System.Boolean,System.Boolean)
  commentId: M:MLEM.Ui.Elements.Element.GetChildren(System.Func{MLEM.Ui.Elements.Element,System.Boolean},System.Boolean,System.Boolean)
  id: GetChildren(System.Func{MLEM.Ui.Elements.Element,System.Boolean},System.Boolean,System.Boolean)
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: GetChildren(Func<Element, Boolean>, Boolean, Boolean)
  nameWithType: Element.GetChildren(Func<Element, Boolean>, Boolean, Boolean)
  fullName: MLEM.Ui.Elements.Element.GetChildren(System.Func<MLEM.Ui.Elements.Element, System.Boolean>, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: GetChildren
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 452
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public IEnumerable<Element> GetChildren(Func<Element, bool> condition = null, bool regardGrandchildren = false, bool ignoreFalseGrandchildren = false)
    parameters:
    - id: condition
      type: System.Func{MLEM.Ui.Elements.Element,System.Boolean}
    - id: regardGrandchildren
      type: System.Boolean
    - id: ignoreFalseGrandchildren
      type: System.Boolean
    return:
      type: System.Collections.Generic.IEnumerable{MLEM.Ui.Elements.Element}
    content.vb: Public Function GetChildren(condition As Func(Of Element, Boolean) = Nothing, regardGrandchildren As Boolean = False, ignoreFalseGrandchildren As Boolean = False) As IEnumerable(Of Element)
  overload: MLEM.Ui.Elements.Element.GetChildren*
  nameWithType.vb: Element.GetChildren(Func(Of Element, Boolean), Boolean, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: MLEM.Ui.Elements.Element.GetChildren(System.Func(Of MLEM.Ui.Elements.Element, System.Boolean), System.Boolean, System.Boolean)
  name.vb: GetChildren(Func(Of Element, Boolean), Boolean, Boolean)
- uid: MLEM.Ui.Elements.Element.GetParentTree
  commentId: M:MLEM.Ui.Elements.Element.GetParentTree
  id: GetParentTree
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: GetParentTree()
  nameWithType: Element.GetParentTree()
  fullName: MLEM.Ui.Elements.Element.GetParentTree()
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: GetParentTree
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 456
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public IEnumerable<Element> GetParentTree()
    return:
      type: System.Collections.Generic.IEnumerable{MLEM.Ui.Elements.Element}
    content.vb: Public Function GetParentTree As IEnumerable(Of Element)
  overload: MLEM.Ui.Elements.Element.GetParentTree*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MLEM.Ui.Elements.Element.GetRelevantChildren
  commentId: M:MLEM.Ui.Elements.Element.GetRelevantChildren
  id: GetRelevantChildren
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: GetRelevantChildren()
  nameWithType: Element.GetRelevantChildren()
  fullName: MLEM.Ui.Elements.Element.GetRelevantChildren()
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: GetRelevantChildren
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 464
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: protected virtual List<Element> GetRelevantChildren()
    return:
      type: System.Collections.Generic.List{MLEM.Ui.Elements.Element}
    content.vb: Protected Overridable Function GetRelevantChildren As List(Of Element)
  overload: MLEM.Ui.Elements.Element.GetRelevantChildren*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: MLEM.Ui.Elements.Element.Update(Microsoft.Xna.Framework.GameTime)
  commentId: M:MLEM.Ui.Elements.Element.Update(Microsoft.Xna.Framework.GameTime)
  id: Update(Microsoft.Xna.Framework.GameTime)
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: Update(GameTime)
  nameWithType: Element.Update(GameTime)
  fullName: MLEM.Ui.Elements.Element.Update(Microsoft.Xna.Framework.GameTime)
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: Update
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 468
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public virtual void Update(GameTime time)
    parameters:
    - id: time
      type: Microsoft.Xna.Framework.GameTime
    content.vb: Public Overridable Sub Update(time As GameTime)
  overload: MLEM.Ui.Elements.Element.Update*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: MLEM.Ui.Elements.Element.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single,Microsoft.Xna.Framework.Graphics.BlendState,Microsoft.Xna.Framework.Graphics.SamplerState,Microsoft.Xna.Framework.Matrix)
  commentId: M:MLEM.Ui.Elements.Element.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single,Microsoft.Xna.Framework.Graphics.BlendState,Microsoft.Xna.Framework.Graphics.SamplerState,Microsoft.Xna.Framework.Matrix)
  id: Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single,Microsoft.Xna.Framework.Graphics.BlendState,Microsoft.Xna.Framework.Graphics.SamplerState,Microsoft.Xna.Framework.Matrix)
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: Draw(GameTime, SpriteBatch, Single, BlendState, SamplerState, Matrix)
  nameWithType: Element.Draw(GameTime, SpriteBatch, Single, BlendState, SamplerState, Matrix)
  fullName: MLEM.Ui.Elements.Element.Draw(Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch, System.Single, Microsoft.Xna.Framework.Graphics.BlendState, Microsoft.Xna.Framework.Graphics.SamplerState, Microsoft.Xna.Framework.Matrix)
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: Draw
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 476
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public virtual void Draw(GameTime time, SpriteBatch batch, float alpha, BlendState blendState, SamplerState samplerState, Matrix matrix)
    parameters:
    - id: time
      type: Microsoft.Xna.Framework.GameTime
    - id: batch
      type: Microsoft.Xna.Framework.Graphics.SpriteBatch
    - id: alpha
      type: System.Single
    - id: blendState
      type: Microsoft.Xna.Framework.Graphics.BlendState
    - id: samplerState
      type: Microsoft.Xna.Framework.Graphics.SamplerState
    - id: matrix
      type: Microsoft.Xna.Framework.Matrix
    content.vb: Public Overridable Sub Draw(time As GameTime, batch As SpriteBatch, alpha As Single, blendState As BlendState, samplerState As SamplerState, matrix As Matrix)
  overload: MLEM.Ui.Elements.Element.Draw*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: MLEM.Ui.Elements.Element.DrawEarly(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single,Microsoft.Xna.Framework.Graphics.BlendState,Microsoft.Xna.Framework.Graphics.SamplerState,Microsoft.Xna.Framework.Matrix)
  commentId: M:MLEM.Ui.Elements.Element.DrawEarly(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single,Microsoft.Xna.Framework.Graphics.BlendState,Microsoft.Xna.Framework.Graphics.SamplerState,Microsoft.Xna.Framework.Matrix)
  id: DrawEarly(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single,Microsoft.Xna.Framework.Graphics.BlendState,Microsoft.Xna.Framework.Graphics.SamplerState,Microsoft.Xna.Framework.Matrix)
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: DrawEarly(GameTime, SpriteBatch, Single, BlendState, SamplerState, Matrix)
  nameWithType: Element.DrawEarly(GameTime, SpriteBatch, Single, BlendState, SamplerState, Matrix)
  fullName: MLEM.Ui.Elements.Element.DrawEarly(Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch, System.Single, Microsoft.Xna.Framework.Graphics.BlendState, Microsoft.Xna.Framework.Graphics.SamplerState, Microsoft.Xna.Framework.Matrix)
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: DrawEarly
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 487
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public virtual void DrawEarly(GameTime time, SpriteBatch batch, float alpha, BlendState blendState, SamplerState samplerState, Matrix matrix)
    parameters:
    - id: time
      type: Microsoft.Xna.Framework.GameTime
    - id: batch
      type: Microsoft.Xna.Framework.Graphics.SpriteBatch
    - id: alpha
      type: System.Single
    - id: blendState
      type: Microsoft.Xna.Framework.Graphics.BlendState
    - id: samplerState
      type: Microsoft.Xna.Framework.Graphics.SamplerState
    - id: matrix
      type: Microsoft.Xna.Framework.Matrix
    content.vb: Public Overridable Sub DrawEarly(time As GameTime, batch As SpriteBatch, alpha As Single, blendState As BlendState, samplerState As SamplerState, matrix As Matrix)
  overload: MLEM.Ui.Elements.Element.DrawEarly*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: MLEM.Ui.Elements.Element.GetElementUnderPos(Microsoft.Xna.Framework.Vector2)
  commentId: M:MLEM.Ui.Elements.Element.GetElementUnderPos(Microsoft.Xna.Framework.Vector2)
  id: GetElementUnderPos(Microsoft.Xna.Framework.Vector2)
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: GetElementUnderPos(Vector2)
  nameWithType: Element.GetElementUnderPos(Vector2)
  fullName: MLEM.Ui.Elements.Element.GetElementUnderPos(Microsoft.Xna.Framework.Vector2)
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: GetElementUnderPos
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 494
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public virtual Element GetElementUnderPos(Vector2 position)
    parameters:
    - id: position
      type: Microsoft.Xna.Framework.Vector2
    return:
      type: MLEM.Ui.Elements.Element
    content.vb: Public Overridable Function GetElementUnderPos(position As Vector2) As Element
  overload: MLEM.Ui.Elements.Element.GetElementUnderPos*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: MLEM.Ui.Elements.Element.AndChildren(System.Action{MLEM.Ui.Elements.Element})
  commentId: M:MLEM.Ui.Elements.Element.AndChildren(System.Action{MLEM.Ui.Elements.Element})
  id: AndChildren(System.Action{MLEM.Ui.Elements.Element})
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: AndChildren(Action<Element>)
  nameWithType: Element.AndChildren(Action<Element>)
  fullName: MLEM.Ui.Elements.Element.AndChildren(System.Action<MLEM.Ui.Elements.Element>)
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: AndChildren
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 506
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public void AndChildren(Action<Element> action)
    parameters:
    - id: action
      type: System.Action{MLEM.Ui.Elements.Element}
    content.vb: Public Sub AndChildren(action As Action(Of Element))
  overload: MLEM.Ui.Elements.Element.AndChildren*
  nameWithType.vb: Element.AndChildren(Action(Of Element))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: MLEM.Ui.Elements.Element.AndChildren(System.Action(Of MLEM.Ui.Elements.Element))
  name.vb: AndChildren(Action(Of Element))
- uid: MLEM.Ui.Elements.Element.ReorderChildren(System.Comparison{MLEM.Ui.Elements.Element})
  commentId: M:MLEM.Ui.Elements.Element.ReorderChildren(System.Comparison{MLEM.Ui.Elements.Element})
  id: ReorderChildren(System.Comparison{MLEM.Ui.Elements.Element})
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: ReorderChildren(Comparison<Element>)
  nameWithType: Element.ReorderChildren(Comparison<Element>)
  fullName: MLEM.Ui.Elements.Element.ReorderChildren(System.Comparison<MLEM.Ui.Elements.Element>)
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: ReorderChildren
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 512
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public void ReorderChildren(Comparison<Element> comparison)
    parameters:
    - id: comparison
      type: System.Comparison{MLEM.Ui.Elements.Element}
    content.vb: Public Sub ReorderChildren(comparison As Comparison(Of Element))
  overload: MLEM.Ui.Elements.Element.ReorderChildren*
  nameWithType.vb: Element.ReorderChildren(Comparison(Of Element))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: MLEM.Ui.Elements.Element.ReorderChildren(System.Comparison(Of MLEM.Ui.Elements.Element))
  name.vb: ReorderChildren(Comparison(Of Element))
- uid: MLEM.Ui.Elements.Element.ReverseChildren(System.Int32,System.Nullable{System.Int32})
  commentId: M:MLEM.Ui.Elements.Element.ReverseChildren(System.Int32,System.Nullable{System.Int32})
  id: ReverseChildren(System.Int32,System.Nullable{System.Int32})
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: ReverseChildren(Int32, Nullable<Int32>)
  nameWithType: Element.ReverseChildren(Int32, Nullable<Int32>)
  fullName: MLEM.Ui.Elements.Element.ReverseChildren(System.Int32, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: ReverseChildren
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 516
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: public void ReverseChildren(int index = 0, int? count = default(int? ))
    parameters:
    - id: index
      type: System.Int32
    - id: count
      type: System.Nullable{System.Int32}
    content.vb: Public Sub ReverseChildren(index As Integer = 0, count As Integer? = Nothing)
  overload: MLEM.Ui.Elements.Element.ReverseChildren*
  nameWithType.vb: Element.ReverseChildren(Int32, Nullable(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: MLEM.Ui.Elements.Element.ReverseChildren(System.Int32, System.Nullable(Of System.Int32))
  name.vb: ReverseChildren(Int32, Nullable(Of Int32))
- uid: MLEM.Ui.Elements.Element.InitStyle(MLEM.Ui.Style.UiStyle)
  commentId: M:MLEM.Ui.Elements.Element.InitStyle(MLEM.Ui.Style.UiStyle)
  id: InitStyle(MLEM.Ui.Style.UiStyle)
  parent: MLEM.Ui.Elements.Element
  langs:
  - csharp
  - vb
  name: InitStyle(UiStyle)
  nameWithType: Element.InitStyle(UiStyle)
  fullName: MLEM.Ui.Elements.Element.InitStyle(MLEM.Ui.Style.UiStyle)
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/Element.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: InitStyle
    path: ../MLEM.Ui/Elements/Element.cs
    startLine: 520
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  syntax:
    content: protected virtual void InitStyle(UiStyle style)
    parameters:
    - id: style
      type: MLEM.Ui.Style.UiStyle
    content.vb: Protected Overridable Sub InitStyle(style As UiStyle)
  overload: MLEM.Ui.Elements.Element.InitStyle*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: MLEM.Ui.Elements
  commentId: N:MLEM.Ui.Elements
  name: MLEM.Ui.Elements
  nameWithType: MLEM.Ui.Elements
  fullName: MLEM.Ui.Elements
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: MLEM.Misc.GenericDataHolder
  commentId: T:MLEM.Misc.GenericDataHolder
  parent: MLEM.Misc
  name: GenericDataHolder
  nameWithType: GenericDataHolder
  fullName: MLEM.Misc.GenericDataHolder
- uid: MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
  commentId: M:MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
  parent: MLEM.Misc.GenericDataHolder
  isExternal: true
  name: SetData(String, Object)
  nameWithType: GenericDataHolder.SetData(String, Object)
  fullName: MLEM.Misc.GenericDataHolder.SetData(System.String, System.Object)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
    name: SetData
    nameWithType: GenericDataHolder.SetData
    fullName: MLEM.Misc.GenericDataHolder.SetData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
    name: SetData
    nameWithType: GenericDataHolder.SetData
    fullName: MLEM.Misc.GenericDataHolder.SetData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  commentId: M:MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  parent: MLEM.Misc.GenericDataHolder
  isExternal: true
  name: GetData<T>(String)
  nameWithType: GenericDataHolder.GetData<T>(String)
  fullName: MLEM.Misc.GenericDataHolder.GetData<T>(System.String)
  nameWithType.vb: GenericDataHolder.GetData(Of T)(String)
  fullName.vb: MLEM.Misc.GenericDataHolder.GetData(Of T)(System.String)
  name.vb: GetData(Of T)(String)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
    name: GetData<T>
    nameWithType: GenericDataHolder.GetData<T>
    fullName: MLEM.Misc.GenericDataHolder.GetData<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
    name: GetData(Of T)
    nameWithType: GenericDataHolder.GetData(Of T)
    fullName: MLEM.Misc.GenericDataHolder.GetData(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Misc.GenericDataHolder.GetDataKeys
  commentId: M:MLEM.Misc.GenericDataHolder.GetDataKeys
  parent: MLEM.Misc.GenericDataHolder
  name: GetDataKeys()
  nameWithType: GenericDataHolder.GetDataKeys()
  fullName: MLEM.Misc.GenericDataHolder.GetDataKeys()
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.GetDataKeys
    name: GetDataKeys
    nameWithType: GenericDataHolder.GetDataKeys
    fullName: MLEM.Misc.GenericDataHolder.GetDataKeys
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.GetDataKeys
    name: GetDataKeys
    nameWithType: GenericDataHolder.GetDataKeys
    fullName: MLEM.Misc.GenericDataHolder.GetDataKeys
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
- uid: System.Collections.Generic.List{MLEM.Ui.Elements.Element}
  commentId: T:System.Collections.Generic.List{MLEM.Ui.Elements.Element}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Element>
  nameWithType: List<Element>
  fullName: System.Collections.Generic.List<MLEM.Ui.Elements.Element>
  nameWithType.vb: List(Of Element)
  fullName.vb: System.Collections.Generic.List(Of MLEM.Ui.Elements.Element)
  name.vb: List(Of Element)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: MLEM.Ui.Elements.Element.SortedChildren*
  commentId: Overload:MLEM.Ui.Elements.Element.SortedChildren
  name: SortedChildren
  nameWithType: Element.SortedChildren
  fullName: MLEM.Ui.Elements.Element.SortedChildren
- uid: MLEM.Ui.Elements.Element.System*
  commentId: Overload:MLEM.Ui.Elements.Element.System
  name: System
  nameWithType: Element.System
  fullName: MLEM.Ui.Elements.Element.System
- uid: MLEM.Ui.UiSystem
  commentId: T:MLEM.Ui.UiSystem
  parent: MLEM.Ui
  name: UiSystem
  nameWithType: UiSystem
  fullName: MLEM.Ui.UiSystem
- uid: MLEM.Ui
  commentId: N:MLEM.Ui
  name: MLEM.Ui
  nameWithType: MLEM.Ui
  fullName: MLEM.Ui
- uid: MLEM.Ui.UiControls
  commentId: T:MLEM.Ui.UiControls
  parent: MLEM.Ui
  name: UiControls
  nameWithType: UiControls
  fullName: MLEM.Ui.UiControls
- uid: MLEM.Ui.Elements.Element.Input*
  commentId: Overload:MLEM.Ui.Elements.Element.Input
  name: Input
  nameWithType: Element.Input
  fullName: MLEM.Ui.Elements.Element.Input
- uid: MLEM.Input.InputHandler
  commentId: T:MLEM.Input.InputHandler
  parent: MLEM.Input
  name: InputHandler
  nameWithType: InputHandler
  fullName: MLEM.Input.InputHandler
- uid: MLEM.Input
  commentId: N:MLEM.Input
  name: MLEM.Input
  nameWithType: MLEM.Input
  fullName: MLEM.Input
- uid: MLEM.Ui.Elements.Element.Parent*
  commentId: Overload:MLEM.Ui.Elements.Element.Parent
  name: Parent
  nameWithType: Element.Parent
  fullName: MLEM.Ui.Elements.Element.Parent
- uid: MLEM.Ui.Elements.Element
  commentId: T:MLEM.Ui.Elements.Element
  parent: MLEM.Ui.Elements
  name: Element
  nameWithType: Element
  fullName: MLEM.Ui.Elements.Element
- uid: MLEM.Ui.Elements.Element.Root*
  commentId: Overload:MLEM.Ui.Elements.Element.Root
  name: Root
  nameWithType: Element.Root
  fullName: MLEM.Ui.Elements.Element.Root
- uid: MLEM.Ui.RootElement
  commentId: T:MLEM.Ui.RootElement
  parent: MLEM.Ui
  name: RootElement
  nameWithType: RootElement
  fullName: MLEM.Ui.RootElement
- uid: MLEM.Ui.Elements.Element.Scale*
  commentId: Overload:MLEM.Ui.Elements.Element.Scale
  name: Scale
  nameWithType: Element.Scale
  fullName: MLEM.Ui.Elements.Element.Scale
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: MLEM.Ui.Elements.Element.Anchor*
  commentId: Overload:MLEM.Ui.Elements.Element.Anchor
  name: Anchor
  nameWithType: Element.Anchor
  fullName: MLEM.Ui.Elements.Element.Anchor
- uid: MLEM.Ui.Anchor
  commentId: T:MLEM.Ui.Anchor
  parent: MLEM.Ui
  name: Anchor
  nameWithType: Anchor
  fullName: MLEM.Ui.Anchor
- uid: MLEM.Ui.Elements.Element.Size*
  commentId: Overload:MLEM.Ui.Elements.Element.Size
  name: Size
  nameWithType: Element.Size
  fullName: MLEM.Ui.Elements.Element.Size
- uid: Microsoft.Xna.Framework.Vector2
  commentId: T:Microsoft.Xna.Framework.Vector2
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Microsoft.Xna.Framework.Vector2
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
- uid: MLEM.Ui.Elements.Element.ScaledSize*
  commentId: Overload:MLEM.Ui.Elements.Element.ScaledSize
  name: ScaledSize
  nameWithType: Element.ScaledSize
  fullName: MLEM.Ui.Elements.Element.ScaledSize
- uid: MLEM.Ui.Elements.Element.PositionOffset*
  commentId: Overload:MLEM.Ui.Elements.Element.PositionOffset
  name: PositionOffset
  nameWithType: Element.PositionOffset
  fullName: MLEM.Ui.Elements.Element.PositionOffset
- uid: MLEM.Ui.Elements.Element.ScaledOffset*
  commentId: Overload:MLEM.Ui.Elements.Element.ScaledOffset
  name: ScaledOffset
  nameWithType: Element.ScaledOffset
  fullName: MLEM.Ui.Elements.Element.ScaledOffset
- uid: MLEM.Misc.Padding
  commentId: T:MLEM.Misc.Padding
  parent: MLEM.Misc
  name: Padding
  nameWithType: Padding
  fullName: MLEM.Misc.Padding
- uid: MLEM.Ui.Elements.Element.ScaledPadding*
  commentId: Overload:MLEM.Ui.Elements.Element.ScaledPadding
  name: ScaledPadding
  nameWithType: Element.ScaledPadding
  fullName: MLEM.Ui.Elements.Element.ScaledPadding
- uid: MLEM.Ui.Elements.Element.ChildPadding*
  commentId: Overload:MLEM.Ui.Elements.Element.ChildPadding
  name: ChildPadding
  nameWithType: Element.ChildPadding
  fullName: MLEM.Ui.Elements.Element.ChildPadding
- uid: MLEM.Ui.Elements.Element.ScaledChildPadding*
  commentId: Overload:MLEM.Ui.Elements.Element.ScaledChildPadding
  name: ScaledChildPadding
  nameWithType: Element.ScaledChildPadding
  fullName: MLEM.Ui.Elements.Element.ScaledChildPadding
- uid: MLEM.Ui.Elements.Element.ChildPaddedArea*
  commentId: Overload:MLEM.Ui.Elements.Element.ChildPaddedArea
  name: ChildPaddedArea
  nameWithType: Element.ChildPaddedArea
  fullName: MLEM.Ui.Elements.Element.ChildPaddedArea
- uid: MLEM.Misc.RectangleF
  commentId: T:MLEM.Misc.RectangleF
  parent: MLEM.Misc
  name: RectangleF
  nameWithType: RectangleF
  fullName: MLEM.Misc.RectangleF
- uid: MLEM.Ui.Elements.Element.UnscrolledArea*
  commentId: Overload:MLEM.Ui.Elements.Element.UnscrolledArea
  name: UnscrolledArea
  nameWithType: Element.UnscrolledArea
  fullName: MLEM.Ui.Elements.Element.UnscrolledArea
- uid: MLEM.Ui.Elements.Element.Area*
  commentId: Overload:MLEM.Ui.Elements.Element.Area
  name: Area
  nameWithType: Element.Area
  fullName: MLEM.Ui.Elements.Element.Area
- uid: MLEM.Ui.Elements.Element.DisplayArea*
  commentId: Overload:MLEM.Ui.Elements.Element.DisplayArea
  name: DisplayArea
  nameWithType: Element.DisplayArea
  fullName: MLEM.Ui.Elements.Element.DisplayArea
- uid: MLEM.Ui.Elements.Element.ScaledScrollOffset*
  commentId: Overload:MLEM.Ui.Elements.Element.ScaledScrollOffset
  name: ScaledScrollOffset
  nameWithType: Element.ScaledScrollOffset
  fullName: MLEM.Ui.Elements.Element.ScaledScrollOffset
- uid: MLEM.Ui.Elements.Element.IsHidden*
  commentId: Overload:MLEM.Ui.Elements.Element.IsHidden
  name: IsHidden
  nameWithType: Element.IsHidden
  fullName: MLEM.Ui.Elements.Element.IsHidden
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: MLEM.Ui.Elements.Element.Priority*
  commentId: Overload:MLEM.Ui.Elements.Element.Priority
  name: Priority
  nameWithType: Element.Priority
  fullName: MLEM.Ui.Elements.Element.Priority
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: MLEM.Ui.Elements.Element.IsMouseOver*
  commentId: Overload:MLEM.Ui.Elements.Element.IsMouseOver
  name: IsMouseOver
  nameWithType: Element.IsMouseOver
  fullName: MLEM.Ui.Elements.Element.IsMouseOver
- uid: MLEM.Ui.Elements.Element.IsSelected*
  commentId: Overload:MLEM.Ui.Elements.Element.IsSelected
  name: IsSelected
  nameWithType: Element.IsSelected
  fullName: MLEM.Ui.Elements.Element.IsSelected
- uid: MLEM.Ui.Elements.Element.DrawCallback
  commentId: T:MLEM.Ui.Elements.Element.DrawCallback
  parent: MLEM.Ui.Elements
  name: Element.DrawCallback
  nameWithType: Element.DrawCallback
  fullName: MLEM.Ui.Elements.Element.DrawCallback
- uid: MLEM.Ui.Elements.Element.TimeCallback
  commentId: T:MLEM.Ui.Elements.Element.TimeCallback
  parent: MLEM.Ui.Elements
  name: Element.TimeCallback
  nameWithType: Element.TimeCallback
  fullName: MLEM.Ui.Elements.Element.TimeCallback
- uid: MLEM.Ui.Elements.Element.GenericCallback
  commentId: T:MLEM.Ui.Elements.Element.GenericCallback
  parent: MLEM.Ui.Elements
  name: Element.GenericCallback
  nameWithType: Element.GenericCallback
  fullName: MLEM.Ui.Elements.Element.GenericCallback
- uid: MLEM.Ui.Elements.Element.TextInputCallback
  commentId: T:MLEM.Ui.Elements.Element.TextInputCallback
  parent: MLEM.Ui.Elements
  name: Element.TextInputCallback
  nameWithType: Element.TextInputCallback
  fullName: MLEM.Ui.Elements.Element.TextInputCallback
- uid: MLEM.Ui.Elements.Element.OtherElementCallback
  commentId: T:MLEM.Ui.Elements.Element.OtherElementCallback
  parent: MLEM.Ui.Elements
  name: Element.OtherElementCallback
  nameWithType: Element.OtherElementCallback
  fullName: MLEM.Ui.Elements.Element.OtherElementCallback
- uid: MLEM.Ui.Elements.Element.TabNextElementCallback
  commentId: T:MLEM.Ui.Elements.Element.TabNextElementCallback
  parent: MLEM.Ui.Elements
  name: Element.TabNextElementCallback
  nameWithType: Element.TabNextElementCallback
  fullName: MLEM.Ui.Elements.Element.TabNextElementCallback
- uid: MLEM.Ui.Elements.Element.GamepadNextElementCallback
  commentId: T:MLEM.Ui.Elements.Element.GamepadNextElementCallback
  parent: MLEM.Ui.Elements
  name: Element.GamepadNextElementCallback
  nameWithType: Element.GamepadNextElementCallback
  fullName: MLEM.Ui.Elements.Element.GamepadNextElementCallback
- uid: MLEM.Ui.Style.StyleProp{MLEM.Textures.NinePatch}
  commentId: T:MLEM.Ui.Style.StyleProp{MLEM.Textures.NinePatch}
  parent: MLEM.Ui.Style
  definition: MLEM.Ui.Style.StyleProp`1
  name: StyleProp<NinePatch>
  nameWithType: StyleProp<NinePatch>
  fullName: MLEM.Ui.Style.StyleProp<MLEM.Textures.NinePatch>
  nameWithType.vb: StyleProp(Of NinePatch)
  fullName.vb: MLEM.Ui.Style.StyleProp(Of MLEM.Textures.NinePatch)
  name.vb: StyleProp(Of NinePatch)
  spec.csharp:
  - uid: MLEM.Ui.Style.StyleProp`1
    name: StyleProp
    nameWithType: StyleProp
    fullName: MLEM.Ui.Style.StyleProp
  - name: <
    nameWithType: <
    fullName: <
  - uid: MLEM.Textures.NinePatch
    name: NinePatch
    nameWithType: NinePatch
    fullName: MLEM.Textures.NinePatch
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MLEM.Ui.Style.StyleProp`1
    name: StyleProp
    nameWithType: StyleProp
    fullName: MLEM.Ui.Style.StyleProp
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MLEM.Textures.NinePatch
    name: NinePatch
    nameWithType: NinePatch
    fullName: MLEM.Textures.NinePatch
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Style.StyleProp`1
  commentId: T:MLEM.Ui.Style.StyleProp`1
  parent: MLEM.Ui.Style
  name: StyleProp<T>
  nameWithType: StyleProp<T>
  fullName: MLEM.Ui.Style.StyleProp<T>
  nameWithType.vb: StyleProp(Of T)
  fullName.vb: MLEM.Ui.Style.StyleProp(Of T)
  name.vb: StyleProp(Of T)
  spec.csharp:
  - uid: MLEM.Ui.Style.StyleProp`1
    name: StyleProp
    nameWithType: StyleProp
    fullName: MLEM.Ui.Style.StyleProp
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MLEM.Ui.Style.StyleProp`1
    name: StyleProp
    nameWithType: StyleProp
    fullName: MLEM.Ui.Style.StyleProp
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Style
  commentId: N:MLEM.Ui.Style
  name: MLEM.Ui.Style
  nameWithType: MLEM.Ui.Style
  fullName: MLEM.Ui.Style
- uid: MLEM.Ui.Style.StyleProp{Microsoft.Xna.Framework.Audio.SoundEffectInstance}
  commentId: T:MLEM.Ui.Style.StyleProp{Microsoft.Xna.Framework.Audio.SoundEffectInstance}
  parent: MLEM.Ui.Style
  definition: MLEM.Ui.Style.StyleProp`1
  name: StyleProp<SoundEffectInstance>
  nameWithType: StyleProp<SoundEffectInstance>
  fullName: MLEM.Ui.Style.StyleProp<Microsoft.Xna.Framework.Audio.SoundEffectInstance>
  nameWithType.vb: StyleProp(Of SoundEffectInstance)
  fullName.vb: MLEM.Ui.Style.StyleProp(Of Microsoft.Xna.Framework.Audio.SoundEffectInstance)
  name.vb: StyleProp(Of SoundEffectInstance)
  spec.csharp:
  - uid: MLEM.Ui.Style.StyleProp`1
    name: StyleProp
    nameWithType: StyleProp
    fullName: MLEM.Ui.Style.StyleProp
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Xna.Framework.Audio.SoundEffectInstance
    name: SoundEffectInstance
    nameWithType: SoundEffectInstance
    fullName: Microsoft.Xna.Framework.Audio.SoundEffectInstance
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MLEM.Ui.Style.StyleProp`1
    name: StyleProp
    nameWithType: StyleProp
    fullName: MLEM.Ui.Style.StyleProp
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Xna.Framework.Audio.SoundEffectInstance
    name: SoundEffectInstance
    nameWithType: SoundEffectInstance
    fullName: Microsoft.Xna.Framework.Audio.SoundEffectInstance
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Element.#ctor*
  commentId: Overload:MLEM.Ui.Elements.Element.#ctor
  name: Element
  nameWithType: Element.Element
  fullName: MLEM.Ui.Elements.Element.Element
- uid: MLEM.Ui.Elements.Element.AddChild*
  commentId: Overload:MLEM.Ui.Elements.Element.AddChild
  name: AddChild
  nameWithType: Element.AddChild
  fullName: MLEM.Ui.Elements.Element.AddChild
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: MLEM.Ui.Elements.Element.RemoveChild*
  commentId: Overload:MLEM.Ui.Elements.Element.RemoveChild
  name: RemoveChild
  nameWithType: Element.RemoveChild
  fullName: MLEM.Ui.Elements.Element.RemoveChild
- uid: MLEM.Ui.Elements.Element.RemoveChildren*
  commentId: Overload:MLEM.Ui.Elements.Element.RemoveChildren
  name: RemoveChildren
  nameWithType: Element.RemoveChildren
  fullName: MLEM.Ui.Elements.Element.RemoveChildren
- uid: System.Func{MLEM.Ui.Elements.Element,System.Boolean}
  commentId: T:System.Func{MLEM.Ui.Elements.Element,System.Boolean}
  parent: System
  definition: System.Func`2
  name: Func<Element, Boolean>
  nameWithType: Func<Element, Boolean>
  fullName: System.Func<MLEM.Ui.Elements.Element, System.Boolean>
  nameWithType.vb: Func(Of Element, Boolean)
  fullName.vb: System.Func(Of MLEM.Ui.Elements.Element, System.Boolean)
  name.vb: Func(Of Element, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Element.SetSortedChildrenDirty*
  commentId: Overload:MLEM.Ui.Elements.Element.SetSortedChildrenDirty
  name: SetSortedChildrenDirty
  nameWithType: Element.SetSortedChildrenDirty
  fullName: MLEM.Ui.Elements.Element.SetSortedChildrenDirty
- uid: MLEM.Ui.Elements.Element.UpdateSortedChildrenIfDirty*
  commentId: Overload:MLEM.Ui.Elements.Element.UpdateSortedChildrenIfDirty
  name: UpdateSortedChildrenIfDirty
  nameWithType: Element.UpdateSortedChildrenIfDirty
  fullName: MLEM.Ui.Elements.Element.UpdateSortedChildrenIfDirty
- uid: MLEM.Ui.Elements.Element.ForceUpdateSortedChildren*
  commentId: Overload:MLEM.Ui.Elements.Element.ForceUpdateSortedChildren
  name: ForceUpdateSortedChildren
  nameWithType: Element.ForceUpdateSortedChildren
  fullName: MLEM.Ui.Elements.Element.ForceUpdateSortedChildren
- uid: MLEM.Ui.Elements.Element.SetAreaDirty*
  commentId: Overload:MLEM.Ui.Elements.Element.SetAreaDirty
  name: SetAreaDirty
  nameWithType: Element.SetAreaDirty
  fullName: MLEM.Ui.Elements.Element.SetAreaDirty
- uid: MLEM.Ui.Elements.Element.UpdateAreaIfDirty*
  commentId: Overload:MLEM.Ui.Elements.Element.UpdateAreaIfDirty
  name: UpdateAreaIfDirty
  nameWithType: Element.UpdateAreaIfDirty
  fullName: MLEM.Ui.Elements.Element.UpdateAreaIfDirty
- uid: MLEM.Ui.Elements.Element.ForceUpdateArea*
  commentId: Overload:MLEM.Ui.Elements.Element.ForceUpdateArea
  name: ForceUpdateArea
  nameWithType: Element.ForceUpdateArea
  fullName: MLEM.Ui.Elements.Element.ForceUpdateArea
- uid: MLEM.Ui.Elements.Element.CalcActualSize*
  commentId: Overload:MLEM.Ui.Elements.Element.CalcActualSize
  name: CalcActualSize
  nameWithType: Element.CalcActualSize
  fullName: MLEM.Ui.Elements.Element.CalcActualSize
- uid: MLEM.Ui.Elements.Element.GetAreaForAutoAnchors*
  commentId: Overload:MLEM.Ui.Elements.Element.GetAreaForAutoAnchors
  name: GetAreaForAutoAnchors
  nameWithType: Element.GetAreaForAutoAnchors
  fullName: MLEM.Ui.Elements.Element.GetAreaForAutoAnchors
- uid: MLEM.Ui.Elements.Element.GetLowestChild*
  commentId: Overload:MLEM.Ui.Elements.Element.GetLowestChild
  name: GetLowestChild
  nameWithType: Element.GetLowestChild
  fullName: MLEM.Ui.Elements.Element.GetLowestChild
- uid: MLEM.Ui.Elements.Element.GetRightmostChild*
  commentId: Overload:MLEM.Ui.Elements.Element.GetRightmostChild
  name: GetRightmostChild
  nameWithType: Element.GetRightmostChild
  fullName: MLEM.Ui.Elements.Element.GetRightmostChild
- uid: MLEM.Ui.Elements.Element.GetLowestOlderSibling*
  commentId: Overload:MLEM.Ui.Elements.Element.GetLowestOlderSibling
  name: GetLowestOlderSibling
  nameWithType: Element.GetLowestOlderSibling
  fullName: MLEM.Ui.Elements.Element.GetLowestOlderSibling
- uid: MLEM.Ui.Elements.Element.GetOlderSibling*
  commentId: Overload:MLEM.Ui.Elements.Element.GetOlderSibling
  name: GetOlderSibling
  nameWithType: Element.GetOlderSibling
  fullName: MLEM.Ui.Elements.Element.GetOlderSibling
- uid: MLEM.Ui.Elements.Element.GetSiblings*
  commentId: Overload:MLEM.Ui.Elements.Element.GetSiblings
  name: GetSiblings
  nameWithType: Element.GetSiblings
  fullName: MLEM.Ui.Elements.Element.GetSiblings
- uid: System.Collections.Generic.IEnumerable{MLEM.Ui.Elements.Element}
  commentId: T:System.Collections.Generic.IEnumerable{MLEM.Ui.Elements.Element}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Element>
  nameWithType: IEnumerable<Element>
  fullName: System.Collections.Generic.IEnumerable<MLEM.Ui.Elements.Element>
  nameWithType.vb: IEnumerable(Of Element)
  fullName.vb: System.Collections.Generic.IEnumerable(Of MLEM.Ui.Elements.Element)
  name.vb: IEnumerable(Of Element)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Element.GetChildren*
  commentId: Overload:MLEM.Ui.Elements.Element.GetChildren
  name: GetChildren
  nameWithType: Element.GetChildren
  fullName: MLEM.Ui.Elements.Element.GetChildren
- uid: System.Func{{T},System.Boolean}
  commentId: T:System.Func{``0,System.Boolean}
  parent: System
  definition: System.Func`2
  name: Func<T, Boolean>
  nameWithType: Func<T, Boolean>
  fullName: System.Func<T, System.Boolean>
  nameWithType.vb: Func(Of T, Boolean)
  fullName.vb: System.Func(Of T, System.Boolean)
  name.vb: Func(Of T, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Element.GetParentTree*
  commentId: Overload:MLEM.Ui.Elements.Element.GetParentTree
  name: GetParentTree
  nameWithType: Element.GetParentTree
  fullName: MLEM.Ui.Elements.Element.GetParentTree
- uid: MLEM.Ui.Elements.Element.GetRelevantChildren*
  commentId: Overload:MLEM.Ui.Elements.Element.GetRelevantChildren
  name: GetRelevantChildren
  nameWithType: Element.GetRelevantChildren
  fullName: MLEM.Ui.Elements.Element.GetRelevantChildren
- uid: MLEM.Ui.Elements.Element.Update*
  commentId: Overload:MLEM.Ui.Elements.Element.Update
  name: Update
  nameWithType: Element.Update
  fullName: MLEM.Ui.Elements.Element.Update
- uid: Microsoft.Xna.Framework.GameTime
  commentId: T:Microsoft.Xna.Framework.GameTime
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: GameTime
  nameWithType: GameTime
  fullName: Microsoft.Xna.Framework.GameTime
- uid: MLEM.Ui.Elements.Element.Draw*
  commentId: Overload:MLEM.Ui.Elements.Element.Draw
  name: Draw
  nameWithType: Element.Draw
  fullName: MLEM.Ui.Elements.Element.Draw
- uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
  commentId: T:Microsoft.Xna.Framework.Graphics.SpriteBatch
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: SpriteBatch
  nameWithType: SpriteBatch
  fullName: Microsoft.Xna.Framework.Graphics.SpriteBatch
- uid: Microsoft.Xna.Framework.Graphics.BlendState
  commentId: T:Microsoft.Xna.Framework.Graphics.BlendState
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: BlendState
  nameWithType: BlendState
  fullName: Microsoft.Xna.Framework.Graphics.BlendState
- uid: Microsoft.Xna.Framework.Graphics.SamplerState
  commentId: T:Microsoft.Xna.Framework.Graphics.SamplerState
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: SamplerState
  nameWithType: SamplerState
  fullName: Microsoft.Xna.Framework.Graphics.SamplerState
- uid: Microsoft.Xna.Framework.Matrix
  commentId: T:Microsoft.Xna.Framework.Matrix
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Matrix
  nameWithType: Matrix
  fullName: Microsoft.Xna.Framework.Matrix
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
- uid: MLEM.Ui.Elements.Element.DrawEarly*
  commentId: Overload:MLEM.Ui.Elements.Element.DrawEarly
  name: DrawEarly
  nameWithType: Element.DrawEarly
  fullName: MLEM.Ui.Elements.Element.DrawEarly
- uid: MLEM.Ui.Elements.Element.GetElementUnderPos*
  commentId: Overload:MLEM.Ui.Elements.Element.GetElementUnderPos
  name: GetElementUnderPos
  nameWithType: Element.GetElementUnderPos
  fullName: MLEM.Ui.Elements.Element.GetElementUnderPos
- uid: MLEM.Ui.Elements.Element.AndChildren*
  commentId: Overload:MLEM.Ui.Elements.Element.AndChildren
  name: AndChildren
  nameWithType: Element.AndChildren
  fullName: MLEM.Ui.Elements.Element.AndChildren
- uid: System.Action{MLEM.Ui.Elements.Element}
  commentId: T:System.Action{MLEM.Ui.Elements.Element}
  parent: System
  definition: System.Action`1
  name: Action<Element>
  nameWithType: Action<Element>
  fullName: System.Action<MLEM.Ui.Elements.Element>
  nameWithType.vb: Action(Of Element)
  fullName.vb: System.Action(Of MLEM.Ui.Elements.Element)
  name.vb: Action(Of Element)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Element.ReorderChildren*
  commentId: Overload:MLEM.Ui.Elements.Element.ReorderChildren
  name: ReorderChildren
  nameWithType: Element.ReorderChildren
  fullName: MLEM.Ui.Elements.Element.ReorderChildren
- uid: System.Comparison{MLEM.Ui.Elements.Element}
  commentId: T:System.Comparison{MLEM.Ui.Elements.Element}
  parent: System
  definition: System.Comparison`1
  name: Comparison<Element>
  nameWithType: Comparison<Element>
  fullName: System.Comparison<MLEM.Ui.Elements.Element>
  nameWithType.vb: Comparison(Of Element)
  fullName.vb: System.Comparison(Of MLEM.Ui.Elements.Element)
  name.vb: Comparison(Of Element)
  spec.csharp:
  - uid: System.Comparison`1
    name: Comparison
    nameWithType: Comparison
    fullName: System.Comparison
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Comparison`1
    name: Comparison
    nameWithType: Comparison
    fullName: System.Comparison
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Comparison`1
  commentId: T:System.Comparison`1
  isExternal: true
  name: Comparison<T>
  nameWithType: Comparison<T>
  fullName: System.Comparison<T>
  nameWithType.vb: Comparison(Of T)
  fullName.vb: System.Comparison(Of T)
  name.vb: Comparison(Of T)
  spec.csharp:
  - uid: System.Comparison`1
    name: Comparison
    nameWithType: Comparison
    fullName: System.Comparison
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Comparison`1
    name: Comparison
    nameWithType: Comparison
    fullName: System.Comparison
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Element.ReverseChildren*
  commentId: Overload:MLEM.Ui.Elements.Element.ReverseChildren
  name: ReverseChildren
  nameWithType: Element.ReverseChildren
  fullName: MLEM.Ui.Elements.Element.ReverseChildren
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Element.InitStyle*
  commentId: Overload:MLEM.Ui.Elements.Element.InitStyle
  name: InitStyle
  nameWithType: Element.InitStyle
  fullName: MLEM.Ui.Elements.Element.InitStyle
- uid: MLEM.Ui.Style.UiStyle
  commentId: T:MLEM.Ui.Style.UiStyle
  parent: MLEM.Ui.Style
  name: UiStyle
  nameWithType: UiStyle
  fullName: MLEM.Ui.Style.UiStyle
