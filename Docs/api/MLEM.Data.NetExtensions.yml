### YamlMime:ManagedReference
items:
- uid: MLEM.Data.NetExtensions
  commentId: T:MLEM.Data.NetExtensions
  id: NetExtensions
  parent: MLEM.Data
  children:
  - MLEM.Data.NetExtensions.ReadDirection(Lidgren.Network.NetBuffer)
  - MLEM.Data.NetExtensions.ReadGuid(Lidgren.Network.NetBuffer)
  - MLEM.Data.NetExtensions.ReadObject``1(Lidgren.Network.NetBuffer,Newtonsoft.Json.JsonSerializer)
  - MLEM.Data.NetExtensions.ReadVector2(Lidgren.Network.NetBuffer)
  - MLEM.Data.NetExtensions.Write(Lidgren.Network.NetBuffer,Microsoft.Xna.Framework.Vector2)
  - MLEM.Data.NetExtensions.Write(Lidgren.Network.NetBuffer,MLEM.Misc.Direction2)
  - MLEM.Data.NetExtensions.Write(Lidgren.Network.NetBuffer,System.Guid)
  - MLEM.Data.NetExtensions.WriteObject``1(Lidgren.Network.NetBuffer,``0,Newtonsoft.Json.JsonSerializer)
  langs:
  - csharp
  - vb
  name: NetExtensions
  nameWithType: NetExtensions
  fullName: MLEM.Data.NetExtensions
  type: Class
  source:
    remote:
      path: MLEM.Data/NetExtensions.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: NetExtensions
    path: ../MLEM.Data/NetExtensions.cs
    startLine: 11
  assemblies:
  - MLEM.Data
  namespace: MLEM.Data
  syntax:
    content: public static class NetExtensions
    content.vb: Public Module NetExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: MLEM.Data.NetExtensions.Write(Lidgren.Network.NetBuffer,Microsoft.Xna.Framework.Vector2)
  commentId: M:MLEM.Data.NetExtensions.Write(Lidgren.Network.NetBuffer,Microsoft.Xna.Framework.Vector2)
  id: Write(Lidgren.Network.NetBuffer,Microsoft.Xna.Framework.Vector2)
  isExtensionMethod: true
  parent: MLEM.Data.NetExtensions
  langs:
  - csharp
  - vb
  name: Write(NetBuffer, Vector2)
  nameWithType: NetExtensions.Write(NetBuffer, Vector2)
  fullName: MLEM.Data.NetExtensions.Write(Lidgren.Network.NetBuffer, Microsoft.Xna.Framework.Vector2)
  type: Method
  source:
    remote:
      path: MLEM.Data/NetExtensions.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: Write
    path: ../MLEM.Data/NetExtensions.cs
    startLine: 13
  assemblies:
  - MLEM.Data
  namespace: MLEM.Data
  syntax:
    content: public static void Write(this NetBuffer buffer, Vector2 vector)
    parameters:
    - id: buffer
      type: Lidgren.Network.NetBuffer
    - id: vector
      type: Microsoft.Xna.Framework.Vector2
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Write(buffer As NetBuffer, vector As Vector2)
  overload: MLEM.Data.NetExtensions.Write*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MLEM.Data.NetExtensions.ReadVector2(Lidgren.Network.NetBuffer)
  commentId: M:MLEM.Data.NetExtensions.ReadVector2(Lidgren.Network.NetBuffer)
  id: ReadVector2(Lidgren.Network.NetBuffer)
  isExtensionMethod: true
  parent: MLEM.Data.NetExtensions
  langs:
  - csharp
  - vb
  name: ReadVector2(NetBuffer)
  nameWithType: NetExtensions.ReadVector2(NetBuffer)
  fullName: MLEM.Data.NetExtensions.ReadVector2(Lidgren.Network.NetBuffer)
  type: Method
  source:
    remote:
      path: MLEM.Data/NetExtensions.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: ReadVector2
    path: ../MLEM.Data/NetExtensions.cs
    startLine: 18
  assemblies:
  - MLEM.Data
  namespace: MLEM.Data
  syntax:
    content: public static Vector2 ReadVector2(this NetBuffer buffer)
    parameters:
    - id: buffer
      type: Lidgren.Network.NetBuffer
    return:
      type: Microsoft.Xna.Framework.Vector2
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ReadVector2(buffer As NetBuffer) As Vector2
  overload: MLEM.Data.NetExtensions.ReadVector2*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MLEM.Data.NetExtensions.Write(Lidgren.Network.NetBuffer,System.Guid)
  commentId: M:MLEM.Data.NetExtensions.Write(Lidgren.Network.NetBuffer,System.Guid)
  id: Write(Lidgren.Network.NetBuffer,System.Guid)
  isExtensionMethod: true
  parent: MLEM.Data.NetExtensions
  langs:
  - csharp
  - vb
  name: Write(NetBuffer, Guid)
  nameWithType: NetExtensions.Write(NetBuffer, Guid)
  fullName: MLEM.Data.NetExtensions.Write(Lidgren.Network.NetBuffer, System.Guid)
  type: Method
  source:
    remote:
      path: MLEM.Data/NetExtensions.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: Write
    path: ../MLEM.Data/NetExtensions.cs
    startLine: 22
  assemblies:
  - MLEM.Data
  namespace: MLEM.Data
  syntax:
    content: public static void Write(this NetBuffer buffer, Guid guid)
    parameters:
    - id: buffer
      type: Lidgren.Network.NetBuffer
    - id: guid
      type: System.Guid
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Write(buffer As NetBuffer, guid As Guid)
  overload: MLEM.Data.NetExtensions.Write*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MLEM.Data.NetExtensions.ReadGuid(Lidgren.Network.NetBuffer)
  commentId: M:MLEM.Data.NetExtensions.ReadGuid(Lidgren.Network.NetBuffer)
  id: ReadGuid(Lidgren.Network.NetBuffer)
  isExtensionMethod: true
  parent: MLEM.Data.NetExtensions
  langs:
  - csharp
  - vb
  name: ReadGuid(NetBuffer)
  nameWithType: NetExtensions.ReadGuid(NetBuffer)
  fullName: MLEM.Data.NetExtensions.ReadGuid(Lidgren.Network.NetBuffer)
  type: Method
  source:
    remote:
      path: MLEM.Data/NetExtensions.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: ReadGuid
    path: ../MLEM.Data/NetExtensions.cs
    startLine: 26
  assemblies:
  - MLEM.Data
  namespace: MLEM.Data
  syntax:
    content: public static Guid ReadGuid(this NetBuffer buffer)
    parameters:
    - id: buffer
      type: Lidgren.Network.NetBuffer
    return:
      type: System.Guid
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ReadGuid(buffer As NetBuffer) As Guid
  overload: MLEM.Data.NetExtensions.ReadGuid*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MLEM.Data.NetExtensions.Write(Lidgren.Network.NetBuffer,MLEM.Misc.Direction2)
  commentId: M:MLEM.Data.NetExtensions.Write(Lidgren.Network.NetBuffer,MLEM.Misc.Direction2)
  id: Write(Lidgren.Network.NetBuffer,MLEM.Misc.Direction2)
  isExtensionMethod: true
  parent: MLEM.Data.NetExtensions
  langs:
  - csharp
  - vb
  name: Write(NetBuffer, Direction2)
  nameWithType: NetExtensions.Write(NetBuffer, Direction2)
  fullName: MLEM.Data.NetExtensions.Write(Lidgren.Network.NetBuffer, MLEM.Misc.Direction2)
  type: Method
  source:
    remote:
      path: MLEM.Data/NetExtensions.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: Write
    path: ../MLEM.Data/NetExtensions.cs
    startLine: 30
  assemblies:
  - MLEM.Data
  namespace: MLEM.Data
  syntax:
    content: public static void Write(this NetBuffer buffer, Direction2 direction)
    parameters:
    - id: buffer
      type: Lidgren.Network.NetBuffer
    - id: direction
      type: MLEM.Misc.Direction2
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Write(buffer As NetBuffer, direction As Direction2)
  overload: MLEM.Data.NetExtensions.Write*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MLEM.Data.NetExtensions.ReadDirection(Lidgren.Network.NetBuffer)
  commentId: M:MLEM.Data.NetExtensions.ReadDirection(Lidgren.Network.NetBuffer)
  id: ReadDirection(Lidgren.Network.NetBuffer)
  isExtensionMethod: true
  parent: MLEM.Data.NetExtensions
  langs:
  - csharp
  - vb
  name: ReadDirection(NetBuffer)
  nameWithType: NetExtensions.ReadDirection(NetBuffer)
  fullName: MLEM.Data.NetExtensions.ReadDirection(Lidgren.Network.NetBuffer)
  type: Method
  source:
    remote:
      path: MLEM.Data/NetExtensions.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: ReadDirection
    path: ../MLEM.Data/NetExtensions.cs
    startLine: 34
  assemblies:
  - MLEM.Data
  namespace: MLEM.Data
  syntax:
    content: public static Direction2 ReadDirection(this NetBuffer buffer)
    parameters:
    - id: buffer
      type: Lidgren.Network.NetBuffer
    return:
      type: MLEM.Misc.Direction2
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ReadDirection(buffer As NetBuffer) As Direction2
  overload: MLEM.Data.NetExtensions.ReadDirection*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MLEM.Data.NetExtensions.WriteObject``1(Lidgren.Network.NetBuffer,``0,Newtonsoft.Json.JsonSerializer)
  commentId: M:MLEM.Data.NetExtensions.WriteObject``1(Lidgren.Network.NetBuffer,``0,Newtonsoft.Json.JsonSerializer)
  id: WriteObject``1(Lidgren.Network.NetBuffer,``0,Newtonsoft.Json.JsonSerializer)
  isExtensionMethod: true
  parent: MLEM.Data.NetExtensions
  langs:
  - csharp
  - vb
  name: WriteObject<T>(NetBuffer, T, JsonSerializer)
  nameWithType: NetExtensions.WriteObject<T>(NetBuffer, T, JsonSerializer)
  fullName: MLEM.Data.NetExtensions.WriteObject<T>(Lidgren.Network.NetBuffer, T, Newtonsoft.Json.JsonSerializer)
  type: Method
  source:
    remote:
      path: MLEM.Data/NetExtensions.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: WriteObject
    path: ../MLEM.Data/NetExtensions.cs
    startLine: 38
  assemblies:
  - MLEM.Data
  namespace: MLEM.Data
  syntax:
    content: public static void WriteObject<T>(this NetBuffer buffer, T obj, JsonSerializer serializer)
    parameters:
    - id: buffer
      type: Lidgren.Network.NetBuffer
    - id: obj
      type: '{T}'
    - id: serializer
      type: Newtonsoft.Json.JsonSerializer
    typeParameters:
    - id: T
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub WriteObject(Of T)(buffer As NetBuffer, obj As T, serializer As JsonSerializer)
  overload: MLEM.Data.NetExtensions.WriteObject*
  nameWithType.vb: NetExtensions.WriteObject(Of T)(NetBuffer, T, JsonSerializer)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: MLEM.Data.NetExtensions.WriteObject(Of T)(Lidgren.Network.NetBuffer, T, Newtonsoft.Json.JsonSerializer)
  name.vb: WriteObject(Of T)(NetBuffer, T, JsonSerializer)
- uid: MLEM.Data.NetExtensions.ReadObject``1(Lidgren.Network.NetBuffer,Newtonsoft.Json.JsonSerializer)
  commentId: M:MLEM.Data.NetExtensions.ReadObject``1(Lidgren.Network.NetBuffer,Newtonsoft.Json.JsonSerializer)
  id: ReadObject``1(Lidgren.Network.NetBuffer,Newtonsoft.Json.JsonSerializer)
  isExtensionMethod: true
  parent: MLEM.Data.NetExtensions
  langs:
  - csharp
  - vb
  name: ReadObject<T>(NetBuffer, JsonSerializer)
  nameWithType: NetExtensions.ReadObject<T>(NetBuffer, JsonSerializer)
  fullName: MLEM.Data.NetExtensions.ReadObject<T>(Lidgren.Network.NetBuffer, Newtonsoft.Json.JsonSerializer)
  type: Method
  source:
    remote:
      path: MLEM.Data/NetExtensions.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: ReadObject
    path: ../MLEM.Data/NetExtensions.cs
    startLine: 52
  assemblies:
  - MLEM.Data
  namespace: MLEM.Data
  syntax:
    content: public static T ReadObject<T>(this NetBuffer buffer, JsonSerializer serializer)
    parameters:
    - id: buffer
      type: Lidgren.Network.NetBuffer
    - id: serializer
      type: Newtonsoft.Json.JsonSerializer
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ReadObject(Of T)(buffer As NetBuffer, serializer As JsonSerializer) As T
  overload: MLEM.Data.NetExtensions.ReadObject*
  nameWithType.vb: NetExtensions.ReadObject(Of T)(NetBuffer, JsonSerializer)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: MLEM.Data.NetExtensions.ReadObject(Of T)(Lidgren.Network.NetBuffer, Newtonsoft.Json.JsonSerializer)
  name.vb: ReadObject(Of T)(NetBuffer, JsonSerializer)
references:
- uid: MLEM.Data
  commentId: N:MLEM.Data
  name: MLEM.Data
  nameWithType: MLEM.Data
  fullName: MLEM.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Data.NetExtensions.Write*
  commentId: Overload:MLEM.Data.NetExtensions.Write
  name: Write
  nameWithType: NetExtensions.Write
  fullName: MLEM.Data.NetExtensions.Write
- uid: Lidgren.Network.NetBuffer
  commentId: T:Lidgren.Network.NetBuffer
  parent: Lidgren.Network
  isExternal: true
  name: NetBuffer
  nameWithType: NetBuffer
  fullName: Lidgren.Network.NetBuffer
- uid: Microsoft.Xna.Framework.Vector2
  commentId: T:Microsoft.Xna.Framework.Vector2
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Microsoft.Xna.Framework.Vector2
- uid: Lidgren.Network
  commentId: N:Lidgren.Network
  isExternal: true
  name: Lidgren.Network
  nameWithType: Lidgren.Network
  fullName: Lidgren.Network
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
- uid: MLEM.Data.NetExtensions.ReadVector2*
  commentId: Overload:MLEM.Data.NetExtensions.ReadVector2
  name: ReadVector2
  nameWithType: NetExtensions.ReadVector2
  fullName: MLEM.Data.NetExtensions.ReadVector2
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: MLEM.Data.NetExtensions.ReadGuid*
  commentId: Overload:MLEM.Data.NetExtensions.ReadGuid
  name: ReadGuid
  nameWithType: NetExtensions.ReadGuid
  fullName: MLEM.Data.NetExtensions.ReadGuid
- uid: MLEM.Misc.Direction2
  commentId: T:MLEM.Misc.Direction2
  parent: MLEM.Misc
  name: Direction2
  nameWithType: Direction2
  fullName: MLEM.Misc.Direction2
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
- uid: MLEM.Data.NetExtensions.ReadDirection*
  commentId: Overload:MLEM.Data.NetExtensions.ReadDirection
  name: ReadDirection
  nameWithType: NetExtensions.ReadDirection
  fullName: MLEM.Data.NetExtensions.ReadDirection
- uid: MLEM.Data.NetExtensions.WriteObject*
  commentId: Overload:MLEM.Data.NetExtensions.WriteObject
  name: WriteObject
  nameWithType: NetExtensions.WriteObject
  fullName: MLEM.Data.NetExtensions.WriteObject
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: Newtonsoft.Json.JsonSerializer
  commentId: T:Newtonsoft.Json.JsonSerializer
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonSerializer
  nameWithType: JsonSerializer
  fullName: Newtonsoft.Json.JsonSerializer
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Newtonsoft.Json
  commentId: N:Newtonsoft.Json
  isExternal: true
  name: Newtonsoft.Json
  nameWithType: Newtonsoft.Json
  fullName: Newtonsoft.Json
- uid: MLEM.Data.NetExtensions.ReadObject*
  commentId: Overload:MLEM.Data.NetExtensions.ReadObject
  name: ReadObject
  nameWithType: NetExtensions.ReadObject
  fullName: MLEM.Data.NetExtensions.ReadObject
