### YamlMime:ManagedReference
items:
- uid: MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo
  commentId: T:MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo
  id: TiledMapCollisions.TileCollisionInfo
  parent: MLEM.Extended.Tiled
  children:
  - MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo.#ctor(MonoGame.Extended.Tiled.TiledMap,Microsoft.Xna.Framework.Vector2,MonoGame.Extended.Tiled.TiledMapTile,MonoGame.Extended.Tiled.TiledMapTileLayer,MonoGame.Extended.Tiled.TiledMapTilesetTile,MLEM.Extended.Tiled.TiledMapCollisions.CollectCollisions)
  - MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo.Collisions
  - MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo.Layer
  - MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo.Map
  - MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo.Position
  - MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo.Tile
  - MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo.TilesetTile
  langs:
  - csharp
  - vb
  name: TiledMapCollisions.TileCollisionInfo
  nameWithType: TiledMapCollisions.TileCollisionInfo
  fullName: MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo
  type: Class
  source:
    remote:
      path: MLEM.Extended/Tiled/TiledMapCollisions.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: TileCollisionInfo
    path: ../MLEM.Extended/Tiled/TiledMapCollisions.cs
    startLine: 82
  assemblies:
  - MLEM.Extended
  namespace: MLEM.Extended.Tiled
  syntax:
    content: 'public class TileCollisionInfo : GenericDataHolder'
    content.vb: >-
      Public Class TileCollisionInfo

          Inherits GenericDataHolder
  inheritance:
  - System.Object
  - MLEM.Misc.GenericDataHolder
  inheritedMembers:
  - MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
  - MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  - MLEM.Misc.GenericDataHolder.GetDataKeys
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo.Map
  commentId: F:MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo.Map
  id: Map
  parent: MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo
  langs:
  - csharp
  - vb
  name: Map
  nameWithType: TiledMapCollisions.TileCollisionInfo.Map
  fullName: MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo.Map
  type: Field
  source:
    remote:
      path: MLEM.Extended/Tiled/TiledMapCollisions.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: Map
    path: ../MLEM.Extended/Tiled/TiledMapCollisions.cs
    startLine: 84
  assemblies:
  - MLEM.Extended
  namespace: MLEM.Extended.Tiled
  syntax:
    content: public readonly TiledMap Map
    return:
      type: MonoGame.Extended.Tiled.TiledMap
    content.vb: Public ReadOnly Map As TiledMap
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo.Position
  commentId: F:MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo.Position
  id: Position
  parent: MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: TiledMapCollisions.TileCollisionInfo.Position
  fullName: MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo.Position
  type: Field
  source:
    remote:
      path: MLEM.Extended/Tiled/TiledMapCollisions.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: Position
    path: ../MLEM.Extended/Tiled/TiledMapCollisions.cs
    startLine: 85
  assemblies:
  - MLEM.Extended
  namespace: MLEM.Extended.Tiled
  syntax:
    content: public readonly Vector2 Position
    return:
      type: Microsoft.Xna.Framework.Vector2
    content.vb: Public ReadOnly Position As Vector2
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo.Tile
  commentId: F:MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo.Tile
  id: Tile
  parent: MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo
  langs:
  - csharp
  - vb
  name: Tile
  nameWithType: TiledMapCollisions.TileCollisionInfo.Tile
  fullName: MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo.Tile
  type: Field
  source:
    remote:
      path: MLEM.Extended/Tiled/TiledMapCollisions.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: Tile
    path: ../MLEM.Extended/Tiled/TiledMapCollisions.cs
    startLine: 86
  assemblies:
  - MLEM.Extended
  namespace: MLEM.Extended.Tiled
  syntax:
    content: public readonly TiledMapTile Tile
    return:
      type: MonoGame.Extended.Tiled.TiledMapTile
    content.vb: Public ReadOnly Tile As TiledMapTile
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo.Layer
  commentId: F:MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo.Layer
  id: Layer
  parent: MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo
  langs:
  - csharp
  - vb
  name: Layer
  nameWithType: TiledMapCollisions.TileCollisionInfo.Layer
  fullName: MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo.Layer
  type: Field
  source:
    remote:
      path: MLEM.Extended/Tiled/TiledMapCollisions.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: Layer
    path: ../MLEM.Extended/Tiled/TiledMapCollisions.cs
    startLine: 87
  assemblies:
  - MLEM.Extended
  namespace: MLEM.Extended.Tiled
  syntax:
    content: public readonly TiledMapTileLayer Layer
    return:
      type: MonoGame.Extended.Tiled.TiledMapTileLayer
    content.vb: Public ReadOnly Layer As TiledMapTileLayer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo.TilesetTile
  commentId: F:MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo.TilesetTile
  id: TilesetTile
  parent: MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo
  langs:
  - csharp
  - vb
  name: TilesetTile
  nameWithType: TiledMapCollisions.TileCollisionInfo.TilesetTile
  fullName: MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo.TilesetTile
  type: Field
  source:
    remote:
      path: MLEM.Extended/Tiled/TiledMapCollisions.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: TilesetTile
    path: ../MLEM.Extended/Tiled/TiledMapCollisions.cs
    startLine: 88
  assemblies:
  - MLEM.Extended
  namespace: MLEM.Extended.Tiled
  syntax:
    content: public readonly TiledMapTilesetTile TilesetTile
    return:
      type: MonoGame.Extended.Tiled.TiledMapTilesetTile
    content.vb: Public ReadOnly TilesetTile As TiledMapTilesetTile
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo.Collisions
  commentId: F:MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo.Collisions
  id: Collisions
  parent: MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo
  langs:
  - csharp
  - vb
  name: Collisions
  nameWithType: TiledMapCollisions.TileCollisionInfo.Collisions
  fullName: MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo.Collisions
  type: Field
  source:
    remote:
      path: MLEM.Extended/Tiled/TiledMapCollisions.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: Collisions
    path: ../MLEM.Extended/Tiled/TiledMapCollisions.cs
    startLine: 89
  assemblies:
  - MLEM.Extended
  namespace: MLEM.Extended.Tiled
  syntax:
    content: public readonly List<RectangleF> Collisions
    return:
      type: System.Collections.Generic.List{MonoGame.Extended.RectangleF}
    content.vb: Public ReadOnly Collisions As List(Of RectangleF)
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo.#ctor(MonoGame.Extended.Tiled.TiledMap,Microsoft.Xna.Framework.Vector2,MonoGame.Extended.Tiled.TiledMapTile,MonoGame.Extended.Tiled.TiledMapTileLayer,MonoGame.Extended.Tiled.TiledMapTilesetTile,MLEM.Extended.Tiled.TiledMapCollisions.CollectCollisions)
  commentId: M:MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo.#ctor(MonoGame.Extended.Tiled.TiledMap,Microsoft.Xna.Framework.Vector2,MonoGame.Extended.Tiled.TiledMapTile,MonoGame.Extended.Tiled.TiledMapTileLayer,MonoGame.Extended.Tiled.TiledMapTilesetTile,MLEM.Extended.Tiled.TiledMapCollisions.CollectCollisions)
  id: '#ctor(MonoGame.Extended.Tiled.TiledMap,Microsoft.Xna.Framework.Vector2,MonoGame.Extended.Tiled.TiledMapTile,MonoGame.Extended.Tiled.TiledMapTileLayer,MonoGame.Extended.Tiled.TiledMapTilesetTile,MLEM.Extended.Tiled.TiledMapCollisions.CollectCollisions)'
  parent: MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo
  langs:
  - csharp
  - vb
  name: TileCollisionInfo(TiledMap, Vector2, TiledMapTile, TiledMapTileLayer, TiledMapTilesetTile, TiledMapCollisions.CollectCollisions)
  nameWithType: TiledMapCollisions.TileCollisionInfo.TileCollisionInfo(TiledMap, Vector2, TiledMapTile, TiledMapTileLayer, TiledMapTilesetTile, TiledMapCollisions.CollectCollisions)
  fullName: MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo.TileCollisionInfo(MonoGame.Extended.Tiled.TiledMap, Microsoft.Xna.Framework.Vector2, MonoGame.Extended.Tiled.TiledMapTile, MonoGame.Extended.Tiled.TiledMapTileLayer, MonoGame.Extended.Tiled.TiledMapTilesetTile, MLEM.Extended.Tiled.TiledMapCollisions.CollectCollisions)
  type: Constructor
  source:
    remote:
      path: MLEM.Extended/Tiled/TiledMapCollisions.cs
      branch: master
      repo: https://github.com/Ellpeck/MLEM
    id: .ctor
    path: ../MLEM.Extended/Tiled/TiledMapCollisions.cs
    startLine: 91
  assemblies:
  - MLEM.Extended
  namespace: MLEM.Extended.Tiled
  syntax:
    content: public TileCollisionInfo(TiledMap map, Vector2 position, TiledMapTile tile, TiledMapTileLayer layer, TiledMapTilesetTile tilesetTile, TiledMapCollisions.CollectCollisions collisionFunction)
    parameters:
    - id: map
      type: MonoGame.Extended.Tiled.TiledMap
    - id: position
      type: Microsoft.Xna.Framework.Vector2
    - id: tile
      type: MonoGame.Extended.Tiled.TiledMapTile
    - id: layer
      type: MonoGame.Extended.Tiled.TiledMapTileLayer
    - id: tilesetTile
      type: MonoGame.Extended.Tiled.TiledMapTilesetTile
    - id: collisionFunction
      type: MLEM.Extended.Tiled.TiledMapCollisions.CollectCollisions
    content.vb: Public Sub New(map As TiledMap, position As Vector2, tile As TiledMapTile, layer As TiledMapTileLayer, tilesetTile As TiledMapTilesetTile, collisionFunction As TiledMapCollisions.CollectCollisions)
  overload: MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: MLEM.Extended.Tiled
  commentId: N:MLEM.Extended.Tiled
  name: MLEM.Extended.Tiled
  nameWithType: MLEM.Extended.Tiled
  fullName: MLEM.Extended.Tiled
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: MLEM.Misc.GenericDataHolder
  commentId: T:MLEM.Misc.GenericDataHolder
  parent: MLEM.Misc
  name: GenericDataHolder
  nameWithType: GenericDataHolder
  fullName: MLEM.Misc.GenericDataHolder
- uid: MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
  commentId: M:MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
  parent: MLEM.Misc.GenericDataHolder
  isExternal: true
  name: SetData(String, Object)
  nameWithType: GenericDataHolder.SetData(String, Object)
  fullName: MLEM.Misc.GenericDataHolder.SetData(System.String, System.Object)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
    name: SetData
    nameWithType: GenericDataHolder.SetData
    fullName: MLEM.Misc.GenericDataHolder.SetData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
    name: SetData
    nameWithType: GenericDataHolder.SetData
    fullName: MLEM.Misc.GenericDataHolder.SetData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  commentId: M:MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  parent: MLEM.Misc.GenericDataHolder
  isExternal: true
  name: GetData<T>(String)
  nameWithType: GenericDataHolder.GetData<T>(String)
  fullName: MLEM.Misc.GenericDataHolder.GetData<T>(System.String)
  nameWithType.vb: GenericDataHolder.GetData(Of T)(String)
  fullName.vb: MLEM.Misc.GenericDataHolder.GetData(Of T)(System.String)
  name.vb: GetData(Of T)(String)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
    name: GetData<T>
    nameWithType: GenericDataHolder.GetData<T>
    fullName: MLEM.Misc.GenericDataHolder.GetData<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
    name: GetData(Of T)
    nameWithType: GenericDataHolder.GetData(Of T)
    fullName: MLEM.Misc.GenericDataHolder.GetData(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Misc.GenericDataHolder.GetDataKeys
  commentId: M:MLEM.Misc.GenericDataHolder.GetDataKeys
  parent: MLEM.Misc.GenericDataHolder
  name: GetDataKeys()
  nameWithType: GenericDataHolder.GetDataKeys()
  fullName: MLEM.Misc.GenericDataHolder.GetDataKeys()
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.GetDataKeys
    name: GetDataKeys
    nameWithType: GenericDataHolder.GetDataKeys
    fullName: MLEM.Misc.GenericDataHolder.GetDataKeys
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.GetDataKeys
    name: GetDataKeys
    nameWithType: GenericDataHolder.GetDataKeys
    fullName: MLEM.Misc.GenericDataHolder.GetDataKeys
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
- uid: MonoGame.Extended.Tiled.TiledMap
  commentId: T:MonoGame.Extended.Tiled.TiledMap
  parent: MonoGame.Extended.Tiled
  isExternal: true
  name: TiledMap
  nameWithType: TiledMap
  fullName: MonoGame.Extended.Tiled.TiledMap
- uid: MonoGame.Extended.Tiled
  commentId: N:MonoGame.Extended.Tiled
  isExternal: true
  name: MonoGame.Extended.Tiled
  nameWithType: MonoGame.Extended.Tiled
  fullName: MonoGame.Extended.Tiled
- uid: Microsoft.Xna.Framework.Vector2
  commentId: T:Microsoft.Xna.Framework.Vector2
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Microsoft.Xna.Framework.Vector2
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
- uid: MonoGame.Extended.Tiled.TiledMapTile
  commentId: T:MonoGame.Extended.Tiled.TiledMapTile
  parent: MonoGame.Extended.Tiled
  isExternal: true
  name: TiledMapTile
  nameWithType: TiledMapTile
  fullName: MonoGame.Extended.Tiled.TiledMapTile
- uid: MonoGame.Extended.Tiled.TiledMapTileLayer
  commentId: T:MonoGame.Extended.Tiled.TiledMapTileLayer
  parent: MonoGame.Extended.Tiled
  isExternal: true
  name: TiledMapTileLayer
  nameWithType: TiledMapTileLayer
  fullName: MonoGame.Extended.Tiled.TiledMapTileLayer
- uid: MonoGame.Extended.Tiled.TiledMapTilesetTile
  commentId: T:MonoGame.Extended.Tiled.TiledMapTilesetTile
  parent: MonoGame.Extended.Tiled
  isExternal: true
  name: TiledMapTilesetTile
  nameWithType: TiledMapTilesetTile
  fullName: MonoGame.Extended.Tiled.TiledMapTilesetTile
- uid: System.Collections.Generic.List{MonoGame.Extended.RectangleF}
  commentId: T:System.Collections.Generic.List{MonoGame.Extended.RectangleF}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<RectangleF>
  nameWithType: List<RectangleF>
  fullName: System.Collections.Generic.List<MonoGame.Extended.RectangleF>
  nameWithType.vb: List(Of RectangleF)
  fullName.vb: System.Collections.Generic.List(Of MonoGame.Extended.RectangleF)
  name.vb: List(Of RectangleF)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MonoGame.Extended.RectangleF
    name: RectangleF
    nameWithType: RectangleF
    fullName: MonoGame.Extended.RectangleF
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MonoGame.Extended.RectangleF
    name: RectangleF
    nameWithType: RectangleF
    fullName: MonoGame.Extended.RectangleF
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo.#ctor*
  commentId: Overload:MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo.#ctor
  name: TileCollisionInfo
  nameWithType: TiledMapCollisions.TileCollisionInfo.TileCollisionInfo
  fullName: MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo.TileCollisionInfo
- uid: MLEM.Extended.Tiled.TiledMapCollisions.CollectCollisions
  commentId: T:MLEM.Extended.Tiled.TiledMapCollisions.CollectCollisions
  parent: MLEM.Extended.Tiled
  name: TiledMapCollisions.CollectCollisions
  nameWithType: TiledMapCollisions.CollectCollisions
  fullName: MLEM.Extended.Tiled.TiledMapCollisions.CollectCollisions
